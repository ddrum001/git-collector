repo_name,new_commit_id,new_file_path,previous_commit_id,previous_file_path,commit_date,committer_name,committer_email,subject,message,new_code,previous_code,code_diff
"Microsoft/vscode",1628bf01304e9a63bbd8a34fea74a68e37788be1,"extensions/clojure/syntaxes/Clojure.tmLanguage",fa614d82f051808994aaecd3235fa7519cb1f171,"extensions/clojure/syntaxes/Clojure.tmLanguage",2015-11-20 22:23:54 UTC,"lucas.lra@gmail.com","edadd4723f419e622cd1465d26e754d8e0d55d48@GITH","- Included some Clojure Extensions - Included one Powershell Extension - Included some Csharp Keywords - Reorganization of the language.main.js define call (To match the folders order)","- Included some Clojure Extensions- Included one Powershell Extension- Included some Csharp Keywords- Reorganization of the language.main.js define call (To match the folders order)","<?xml version="1.0" encoding="UTF-8"?>\n<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">\n<plist version="1.0">\n<dict>\n	<key>fileTypes</key>\n	<array>\n		<string>clj</string>\n		<string>cljs</string>\n		<string>clojure</string>\n		<string>cljc</string>\n		<string>cljx</string>\n		<string>edn</string>\n	</array>\n	<key>foldingStartMarker</key>\n	<string>\(\s*$</string>\n	<key>foldingStopMarker</key>\n	<string>^\s*\)</string>\n	<key>keyEquivalent</key>\n	<string>^~C</string>\n	<key>name</key>\n	<string>Clojure</string>\n	<key>patterns</key>\n	<array>\n		<dict>\n			<key>include</key>\n			<string>#comment</string>\n		</dict>\n		<dict>\n			<key>include</key>\n			<string>#shebang-comment</string>\n		</dict>\n		<dict>\n			<key>include</key>\n			<string>#qouted-sexp</string>\n		</dict>\n		<dict>\n			<key>include</key>\n			<string>#sexp</string>\n		</dict>\n		<dict>\n			<key>include</key>\n			<string>#keyfn</string>\n		</dict>\n		<dict>\n			<key>include</key>\n			<string>#string</string>\n		</dict>\n		<dict>\n			<key>include</key>\n			<string>#vector</string>\n		</dict>\n		<dict>\n			<key>include</key>\n			<string>#set</string>\n		</dict>\n		<dict>\n			<key>include</key>\n			<string>#map</string>\n		</dict>\n		<dict>\n			<key>include</key>\n			<string>#regexp</string>\n		</dict>\n		<dict>\n			<key>include</key>\n			<string>#var</string>\n		</dict>\n		<dict>\n			<key>include</key>\n			<string>#constants</string>\n		</dict>\n		<dict>\n			<key>include</key>\n			<string>#symbol</string>\n		</dict>\n		<dict>\n			<key>include</key>\n			<string>#whitespace</string>\n		</dict>\n	</array>\n	<key>repository</key>\n	<dict>\n		<key>comment</key>\n		<dict>\n			<key>captures</key>\n			<dict>\n				<key>1</key>\n				<dict>\n					<key>name</key>\n					<string>punctuation.definition.comment.clojure</string>\n				</dict>\n			</dict>\n			<key>match</key>\n			<string>(;).*$\n?</string>\n			<key>name</key>\n			<string>comment.line.semicolon.clojure</string>\n		</dict>\n		<key>constants</key>\n		<dict>\n			<key>patterns</key>\n			<array>\n				<dict>\n					<key>match</key>\n					<string>(nil)(?=(\s|\)|\]|\}))</string>\n					<key>name</key>\n					<string>constant.language.nil.clojure</string>\n				</dict>\n				<dict>\n					<key>match</key>\n					<string>(true|false)</string>\n					<key>name</key>\n					<string>constant.language.boolean.clojure</string>\n				</dict>\n				<dict>\n					<key>match</key>\n					<string>(\d+/\d+)</string>\n					<key>name</key>\n					<string>constant.numeric.ratio.clojure</string>\n				</dict>\n				<dict>\n					<key>match</key>\n					<string>(\d+r\d+)</string>\n					<key>name</key>\n					<string>constant.numeric.arbitrary-radix.clojure</string>\n				</dict>\n				<dict>\n					<key>match</key>\n					<string>(0x\d+)</string>\n					<key>name</key>\n					<string>constant.numeric.hexidecimal.clojure</string>\n				</dict>\n				<dict>\n					<key>match</key>\n					<string>(0\d+)</string>\n					<key>name</key>\n					<string>constant.numeric.octal.clojure</string>\n				</dict>\n				<dict>\n					<key>match</key>\n					<string>(\d+)</string>\n					<key>name</key>\n					<string>constant.numeric.decimal.clojure</string>\n				</dict>\n				<dict>\n					<key>match</key>\n					<string>(?&lt;=(\s|\(|\[|\{)):[a-zA-Z0-9\#\.\-\_\:\+\=\&gt;\&lt;\/\!\?\*]+(?=(\s|\)|\]|\}))</string>\n					<key>name</key>\n					<string>constant.keyword.clojure</string>\n				</dict>\n			</array>\n		</dict>\n		<key>keyfn</key>\n		<dict>\n			<key>patterns</key>\n			<array>\n				<dict>\n					<key>match</key>\n					<string>(?&lt;=(\s|\(|\[|\{))(if(-[-a-z\?]*)?|when(-[-a-z]*)?|for(-[-a-z]*)?|cond|do|let(-[-a-z\?]*)?|binding|loop|recur|fn|throw[a-z\-]*|try|catch|finally|([a-z]*case))(?=(\s|\)|\]|\}))</string>\n					<key>name</key>\n					<string>storage.control.clojure</string>\n				</dict>\n				<dict>\n					<key>match</key>\n					<string>(?&lt;=(\s|\(|\[|\{))(declare-?|(in-)?ns|import|use|require|load|compile|(def[a-z\-]*))(?=(\s|\)|\]|\}))</string>\n					<key>name</key>\n					<string>keyword.control.clojure</string>\n				</dict>\n			</array>\n		</dict>\n		<key>map</key>\n		<dict>\n			<key>begin</key>\n			<string>(\{)</string>\n			<key>end</key>\n			<string>(\})</string>\n			<key>name</key>\n			<string>meta.map.clojure</string>\n			<key>patterns</key>\n			<array>\n				<dict>\n					<key>include</key>\n					<string>$self</string>\n				</dict>\n			</array>\n		</dict>\n		<key>qouted-sexp</key>\n		<dict>\n			<key>begin</key>\n			<string>(['``]\()</string>\n			<key>beginCaptures</key>\n			<dict>\n				<key>1</key>\n				<dict>\n					<key>name</key>\n					<string>punctuation.section.expression.begin.clojure</string>\n				</dict>\n			</dict>\n			<key>end</key>\n			<string>(\))(\n)?</string>\n			<key>endCaptures</key>\n			<dict>\n				<key>1</key>\n				<dict>\n					<key>name</key>\n					<string>punctuation.section.expression.end.clojure</string>\n				</dict>\n				<key>2</key>\n				<dict>\n					<key>name</key>\n					<string>meta.after-expression.clojure</string>\n				</dict>\n			</dict>\n			<key>name</key>\n			<string>meta.qouted-expression.clojure</string>\n			<key>patterns</key>\n			<array>\n				<dict>\n					<key>include</key>\n					<string>$self</string>\n				</dict>\n			</array>\n		</dict>\n		<key>regexp</key>\n		<dict>\n			<key>begin</key>\n			<string>#\"</string>\n			<key>end</key>\n			<string>\"</string>\n			<key>name</key>\n			<string>string.regexp.clojure</string>\n			<key>patterns</key>\n			<array>\n				<dict>\n					<key>include</key>\n					<string>#regexp_escaped_char</string>\n				</dict>\n			</array>\n		</dict>\n		<key>regexp_escaped_char</key>\n		<dict>\n			<key>match</key>\n			<string>\\(\")</string>\n			<key>name</key>\n			<string>string.regexp.clojure</string>\n		</dict>\n		<key>set</key>\n		<dict>\n			<key>begin</key>\n			<string>(\#\{)</string>\n			<key>end</key>\n			<string>(\})</string>\n			<key>name</key>\n			<string>meta.set.clojure</string>\n			<key>patterns</key>\n			<array>\n				<dict>\n					<key>include</key>\n					<string>$self</string>\n				</dict>\n			</array>\n		</dict>\n		<key>sexp</key>\n		<dict>\n			<key>begin</key>\n			<string>(\()</string>\n			<key>beginCaptures</key>\n			<dict>\n				<key>1</key>\n				<dict>\n					<key>name</key>\n					<string>punctuation.section.expression.begin.clojure</string>\n				</dict>\n			</dict>\n			<key>end</key>\n			<string>(\))(\n)?</string>\n			<key>endCaptures</key>\n			<dict>\n				<key>1</key>\n				<dict>\n					<key>name</key>\n					<string>punctuation.section.expression.end.clojure</string>\n				</dict>\n				<key>2</key>\n				<dict>\n					<key>name</key>\n					<string>meta.after-expression.clojure</string>\n				</dict>\n			</dict>\n			<key>name</key>\n			<string>meta.expression.clojure</string>\n			<key>patterns</key>\n			<array>\n				<dict>\n					<key>begin</key>\n					<string>(?&lt;=\()(ns|def|def-|defn|defn-|defvar|defvar-|defmacro|defmacro-|deftest)\s+(.+?)(?=\s)</string>\n					<key>beginCaptures</key>\n					<dict>\n						<key>1</key>\n						<dict>\n							<key>name</key>\n							<string>keyword.control.clojure</string>\n						</dict>\n						<key>2</key>\n						<dict>\n							<key>name</key>\n							<string>entity.global.clojure</string>\n						</dict>\n					</dict>\n					<key>end</key>\n					<string>(?=\))</string>\n					<key>name</key>\n					<string>meta.definition.global.clojure</string>\n					<key>patterns</key>\n					<array>\n						<dict>\n							<key>include</key>\n							<string>$self</string>\n						</dict>\n					</array>\n				</dict>\n				<dict>\n					<key>include</key>\n					<string>$self</string>\n				</dict>\n			</array>\n		</dict>\n		<key>shebang-comment</key>\n		<dict>\n			<key>captures</key>\n			<dict>\n				<key>1</key>\n				<dict>\n					<key>name</key>\n					<string>punctuation.definition.comment.shebang.clojure</string>\n				</dict>\n			</dict>\n			<key>match</key>\n			<string>^(\#!).*$\n?</string>\n			<key>name</key>\n			<string>comment.line.semicolon.clojure</string>\n		</dict>\n		<key>string</key>\n		<dict>\n			<key>begin</key>\n			<string>(")</string>\n			<key>beginCaptures</key>\n			<dict>\n				<key>1</key>\n				<dict>\n					<key>name</key>\n					<string>punctuation.definition.string.begin.clojure</string>\n				</dict>\n			</dict>\n			<key>end</key>\n			<string>(")</string>\n			<key>endCaptures</key>\n			<dict>\n				<key>1</key>\n				<dict>\n					<key>name</key>\n					<string>punctuation.definition.string.end.clojure</string>\n				</dict>\n			</dict>\n			<key>name</key>\n			<string>string.quoted.double.clojure</string>\n			<key>patterns</key>\n			<array>\n				<dict>\n					<key>match</key>\n					<string>\\.</string>\n					<key>name</key>\n					<string>constant.character.escape.clojure</string>\n				</dict>\n			</array>\n		</dict>\n		<key>symbol</key>\n		<dict>\n			<key>patterns</key>\n			<array>\n				<dict>\n					<key>match</key>\n					<string>(\w[\w\d]+)</string>\n					<key>name</key>\n					<string>meta.symbol.clojure</string>\n				</dict>\n			</array>\n		</dict>\n		<key>var</key>\n		<dict>\n			<key>match</key>\n			<string>(?&lt;=(\s|\(|\[|\{)\#)'[a-zA-Z0-9\.\-\_\:\+\=\&gt;\&lt;\/\!\?\*]+(?=(\s|\)|\]|\}))</string>\n			<key>name</key>\n			<string>meta.var.clojure</string>\n		</dict>\n		<key>vector</key>\n		<dict>\n			<key>begin</key>\n			<string>(\[)</string>\n			<key>end</key>\n			<string>(\])</string>\n			<key>name</key>\n			<string>meta.vector.clojure</string>\n			<key>patterns</key>\n			<array>\n				<dict>\n					<key>include</key>\n					<string>$self</string>\n				</dict>\n			</array>\n		</dict>\n		<key>whitespace</key>\n		<dict>\n			<key>match</key>\n			<string>\s+$</string>\n			<key>name</key>\n			<string>invalid.trailing-whitespace</string>\n		</dict>\n	</dict>\n	<key>scopeName</key>\n	<string>source.clojure</string>\n	<key>smartTypingPairs</key>\n	<array>\n		<array>\n			<string>"</string>\n			<string>"</string>\n		</array>\n		<array>\n			<string>(</string>\n			<string>)</string>\n		</array>\n		<array>\n			<string>{</string>\n			<string>}</string>\n		</array>\n		<array>\n			<string>[</string>\n			<string>]</string>\n		</array>\n	</array>\n	<key>uuid</key>\n	<string>6A87759F-F746-4E84-B788-965B46363202</string>\n</dict>\n</plist>","<?xml version="1.0" encoding="UTF-8"?>\n<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">\n<plist version="1.0">\n<dict>\n	<key>fileTypes</key>\n	<array>\n		<string>clj</string>\n		<string>cljs</string>\n		<string>clojure</string>\n	</array>\n	<key>foldingStartMarker</key>\n	<string>\(\s*$</string>\n	<key>foldingStopMarker</key>\n	<string>^\s*\)</string>\n	<key>keyEquivalent</key>\n	<string>^~C</string>\n	<key>name</key>\n	<string>Clojure</string>\n	<key>patterns</key>\n	<array>\n		<dict>\n			<key>include</key>\n			<string>#comment</string>\n		</dict>\n		<dict>\n			<key>include</key>\n			<string>#shebang-comment</string>\n		</dict>\n		<dict>\n			<key>include</key>\n			<string>#qouted-sexp</string>\n		</dict>\n		<dict>\n			<key>include</key>\n			<string>#sexp</string>\n		</dict>\n		<dict>\n			<key>include</key>\n			<string>#keyfn</string>\n		</dict>\n		<dict>\n			<key>include</key>\n			<string>#string</string>\n		</dict>\n		<dict>\n			<key>include</key>\n			<string>#vector</string>\n		</dict>\n		<dict>\n			<key>include</key>\n			<string>#set</string>\n		</dict>\n		<dict>\n			<key>include</key>\n			<string>#map</string>\n		</dict>\n		<dict>\n			<key>include</key>\n			<string>#regexp</string>\n		</dict>\n		<dict>\n			<key>include</key>\n			<string>#var</string>\n		</dict>\n		<dict>\n			<key>include</key>\n			<string>#constants</string>\n		</dict>\n		<dict>\n			<key>include</key>\n			<string>#symbol</string>\n		</dict>\n		<dict>\n			<key>include</key>\n			<string>#whitespace</string>\n		</dict>\n	</array>\n	<key>repository</key>\n	<dict>\n		<key>comment</key>\n		<dict>\n			<key>captures</key>\n			<dict>\n				<key>1</key>\n				<dict>\n					<key>name</key>\n					<string>punctuation.definition.comment.clojure</string>\n				</dict>\n			</dict>\n			<key>match</key>\n			<string>(;).*$\n?</string>\n			<key>name</key>\n			<string>comment.line.semicolon.clojure</string>\n		</dict>\n		<key>constants</key>\n		<dict>\n			<key>patterns</key>\n			<array>\n				<dict>\n					<key>match</key>\n					<string>(nil)(?=(\s|\)|\]|\}))</string>\n					<key>name</key>\n					<string>constant.language.nil.clojure</string>\n				</dict>\n				<dict>\n					<key>match</key>\n					<string>(true|false)</string>\n					<key>name</key>\n					<string>constant.language.boolean.clojure</string>\n				</dict>\n				<dict>\n					<key>match</key>\n					<string>(\d+/\d+)</string>\n					<key>name</key>\n					<string>constant.numeric.ratio.clojure</string>\n				</dict>\n				<dict>\n					<key>match</key>\n					<string>(\d+r\d+)</string>\n					<key>name</key>\n					<string>constant.numeric.arbitrary-radix.clojure</string>\n				</dict>\n				<dict>\n					<key>match</key>\n					<string>(0x\d+)</string>\n					<key>name</key>\n					<string>constant.numeric.hexidecimal.clojure</string>\n				</dict>\n				<dict>\n					<key>match</key>\n					<string>(0\d+)</string>\n					<key>name</key>\n					<string>constant.numeric.octal.clojure</string>\n				</dict>\n				<dict>\n					<key>match</key>\n					<string>(\d+)</string>\n					<key>name</key>\n					<string>constant.numeric.decimal.clojure</string>\n				</dict>\n				<dict>\n					<key>match</key>\n					<string>(?&lt;=(\s|\(|\[|\{)):[a-zA-Z0-9\#\.\-\_\:\+\=\&gt;\&lt;\/\!\?\*]+(?=(\s|\)|\]|\}))</string>\n					<key>name</key>\n					<string>constant.keyword.clojure</string>\n				</dict>\n			</array>\n		</dict>\n		<key>keyfn</key>\n		<dict>\n			<key>patterns</key>\n			<array>\n				<dict>\n					<key>match</key>\n					<string>(?&lt;=(\s|\(|\[|\{))(if(-[-a-z\?]*)?|when(-[-a-z]*)?|for(-[-a-z]*)?|cond|do|let(-[-a-z\?]*)?|binding|loop|recur|fn|throw[a-z\-]*|try|catch|finally|([a-z]*case))(?=(\s|\)|\]|\}))</string>\n					<key>name</key>\n					<string>storage.control.clojure</string>\n				</dict>\n				<dict>\n					<key>match</key>\n					<string>(?&lt;=(\s|\(|\[|\{))(declare-?|(in-)?ns|import|use|require|load|compile|(def[a-z\-]*))(?=(\s|\)|\]|\}))</string>\n					<key>name</key>\n					<string>keyword.control.clojure</string>\n				</dict>\n			</array>\n		</dict>\n		<key>map</key>\n		<dict>\n			<key>begin</key>\n			<string>(\{)</string>\n			<key>end</key>\n			<string>(\})</string>\n			<key>name</key>\n			<string>meta.map.clojure</string>\n			<key>patterns</key>\n			<array>\n				<dict>\n					<key>include</key>\n					<string>$self</string>\n				</dict>\n			</array>\n		</dict>\n		<key>qouted-sexp</key>\n		<dict>\n			<key>begin</key>\n			<string>(['``]\()</string>\n			<key>beginCaptures</key>\n			<dict>\n				<key>1</key>\n				<dict>\n					<key>name</key>\n					<string>punctuation.section.expression.begin.clojure</string>\n				</dict>\n			</dict>\n			<key>end</key>\n			<string>(\))(\n)?</string>\n			<key>endCaptures</key>\n			<dict>\n				<key>1</key>\n				<dict>\n					<key>name</key>\n					<string>punctuation.section.expression.end.clojure</string>\n				</dict>\n				<key>2</key>\n				<dict>\n					<key>name</key>\n					<string>meta.after-expression.clojure</string>\n				</dict>\n			</dict>\n			<key>name</key>\n			<string>meta.qouted-expression.clojure</string>\n			<key>patterns</key>\n			<array>\n				<dict>\n					<key>include</key>\n					<string>$self</string>\n				</dict>\n			</array>\n		</dict>\n		<key>regexp</key>\n		<dict>\n			<key>begin</key>\n			<string>#\"</string>\n			<key>end</key>\n			<string>\"</string>\n			<key>name</key>\n			<string>string.regexp.clojure</string>\n			<key>patterns</key>\n			<array>\n				<dict>\n					<key>include</key>\n					<string>#regexp_escaped_char</string>\n				</dict>\n			</array>\n		</dict>\n		<key>regexp_escaped_char</key>\n		<dict>\n			<key>match</key>\n			<string>\\(\")</string>\n			<key>name</key>\n			<string>string.regexp.clojure</string>\n		</dict>\n		<key>set</key>\n		<dict>\n			<key>begin</key>\n			<string>(\#\{)</string>\n			<key>end</key>\n			<string>(\})</string>\n			<key>name</key>\n			<string>meta.set.clojure</string>\n			<key>patterns</key>\n			<array>\n				<dict>\n					<key>include</key>\n					<string>$self</string>\n				</dict>\n			</array>\n		</dict>\n		<key>sexp</key>\n		<dict>\n			<key>begin</key>\n			<string>(\()</string>\n			<key>beginCaptures</key>\n			<dict>\n				<key>1</key>\n				<dict>\n					<key>name</key>\n					<string>punctuation.section.expression.begin.clojure</string>\n				</dict>\n			</dict>\n			<key>end</key>\n			<string>(\))(\n)?</string>\n			<key>endCaptures</key>\n			<dict>\n				<key>1</key>\n				<dict>\n					<key>name</key>\n					<string>punctuation.section.expression.end.clojure</string>\n				</dict>\n				<key>2</key>\n				<dict>\n					<key>name</key>\n					<string>meta.after-expression.clojure</string>\n				</dict>\n			</dict>\n			<key>name</key>\n			<string>meta.expression.clojure</string>\n			<key>patterns</key>\n			<array>\n				<dict>\n					<key>begin</key>\n					<string>(?&lt;=\()(ns|def|def-|defn|defn-|defvar|defvar-|defmacro|defmacro-|deftest)\s+(.+?)(?=\s)</string>\n					<key>beginCaptures</key>\n					<dict>\n						<key>1</key>\n						<dict>\n							<key>name</key>\n							<string>keyword.control.clojure</string>\n						</dict>\n						<key>2</key>\n						<dict>\n							<key>name</key>\n							<string>entity.global.clojure</string>\n						</dict>\n					</dict>\n					<key>end</key>\n					<string>(?=\))</string>\n					<key>name</key>\n					<string>meta.definition.global.clojure</string>\n					<key>patterns</key>\n					<array>\n						<dict>\n							<key>include</key>\n							<string>$self</string>\n						</dict>\n					</array>\n				</dict>\n				<dict>\n					<key>include</key>\n					<string>$self</string>\n				</dict>\n			</array>\n		</dict>\n		<key>shebang-comment</key>\n		<dict>\n			<key>captures</key>\n			<dict>\n				<key>1</key>\n				<dict>\n					<key>name</key>\n					<string>punctuation.definition.comment.shebang.clojure</string>\n				</dict>\n			</dict>\n			<key>match</key>\n			<string>^(\#!).*$\n?</string>\n			<key>name</key>\n			<string>comment.line.semicolon.clojure</string>\n		</dict>\n		<key>string</key>\n		<dict>\n			<key>begin</key>\n			<string>(")</string>\n			<key>beginCaptures</key>\n			<dict>\n				<key>1</key>\n				<dict>\n					<key>name</key>\n					<string>punctuation.definition.string.begin.clojure</string>\n				</dict>\n			</dict>\n			<key>end</key>\n			<string>(")</string>\n			<key>endCaptures</key>\n			<dict>\n				<key>1</key>\n				<dict>\n					<key>name</key>\n					<string>punctuation.definition.string.end.clojure</string>\n				</dict>\n			</dict>\n			<key>name</key>\n			<string>string.quoted.double.clojure</string>\n			<key>patterns</key>\n			<array>\n				<dict>\n					<key>match</key>\n					<string>\\.</string>\n					<key>name</key>\n					<string>constant.character.escape.clojure</string>\n				</dict>\n			</array>\n		</dict>\n		<key>symbol</key>\n		<dict>\n			<key>patterns</key>\n			<array>\n				<dict>\n					<key>match</key>\n					<string>(\w[\w\d]+)</string>\n					<key>name</key>\n					<string>meta.symbol.clojure</string>\n				</dict>\n			</array>\n		</dict>\n		<key>var</key>\n		<dict>\n			<key>match</key>\n			<string>(?&lt;=(\s|\(|\[|\{)\#)'[a-zA-Z0-9\.\-\_\:\+\=\&gt;\&lt;\/\!\?\*]+(?=(\s|\)|\]|\}))</string>\n			<key>name</key>\n			<string>meta.var.clojure</string>\n		</dict>\n		<key>vector</key>\n		<dict>\n			<key>begin</key>\n			<string>(\[)</string>\n			<key>end</key>\n			<string>(\])</string>\n			<key>name</key>\n			<string>meta.vector.clojure</string>\n			<key>patterns</key>\n			<array>\n				<dict>\n					<key>include</key>\n					<string>$self</string>\n				</dict>\n			</array>\n		</dict>\n		<key>whitespace</key>\n		<dict>\n			<key>match</key>\n			<string>\s+$</string>\n			<key>name</key>\n			<string>invalid.trailing-whitespace</string>\n		</dict>\n	</dict>\n	<key>scopeName</key>\n	<string>source.clojure</string>\n	<key>smartTypingPairs</key>\n	<array>\n		<array>\n			<string>"</string>\n			<string>"</string>\n		</array>\n		<array>\n			<string>(</string>\n			<string>)</string>\n		</array>\n		<array>\n			<string>{</string>\n			<string>}</string>\n		</array>\n		<array>\n			<string>[</string>\n			<string>]</string>\n		</array>\n	</array>\n	<key>uuid</key>\n	<string>6A87759F-F746-4E84-B788-965B46363202</string>\n</dict>\n</plist>","+		<string>cljc</string>+		<string>cljx</string>+		<string>edn</string>"
"torvalds/linux",da04b128cf0d74dd4cab270c53d9264e70f9203e,"arch/i386/kernel/syscall_table.S",2a5a68b840cbab31baab2d9b2e1e6de3b289ae1e,"arch/i386/kernel/syscall_table.S",2005-06-22 10:19:24 UTC,"Jaroslav Kysela","72edd5e1a572f82f059ccbb83c92b74d6cb051ff@petra","Merge with rsync://rsync.kernel.org/pub/scm/linux/kernel/git/torvalds/linux-2.6.git","Merge with rsync://rsync.kernel.org/pub/scm/linux/kernel/git/torvalds/linux-2.6.git",".data\nENTRY(sys_call_table)\n	.long sys_restart_syscall	/* 0 - old "setup()" system call, used for restarting */\n	.long sys_exit\n	.long sys_fork\n	.long sys_read\n	.long sys_write\n	.long sys_open		/* 5 */\n	.long sys_close\n	.long sys_waitpid\n	.long sys_creat\n	.long sys_link\n	.long sys_unlink	/* 10 */\n	.long sys_execve\n	.long sys_chdir\n	.long sys_time\n	.long sys_mknod\n	.long sys_chmod		/* 15 */\n	.long sys_lchown16\n	.long sys_ni_syscall	/* old break syscall holder */\n	.long sys_stat\n	.long sys_lseek\n	.long sys_getpid	/* 20 */\n	.long sys_mount\n	.long sys_oldumount\n	.long sys_setuid16\n	.long sys_getuid16\n	.long sys_stime		/* 25 */\n	.long sys_ptrace\n	.long sys_alarm\n	.long sys_fstat\n	.long sys_pause\n	.long sys_utime		/* 30 */\n	.long sys_ni_syscall	/* old stty syscall holder */\n	.long sys_ni_syscall	/* old gtty syscall holder */\n	.long sys_access\n	.long sys_nice\n	.long sys_ni_syscall	/* 35 - old ftime syscall holder */\n	.long sys_sync\n	.long sys_kill\n	.long sys_rename\n	.long sys_mkdir\n	.long sys_rmdir		/* 40 */\n	.long sys_dup\n	.long sys_pipe\n	.long sys_times\n	.long sys_ni_syscall	/* old prof syscall holder */\n	.long sys_brk		/* 45 */\n	.long sys_setgid16\n	.long sys_getgid16\n	.long sys_signal\n	.long sys_geteuid16\n	.long sys_getegid16	/* 50 */\n	.long sys_acct\n	.long sys_umount	/* recycled never used phys() */\n	.long sys_ni_syscall	/* old lock syscall holder */\n	.long sys_ioctl\n	.long sys_fcntl		/* 55 */\n	.long sys_ni_syscall	/* old mpx syscall holder */\n	.long sys_setpgid\n	.long sys_ni_syscall	/* old ulimit syscall holder */\n	.long sys_olduname\n	.long sys_umask		/* 60 */\n	.long sys_chroot\n	.long sys_ustat\n	.long sys_dup2\n	.long sys_getppid\n	.long sys_getpgrp	/* 65 */\n	.long sys_setsid\n	.long sys_sigaction\n	.long sys_sgetmask\n	.long sys_ssetmask\n	.long sys_setreuid16	/* 70 */\n	.long sys_setregid16\n	.long sys_sigsuspend\n	.long sys_sigpending\n	.long sys_sethostname\n	.long sys_setrlimit	/* 75 */\n	.long sys_old_getrlimit\n	.long sys_getrusage\n	.long sys_gettimeofday\n	.long sys_settimeofday\n	.long sys_getgroups16	/* 80 */\n	.long sys_setgroups16\n	.long old_select\n	.long sys_symlink\n	.long sys_lstat\n	.long sys_readlink	/* 85 */\n	.long sys_uselib\n	.long sys_swapon\n	.long sys_reboot\n	.long old_readdir\n	.long old_mmap		/* 90 */\n	.long sys_munmap\n	.long sys_truncate\n	.long sys_ftruncate\n	.long sys_fchmod\n	.long sys_fchown16	/* 95 */\n	.long sys_getpriority\n	.long sys_setpriority\n	.long sys_ni_syscall	/* old profil syscall holder */\n	.long sys_statfs\n	.long sys_fstatfs	/* 100 */\n	.long sys_ioperm\n	.long sys_socketcall\n	.long sys_syslog\n	.long sys_setitimer\n	.long sys_getitimer	/* 105 */\n	.long sys_newstat\n	.long sys_newlstat\n	.long sys_newfstat\n	.long sys_uname\n	.long sys_iopl		/* 110 */\n	.long sys_vhangup\n	.long sys_ni_syscall	/* old "idle" system call */\n	.long sys_vm86old\n	.long sys_wait4\n	.long sys_swapoff	/* 115 */\n	.long sys_sysinfo\n	.long sys_ipc\n	.long sys_fsync\n	.long sys_sigreturn\n	.long sys_clone		/* 120 */\n	.long sys_setdomainname\n	.long sys_newuname\n	.long sys_modify_ldt\n	.long sys_adjtimex\n	.long sys_mprotect	/* 125 */\n	.long sys_sigprocmask\n	.long sys_ni_syscall	/* old "create_module" */\n	.long sys_init_module\n	.long sys_delete_module\n	.long sys_ni_syscall	/* 130:	old "get_kernel_syms" */\n	.long sys_quotactl\n	.long sys_getpgid\n	.long sys_fchdir\n	.long sys_bdflush\n	.long sys_sysfs		/* 135 */\n	.long sys_personality\n	.long sys_ni_syscall	/* reserved for afs_syscall */\n	.long sys_setfsuid16\n	.long sys_setfsgid16\n	.long sys_llseek	/* 140 */\n	.long sys_getdents\n	.long sys_select\n	.long sys_flock\n	.long sys_msync\n	.long sys_readv		/* 145 */\n	.long sys_writev\n	.long sys_getsid\n	.long sys_fdatasync\n	.long sys_sysctl\n	.long sys_mlock		/* 150 */\n	.long sys_munlock\n	.long sys_mlockall\n	.long sys_munlockall\n	.long sys_sched_setparam\n	.long sys_sched_getparam   /* 155 */\n	.long sys_sched_setscheduler\n	.long sys_sched_getscheduler\n	.long sys_sched_yield\n	.long sys_sched_get_priority_max\n	.long sys_sched_get_priority_min  /* 160 */\n	.long sys_sched_rr_get_interval\n	.long sys_nanosleep\n	.long sys_mremap\n	.long sys_setresuid16\n	.long sys_getresuid16	/* 165 */\n	.long sys_vm86\n	.long sys_ni_syscall	/* Old sys_query_module */\n	.long sys_poll\n	.long sys_nfsservctl\n	.long sys_setresgid16	/* 170 */\n	.long sys_getresgid16\n	.long sys_prctl\n	.long sys_rt_sigreturn\n	.long sys_rt_sigaction\n	.long sys_rt_sigprocmask	/* 175 */\n	.long sys_rt_sigpending\n	.long sys_rt_sigtimedwait\n	.long sys_rt_sigqueueinfo\n	.long sys_rt_sigsuspend\n	.long sys_pread64	/* 180 */\n	.long sys_pwrite64\n	.long sys_chown16\n	.long sys_getcwd\n	.long sys_capget\n	.long sys_capset	/* 185 */\n	.long sys_sigaltstack\n	.long sys_sendfile\n	.long sys_ni_syscall	/* reserved for streams1 */\n	.long sys_ni_syscall	/* reserved for streams2 */\n	.long sys_vfork		/* 190 */\n	.long sys_getrlimit\n	.long sys_mmap2\n	.long sys_truncate64\n	.long sys_ftruncate64\n	.long sys_stat64	/* 195 */\n	.long sys_lstat64\n	.long sys_fstat64\n	.long sys_lchown\n	.long sys_getuid\n	.long sys_getgid	/* 200 */\n	.long sys_geteuid\n	.long sys_getegid\n	.long sys_setreuid\n	.long sys_setregid\n	.long sys_getgroups	/* 205 */\n	.long sys_setgroups\n	.long sys_fchown\n	.long sys_setresuid\n	.long sys_getresuid\n	.long sys_setresgid	/* 210 */\n	.long sys_getresgid\n	.long sys_chown\n	.long sys_setuid\n	.long sys_setgid\n	.long sys_setfsuid	/* 215 */\n	.long sys_setfsgid\n	.long sys_pivot_root\n	.long sys_mincore\n	.long sys_madvise\n	.long sys_getdents64	/* 220 */\n	.long sys_fcntl64\n	.long sys_ni_syscall	/* reserved for TUX */\n	.long sys_ni_syscall\n	.long sys_gettid\n	.long sys_readahead	/* 225 */\n	.long sys_setxattr\n	.long sys_lsetxattr\n	.long sys_fsetxattr\n	.long sys_getxattr\n	.long sys_lgetxattr	/* 230 */\n	.long sys_fgetxattr\n	.long sys_listxattr\n	.long sys_llistxattr\n	.long sys_flistxattr\n	.long sys_removexattr	/* 235 */\n	.long sys_lremovexattr\n	.long sys_fremovexattr\n	.long sys_tkill\n	.long sys_sendfile64\n	.long sys_futex		/* 240 */\n	.long sys_sched_setaffinity\n	.long sys_sched_getaffinity\n	.long sys_set_thread_area\n	.long sys_get_thread_area\n	.long sys_io_setup	/* 245 */\n	.long sys_io_destroy\n	.long sys_io_getevents\n	.long sys_io_submit\n	.long sys_io_cancel\n	.long sys_fadvise64	/* 250 */\n	.long sys_set_zone_reclaim\n	.long sys_exit_group\n	.long sys_lookup_dcookie\n	.long sys_epoll_create\n	.long sys_epoll_ctl	/* 255 */\n	.long sys_epoll_wait\n 	.long sys_remap_file_pages\n 	.long sys_set_tid_address\n 	.long sys_timer_create\n 	.long sys_timer_settime		/* 260 */\n 	.long sys_timer_gettime\n 	.long sys_timer_getoverrun\n 	.long sys_timer_delete\n 	.long sys_clock_settime\n 	.long sys_clock_gettime		/* 265 */\n 	.long sys_clock_getres\n 	.long sys_clock_nanosleep\n	.long sys_statfs64\n	.long sys_fstatfs64\n	.long sys_tgkill	/* 270 */\n	.long sys_utimes\n 	.long sys_fadvise64_64\n	.long sys_ni_syscall	/* sys_vserver */\n	.long sys_mbind\n	.long sys_get_mempolicy\n	.long sys_set_mempolicy\n	.long sys_mq_open\n	.long sys_mq_unlink\n	.long sys_mq_timedsend\n	.long sys_mq_timedreceive	/* 280 */\n	.long sys_mq_notify\n	.long sys_mq_getsetattr\n	.long sys_ni_syscall		/* reserved for kexec */\n	.long sys_waitid\n	.long sys_ni_syscall		/* 285 */ /* available */\n	.long sys_add_key\n	.long sys_request_key\n	.long sys_keyctl\n",".data\nENTRY(sys_call_table)\n	.long sys_restart_syscall	/* 0 - old "setup()" system call, used for restarting */\n	.long sys_exit\n	.long sys_fork\n	.long sys_read\n	.long sys_write\n	.long sys_open		/* 5 */\n	.long sys_close\n	.long sys_waitpid\n	.long sys_creat\n	.long sys_link\n	.long sys_unlink	/* 10 */\n	.long sys_execve\n	.long sys_chdir\n	.long sys_time\n	.long sys_mknod\n	.long sys_chmod		/* 15 */\n	.long sys_lchown16\n	.long sys_ni_syscall	/* old break syscall holder */\n	.long sys_stat\n	.long sys_lseek\n	.long sys_getpid	/* 20 */\n	.long sys_mount\n	.long sys_oldumount\n	.long sys_setuid16\n	.long sys_getuid16\n	.long sys_stime		/* 25 */\n	.long sys_ptrace\n	.long sys_alarm\n	.long sys_fstat\n	.long sys_pause\n	.long sys_utime		/* 30 */\n	.long sys_ni_syscall	/* old stty syscall holder */\n	.long sys_ni_syscall	/* old gtty syscall holder */\n	.long sys_access\n	.long sys_nice\n	.long sys_ni_syscall	/* 35 - old ftime syscall holder */\n	.long sys_sync\n	.long sys_kill\n	.long sys_rename\n	.long sys_mkdir\n	.long sys_rmdir		/* 40 */\n	.long sys_dup\n	.long sys_pipe\n	.long sys_times\n	.long sys_ni_syscall	/* old prof syscall holder */\n	.long sys_brk		/* 45 */\n	.long sys_setgid16\n	.long sys_getgid16\n	.long sys_signal\n	.long sys_geteuid16\n	.long sys_getegid16	/* 50 */\n	.long sys_acct\n	.long sys_umount	/* recycled never used phys() */\n	.long sys_ni_syscall	/* old lock syscall holder */\n	.long sys_ioctl\n	.long sys_fcntl		/* 55 */\n	.long sys_ni_syscall	/* old mpx syscall holder */\n	.long sys_setpgid\n	.long sys_ni_syscall	/* old ulimit syscall holder */\n	.long sys_olduname\n	.long sys_umask		/* 60 */\n	.long sys_chroot\n	.long sys_ustat\n	.long sys_dup2\n	.long sys_getppid\n	.long sys_getpgrp	/* 65 */\n	.long sys_setsid\n	.long sys_sigaction\n	.long sys_sgetmask\n	.long sys_ssetmask\n	.long sys_setreuid16	/* 70 */\n	.long sys_setregid16\n	.long sys_sigsuspend\n	.long sys_sigpending\n	.long sys_sethostname\n	.long sys_setrlimit	/* 75 */\n	.long sys_old_getrlimit\n	.long sys_getrusage\n	.long sys_gettimeofday\n	.long sys_settimeofday\n	.long sys_getgroups16	/* 80 */\n	.long sys_setgroups16\n	.long old_select\n	.long sys_symlink\n	.long sys_lstat\n	.long sys_readlink	/* 85 */\n	.long sys_uselib\n	.long sys_swapon\n	.long sys_reboot\n	.long old_readdir\n	.long old_mmap		/* 90 */\n	.long sys_munmap\n	.long sys_truncate\n	.long sys_ftruncate\n	.long sys_fchmod\n	.long sys_fchown16	/* 95 */\n	.long sys_getpriority\n	.long sys_setpriority\n	.long sys_ni_syscall	/* old profil syscall holder */\n	.long sys_statfs\n	.long sys_fstatfs	/* 100 */\n	.long sys_ioperm\n	.long sys_socketcall\n	.long sys_syslog\n	.long sys_setitimer\n	.long sys_getitimer	/* 105 */\n	.long sys_newstat\n	.long sys_newlstat\n	.long sys_newfstat\n	.long sys_uname\n	.long sys_iopl		/* 110 */\n	.long sys_vhangup\n	.long sys_ni_syscall	/* old "idle" system call */\n	.long sys_vm86old\n	.long sys_wait4\n	.long sys_swapoff	/* 115 */\n	.long sys_sysinfo\n	.long sys_ipc\n	.long sys_fsync\n	.long sys_sigreturn\n	.long sys_clone		/* 120 */\n	.long sys_setdomainname\n	.long sys_newuname\n	.long sys_modify_ldt\n	.long sys_adjtimex\n	.long sys_mprotect	/* 125 */\n	.long sys_sigprocmask\n	.long sys_ni_syscall	/* old "create_module" */\n	.long sys_init_module\n	.long sys_delete_module\n	.long sys_ni_syscall	/* 130:	old "get_kernel_syms" */\n	.long sys_quotactl\n	.long sys_getpgid\n	.long sys_fchdir\n	.long sys_bdflush\n	.long sys_sysfs		/* 135 */\n	.long sys_personality\n	.long sys_ni_syscall	/* reserved for afs_syscall */\n	.long sys_setfsuid16\n	.long sys_setfsgid16\n	.long sys_llseek	/* 140 */\n	.long sys_getdents\n	.long sys_select\n	.long sys_flock\n	.long sys_msync\n	.long sys_readv		/* 145 */\n	.long sys_writev\n	.long sys_getsid\n	.long sys_fdatasync\n	.long sys_sysctl\n	.long sys_mlock		/* 150 */\n	.long sys_munlock\n	.long sys_mlockall\n	.long sys_munlockall\n	.long sys_sched_setparam\n	.long sys_sched_getparam   /* 155 */\n	.long sys_sched_setscheduler\n	.long sys_sched_getscheduler\n	.long sys_sched_yield\n	.long sys_sched_get_priority_max\n	.long sys_sched_get_priority_min  /* 160 */\n	.long sys_sched_rr_get_interval\n	.long sys_nanosleep\n	.long sys_mremap\n	.long sys_setresuid16\n	.long sys_getresuid16	/* 165 */\n	.long sys_vm86\n	.long sys_ni_syscall	/* Old sys_query_module */\n	.long sys_poll\n	.long sys_nfsservctl\n	.long sys_setresgid16	/* 170 */\n	.long sys_getresgid16\n	.long sys_prctl\n	.long sys_rt_sigreturn\n	.long sys_rt_sigaction\n	.long sys_rt_sigprocmask	/* 175 */\n	.long sys_rt_sigpending\n	.long sys_rt_sigtimedwait\n	.long sys_rt_sigqueueinfo\n	.long sys_rt_sigsuspend\n	.long sys_pread64	/* 180 */\n	.long sys_pwrite64\n	.long sys_chown16\n	.long sys_getcwd\n	.long sys_capget\n	.long sys_capset	/* 185 */\n	.long sys_sigaltstack\n	.long sys_sendfile\n	.long sys_ni_syscall	/* reserved for streams1 */\n	.long sys_ni_syscall	/* reserved for streams2 */\n	.long sys_vfork		/* 190 */\n	.long sys_getrlimit\n	.long sys_mmap2\n	.long sys_truncate64\n	.long sys_ftruncate64\n	.long sys_stat64	/* 195 */\n	.long sys_lstat64\n	.long sys_fstat64\n	.long sys_lchown\n	.long sys_getuid\n	.long sys_getgid	/* 200 */\n	.long sys_geteuid\n	.long sys_getegid\n	.long sys_setreuid\n	.long sys_setregid\n	.long sys_getgroups	/* 205 */\n	.long sys_setgroups\n	.long sys_fchown\n	.long sys_setresuid\n	.long sys_getresuid\n	.long sys_setresgid	/* 210 */\n	.long sys_getresgid\n	.long sys_chown\n	.long sys_setuid\n	.long sys_setgid\n	.long sys_setfsuid	/* 215 */\n	.long sys_setfsgid\n	.long sys_pivot_root\n	.long sys_mincore\n	.long sys_madvise\n	.long sys_getdents64	/* 220 */\n	.long sys_fcntl64\n	.long sys_ni_syscall	/* reserved for TUX */\n	.long sys_ni_syscall\n	.long sys_gettid\n	.long sys_readahead	/* 225 */\n	.long sys_setxattr\n	.long sys_lsetxattr\n	.long sys_fsetxattr\n	.long sys_getxattr\n	.long sys_lgetxattr	/* 230 */\n	.long sys_fgetxattr\n	.long sys_listxattr\n	.long sys_llistxattr\n	.long sys_flistxattr\n	.long sys_removexattr	/* 235 */\n	.long sys_lremovexattr\n	.long sys_fremovexattr\n	.long sys_tkill\n	.long sys_sendfile64\n	.long sys_futex		/* 240 */\n	.long sys_sched_setaffinity\n	.long sys_sched_getaffinity\n	.long sys_set_thread_area\n	.long sys_get_thread_area\n	.long sys_io_setup	/* 245 */\n	.long sys_io_destroy\n	.long sys_io_getevents\n	.long sys_io_submit\n	.long sys_io_cancel\n	.long sys_fadvise64	/* 250 */\n	.long sys_set_zone_reclaim\n	.long sys_exit_group\n	.long sys_lookup_dcookie\n	.long sys_epoll_create\n	.long sys_epoll_ctl	/* 255 */\n	.long sys_epoll_wait\n 	.long sys_remap_file_pages\n 	.long sys_set_tid_address\n 	.long sys_timer_create\n 	.long sys_timer_settime		/* 260 */\n 	.long sys_timer_gettime\n 	.long sys_timer_getoverrun\n 	.long sys_timer_delete\n 	.long sys_clock_settime\n 	.long sys_clock_gettime		/* 265 */\n 	.long sys_clock_getres\n 	.long sys_clock_nanosleep\n	.long sys_statfs64\n	.long sys_fstatfs64\n	.long sys_tgkill	/* 270 */\n	.long sys_utimes\n 	.long sys_fadvise64_64\n	.long sys_ni_syscall	/* sys_vserver */\n	.long sys_mbind\n	.long sys_get_mempolicy\n	.long sys_set_mempolicy\n	.long sys_mq_open\n	.long sys_mq_unlink\n	.long sys_mq_timedsend\n	.long sys_mq_timedreceive	/* 280 */\n	.long sys_mq_notify\n	.long sys_mq_getsetattr\n	.long sys_ni_syscall		/* reserved for kexec */\n	.long sys_waitid\n	.long sys_ni_syscall		/* 285 */ /* available */\n	.long sys_add_key\n	.long sys_request_key\n	.long sys_keyctl\n",""
"torvalds/linux",da04b128cf0d74dd4cab270c53d9264e70f9203e,"fs/xfs/xfs_trans_inode.c",2a5a68b840cbab31baab2d9b2e1e6de3b289ae1e,"fs/xfs/xfs_trans_inode.c",2005-06-22 10:19:24 UTC,"Jaroslav Kysela","72edd5e1a572f82f059ccbb83c92b74d6cb051ff@petra","Merge with rsync://rsync.kernel.org/pub/scm/linux/kernel/git/torvalds/linux-2.6.git","Merge with rsync://rsync.kernel.org/pub/scm/linux/kernel/git/torvalds/linux-2.6.git","/*\n * Copyright (c) 2000 Silicon Graphics, Inc.  All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of version 2 of the GNU General Public License as\n * published by the Free Software Foundation.\n *\n * This program is distributed in the hope that it would be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n *\n * Further, this software is distributed without any warranty that it is\n * free of the rightful claim of any third person regarding infringement\n * or the like.  Any license provided herein, whether implied or\n * otherwise, applies only to this software file.  Patent licenses, if\n * any, provided herein do not apply to combinations of this program with\n * other software, or any other product whatsoever.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write the Free Software Foundation, Inc., 59\n * Temple Place - Suite 330, Boston MA 02111-1307, USA.\n *\n * Contact information: Silicon Graphics, Inc., 1600 Amphitheatre Pkwy,\n * Mountain View, CA  94043, or:\n *\n * http://www.sgi.com\n *\n * For further information regarding this notice, see:\n *\n * http://oss.sgi.com/projects/GenInfo/SGIGPLNoticeExplan/\n */\n\n#include "xfs.h"\n#include "xfs_macros.h"\n#include "xfs_types.h"\n#include "xfs_inum.h"\n#include "xfs_log.h"\n#include "xfs_trans.h"\n#include "xfs_sb.h"\n#include "xfs_ag.h"\n#include "xfs_dir.h"\n#include "xfs_dir2.h"\n#include "xfs_dmapi.h"\n#include "xfs_mount.h"\n#include "xfs_trans_priv.h"\n#include "xfs_alloc_btree.h"\n#include "xfs_bmap_btree.h"\n#include "xfs_ialloc_btree.h"\n#include "xfs_btree.h"\n#include "xfs_ialloc.h"\n#include "xfs_attr_sf.h"\n#include "xfs_dir_sf.h"\n#include "xfs_dir2_sf.h"\n#include "xfs_dinode.h"\n#include "xfs_inode_item.h"\n#include "xfs_inode.h"\n\n#ifdef XFS_TRANS_DEBUG\nSTATIC void\nxfs_trans_inode_broot_debug(\n	xfs_inode_t	*ip);\n#else\n#define	xfs_trans_inode_broot_debug(ip)\n#endif\n\n\n/*\n * Get and lock the inode for the caller if it is not already\n * locked within the given transaction.  If it is already locked\n * within the transaction, just increment its lock recursion count\n * and return a pointer to it.\n *\n * For an inode to be locked in a transaction, the inode lock, as\n * opposed to the io lock, must be taken exclusively.  This ensures\n * that the inode can be involved in only 1 transaction at a time.\n * Lock recursion is handled on the io lock, but only for lock modes\n * of equal or lesser strength.  That is, you can recur on the io lock\n * held EXCL with a SHARED request but not vice versa.  Also, if\n * the inode is already a part of the transaction then you cannot\n * go from not holding the io lock to having it EXCL or SHARED.\n *\n * Use the inode cache routine xfs_inode_incore() to find the inode\n * if it is already owned by this transaction.\n *\n * If we don't already own the inode, use xfs_iget() to get it.\n * Since the inode log item structure is embedded in the incore\n * inode structure and is initialized when the inode is brought\n * into memory, there is nothing to do with it here.\n *\n * If the given transaction pointer is NULL, just call xfs_iget().\n * This simplifies code which must handle both cases.\n */\nint\nxfs_trans_iget(\n	xfs_mount_t	*mp,\n	xfs_trans_t	*tp,\n	xfs_ino_t	ino,\n	uint		flags,\n	uint		lock_flags,\n	xfs_inode_t	**ipp)\n{\n	int			error;\n	xfs_inode_t		*ip;\n	xfs_inode_log_item_t	*iip;\n\n	/*\n	 * If the transaction pointer is NULL, just call the normal\n	 * xfs_iget().\n	 */\n	if (tp == NULL)\n		return xfs_iget(mp, NULL, ino, flags, lock_flags, ipp, 0);\n\n	/*\n	 * If we find the inode in core with this transaction\n	 * pointer in its i_transp field, then we know we already\n	 * have it locked.  In this case we just increment the lock\n	 * recursion count and return the inode to the caller.\n	 * Assert that the inode is already locked in the mode requested\n	 * by the caller.  We cannot do lock promotions yet, so\n	 * die if someone gets this wrong.\n	 */\n	if ((ip = xfs_inode_incore(tp->t_mountp, ino, tp)) != NULL) {\n		/*\n		 * Make sure that the inode lock is held EXCL and\n		 * that the io lock is never upgraded when the inode\n		 * is already a part of the transaction.\n		 */\n		ASSERT(ip->i_itemp != NULL);\n		ASSERT(lock_flags & XFS_ILOCK_EXCL);\n		ASSERT(ismrlocked(&ip->i_lock, MR_UPDATE));\n		ASSERT((!(lock_flags & XFS_IOLOCK_EXCL)) ||\n		       ismrlocked(&ip->i_iolock, MR_UPDATE));\n		ASSERT((!(lock_flags & XFS_IOLOCK_EXCL)) ||\n		       (ip->i_itemp->ili_flags & XFS_ILI_IOLOCKED_EXCL));\n		ASSERT((!(lock_flags & XFS_IOLOCK_SHARED)) ||\n		       ismrlocked(&ip->i_iolock, (MR_UPDATE | MR_ACCESS)));\n		ASSERT((!(lock_flags & XFS_IOLOCK_SHARED)) ||\n		       (ip->i_itemp->ili_flags & XFS_ILI_IOLOCKED_ANY));\n\n		if (lock_flags & (XFS_IOLOCK_SHARED | XFS_IOLOCK_EXCL)) {\n			ip->i_itemp->ili_iolock_recur++;\n		}\n		if (lock_flags & XFS_ILOCK_EXCL) {\n			ip->i_itemp->ili_ilock_recur++;\n		}\n		*ipp = ip;\n		return 0;\n	}\n\n	ASSERT(lock_flags & XFS_ILOCK_EXCL);\n	error = xfs_iget(tp->t_mountp, tp, ino, flags, lock_flags, &ip, 0);\n	if (error) {\n		return error;\n	}\n	ASSERT(ip != NULL);\n\n	/*\n	 * Get a log_item_desc to point at the new item.\n	 */\n	if (ip->i_itemp == NULL)\n		xfs_inode_item_init(ip, mp);\n	iip = ip->i_itemp;\n	(void) xfs_trans_add_item(tp, (xfs_log_item_t *)(iip));\n\n	xfs_trans_inode_broot_debug(ip);\n\n	/*\n	 * If the IO lock has been acquired, mark that in\n	 * the inode log item so we'll know to unlock it\n	 * when the transaction commits.\n	 */\n	ASSERT(iip->ili_flags == 0);\n	if (lock_flags & XFS_IOLOCK_EXCL) {\n		iip->ili_flags |= XFS_ILI_IOLOCKED_EXCL;\n	} else if (lock_flags & XFS_IOLOCK_SHARED) {\n		iip->ili_flags |= XFS_ILI_IOLOCKED_SHARED;\n	}\n\n	/*\n	 * Initialize i_transp so we can find it with xfs_inode_incore()\n	 * above.\n	 */\n	ip->i_transp = tp;\n\n	*ipp = ip;\n	return 0;\n}\n\n/*\n * Add the locked inode to the transaction.\n * The inode must be locked, and it cannot be associated with any\n * transaction.  The caller must specify the locks already held\n * on the inode.\n */\nvoid\nxfs_trans_ijoin(\n	xfs_trans_t	*tp,\n	xfs_inode_t	*ip,\n	uint		lock_flags)\n{\n	xfs_inode_log_item_t	*iip;\n\n	ASSERT(ip->i_transp == NULL);\n	ASSERT(ismrlocked(&ip->i_lock, MR_UPDATE));\n	ASSERT(lock_flags & XFS_ILOCK_EXCL);\n	if (ip->i_itemp == NULL)\n		xfs_inode_item_init(ip, ip->i_mount);\n	iip = ip->i_itemp;\n	ASSERT(iip->ili_flags == 0);\n	ASSERT(iip->ili_ilock_recur == 0);\n	ASSERT(iip->ili_iolock_recur == 0);\n\n	/*\n	 * Get a log_item_desc to point at the new item.\n	 */\n	(void) xfs_trans_add_item(tp, (xfs_log_item_t*)(iip));\n\n	xfs_trans_inode_broot_debug(ip);\n\n	/*\n	 * If the IO lock is already held, mark that in the inode log item.\n	 */\n	if (lock_flags & XFS_IOLOCK_EXCL) {\n		iip->ili_flags |= XFS_ILI_IOLOCKED_EXCL;\n	} else if (lock_flags & XFS_IOLOCK_SHARED) {\n		iip->ili_flags |= XFS_ILI_IOLOCKED_SHARED;\n	}\n\n	/*\n	 * Initialize i_transp so we can find it with xfs_inode_incore()\n	 * in xfs_trans_iget() above.\n	 */\n	ip->i_transp = tp;\n}\n\n\n\n/*\n * Mark the inode as not needing to be unlocked when the inode item's\n * IOP_UNLOCK() routine is called.  The inode must already be locked\n * and associated with the given transaction.\n */\n/*ARGSUSED*/\nvoid\nxfs_trans_ihold(\n	xfs_trans_t	*tp,\n	xfs_inode_t	*ip)\n{\n	ASSERT(ip->i_transp == tp);\n	ASSERT(ip->i_itemp != NULL);\n	ASSERT(ismrlocked(&ip->i_lock, MR_UPDATE));\n\n	ip->i_itemp->ili_flags |= XFS_ILI_HOLD;\n}\n\n\n/*\n * This is called to mark the fields indicated in fieldmask as needing\n * to be logged when the transaction is committed.  The inode must\n * already be associated with the given transaction.\n *\n * The values for fieldmask are defined in xfs_inode_item.h.  We always\n * log all of the core inode if any of it has changed, and we always log\n * all of the inline data/extents/b-tree root if any of them has changed.\n */\nvoid\nxfs_trans_log_inode(\n	xfs_trans_t	*tp,\n	xfs_inode_t	*ip,\n	uint		flags)\n{\n	xfs_log_item_desc_t	*lidp;\n\n	ASSERT(ip->i_transp == tp);\n	ASSERT(ip->i_itemp != NULL);\n	ASSERT(ismrlocked(&ip->i_lock, MR_UPDATE));\n\n	lidp = xfs_trans_find_item(tp, (xfs_log_item_t*)(ip->i_itemp));\n	ASSERT(lidp != NULL);\n\n	tp->t_flags |= XFS_TRANS_DIRTY;\n	lidp->lid_flags |= XFS_LID_DIRTY;\n\n	/*\n	 * Always OR in the bits from the ili_last_fields field.\n	 * This is to coordinate with the xfs_iflush() and xfs_iflush_done()\n	 * routines in the eventual clearing of the ilf_fields bits.\n	 * See the big comment in xfs_iflush() for an explanation of\n	 * this coorination mechanism.\n	 */\n	flags |= ip->i_itemp->ili_last_fields;\n	ip->i_itemp->ili_format.ilf_fields |= flags;\n}\n\n#ifdef XFS_TRANS_DEBUG\n/*\n * Keep track of the state of the inode btree root to make sure we\n * log it properly.\n */\nSTATIC void\nxfs_trans_inode_broot_debug(\n	xfs_inode_t	*ip)\n{\n	xfs_inode_log_item_t	*iip;\n\n	ASSERT(ip->i_itemp != NULL);\n	iip = ip->i_itemp;\n	if (iip->ili_root_size != 0) {\n		ASSERT(iip->ili_orig_root != NULL);\n		kmem_free(iip->ili_orig_root, iip->ili_root_size);\n		iip->ili_root_size = 0;\n		iip->ili_orig_root = NULL;\n	}\n	if (ip->i_d.di_format == XFS_DINODE_FMT_BTREE) {\n		ASSERT((ip->i_df.if_broot != NULL) &&\n		       (ip->i_df.if_broot_bytes > 0));\n		iip->ili_root_size = ip->i_df.if_broot_bytes;\n		iip->ili_orig_root =\n			(char*)kmem_alloc(iip->ili_root_size, KM_SLEEP);\n		memcpy(iip->ili_orig_root, (char*)(ip->i_df.if_broot),\n		      iip->ili_root_size);\n	}\n}\n#endif\n","/*\n * Copyright (c) 2000 Silicon Graphics, Inc.  All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of version 2 of the GNU General Public License as\n * published by the Free Software Foundation.\n *\n * This program is distributed in the hope that it would be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n *\n * Further, this software is distributed without any warranty that it is\n * free of the rightful claim of any third person regarding infringement\n * or the like.  Any license provided herein, whether implied or\n * otherwise, applies only to this software file.  Patent licenses, if\n * any, provided herein do not apply to combinations of this program with\n * other software, or any other product whatsoever.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write the Free Software Foundation, Inc., 59\n * Temple Place - Suite 330, Boston MA 02111-1307, USA.\n *\n * Contact information: Silicon Graphics, Inc., 1600 Amphitheatre Pkwy,\n * Mountain View, CA  94043, or:\n *\n * http://www.sgi.com\n *\n * For further information regarding this notice, see:\n *\n * http://oss.sgi.com/projects/GenInfo/SGIGPLNoticeExplan/\n */\n\n#include "xfs.h"\n#include "xfs_macros.h"\n#include "xfs_types.h"\n#include "xfs_inum.h"\n#include "xfs_log.h"\n#include "xfs_trans.h"\n#include "xfs_sb.h"\n#include "xfs_ag.h"\n#include "xfs_dir.h"\n#include "xfs_dir2.h"\n#include "xfs_dmapi.h"\n#include "xfs_mount.h"\n#include "xfs_trans_priv.h"\n#include "xfs_alloc_btree.h"\n#include "xfs_bmap_btree.h"\n#include "xfs_ialloc_btree.h"\n#include "xfs_btree.h"\n#include "xfs_ialloc.h"\n#include "xfs_attr_sf.h"\n#include "xfs_dir_sf.h"\n#include "xfs_dir2_sf.h"\n#include "xfs_dinode.h"\n#include "xfs_inode_item.h"\n#include "xfs_inode.h"\n\n#ifdef XFS_TRANS_DEBUG\nSTATIC void\nxfs_trans_inode_broot_debug(\n	xfs_inode_t	*ip);\n#else\n#define	xfs_trans_inode_broot_debug(ip)\n#endif\n\n\n/*\n * Get and lock the inode for the caller if it is not already\n * locked within the given transaction.  If it is already locked\n * within the transaction, just increment its lock recursion count\n * and return a pointer to it.\n *\n * For an inode to be locked in a transaction, the inode lock, as\n * opposed to the io lock, must be taken exclusively.  This ensures\n * that the inode can be involved in only 1 transaction at a time.\n * Lock recursion is handled on the io lock, but only for lock modes\n * of equal or lesser strength.  That is, you can recur on the io lock\n * held EXCL with a SHARED request but not vice versa.  Also, if\n * the inode is already a part of the transaction then you cannot\n * go from not holding the io lock to having it EXCL or SHARED.\n *\n * Use the inode cache routine xfs_inode_incore() to find the inode\n * if it is already owned by this transaction.\n *\n * If we don't already own the inode, use xfs_iget() to get it.\n * Since the inode log item structure is embedded in the incore\n * inode structure and is initialized when the inode is brought\n * into memory, there is nothing to do with it here.\n *\n * If the given transaction pointer is NULL, just call xfs_iget().\n * This simplifies code which must handle both cases.\n */\nint\nxfs_trans_iget(\n	xfs_mount_t	*mp,\n	xfs_trans_t	*tp,\n	xfs_ino_t	ino,\n	uint		flags,\n	uint		lock_flags,\n	xfs_inode_t	**ipp)\n{\n	int			error;\n	xfs_inode_t		*ip;\n	xfs_inode_log_item_t	*iip;\n\n	/*\n	 * If the transaction pointer is NULL, just call the normal\n	 * xfs_iget().\n	 */\n	if (tp == NULL)\n		return xfs_iget(mp, NULL, ino, flags, lock_flags, ipp, 0);\n\n	/*\n	 * If we find the inode in core with this transaction\n	 * pointer in its i_transp field, then we know we already\n	 * have it locked.  In this case we just increment the lock\n	 * recursion count and return the inode to the caller.\n	 * Assert that the inode is already locked in the mode requested\n	 * by the caller.  We cannot do lock promotions yet, so\n	 * die if someone gets this wrong.\n	 */\n	if ((ip = xfs_inode_incore(tp->t_mountp, ino, tp)) != NULL) {\n		/*\n		 * Make sure that the inode lock is held EXCL and\n		 * that the io lock is never upgraded when the inode\n		 * is already a part of the transaction.\n		 */\n		ASSERT(ip->i_itemp != NULL);\n		ASSERT(lock_flags & XFS_ILOCK_EXCL);\n		ASSERT(ismrlocked(&ip->i_lock, MR_UPDATE));\n		ASSERT((!(lock_flags & XFS_IOLOCK_EXCL)) ||\n		       ismrlocked(&ip->i_iolock, MR_UPDATE));\n		ASSERT((!(lock_flags & XFS_IOLOCK_EXCL)) ||\n		       (ip->i_itemp->ili_flags & XFS_ILI_IOLOCKED_EXCL));\n		ASSERT((!(lock_flags & XFS_IOLOCK_SHARED)) ||\n		       ismrlocked(&ip->i_iolock, (MR_UPDATE | MR_ACCESS)));\n		ASSERT((!(lock_flags & XFS_IOLOCK_SHARED)) ||\n		       (ip->i_itemp->ili_flags & XFS_ILI_IOLOCKED_ANY));\n\n		if (lock_flags & (XFS_IOLOCK_SHARED | XFS_IOLOCK_EXCL)) {\n			ip->i_itemp->ili_iolock_recur++;\n		}\n		if (lock_flags & XFS_ILOCK_EXCL) {\n			ip->i_itemp->ili_ilock_recur++;\n		}\n		*ipp = ip;\n		return 0;\n	}\n\n	ASSERT(lock_flags & XFS_ILOCK_EXCL);\n	error = xfs_iget(tp->t_mountp, tp, ino, flags, lock_flags, &ip, 0);\n	if (error) {\n		return error;\n	}\n	ASSERT(ip != NULL);\n\n	/*\n	 * Get a log_item_desc to point at the new item.\n	 */\n	if (ip->i_itemp == NULL)\n		xfs_inode_item_init(ip, mp);\n	iip = ip->i_itemp;\n	(void) xfs_trans_add_item(tp, (xfs_log_item_t *)(iip));\n\n	xfs_trans_inode_broot_debug(ip);\n\n	/*\n	 * If the IO lock has been acquired, mark that in\n	 * the inode log item so we'll know to unlock it\n	 * when the transaction commits.\n	 */\n	ASSERT(iip->ili_flags == 0);\n	if (lock_flags & XFS_IOLOCK_EXCL) {\n		iip->ili_flags |= XFS_ILI_IOLOCKED_EXCL;\n	} else if (lock_flags & XFS_IOLOCK_SHARED) {\n		iip->ili_flags |= XFS_ILI_IOLOCKED_SHARED;\n	}\n\n	/*\n	 * Initialize i_transp so we can find it with xfs_inode_incore()\n	 * above.\n	 */\n	ip->i_transp = tp;\n\n	*ipp = ip;\n	return 0;\n}\n\n/*\n * Add the locked inode to the transaction.\n * The inode must be locked, and it cannot be associated with any\n * transaction.  The caller must specify the locks already held\n * on the inode.\n */\nvoid\nxfs_trans_ijoin(\n	xfs_trans_t	*tp,\n	xfs_inode_t	*ip,\n	uint		lock_flags)\n{\n	xfs_inode_log_item_t	*iip;\n\n	ASSERT(ip->i_transp == NULL);\n	ASSERT(ismrlocked(&ip->i_lock, MR_UPDATE));\n	ASSERT(lock_flags & XFS_ILOCK_EXCL);\n	if (ip->i_itemp == NULL)\n		xfs_inode_item_init(ip, ip->i_mount);\n	iip = ip->i_itemp;\n	ASSERT(iip->ili_flags == 0);\n	ASSERT(iip->ili_ilock_recur == 0);\n	ASSERT(iip->ili_iolock_recur == 0);\n\n	/*\n	 * Get a log_item_desc to point at the new item.\n	 */\n	(void) xfs_trans_add_item(tp, (xfs_log_item_t*)(iip));\n\n	xfs_trans_inode_broot_debug(ip);\n\n	/*\n	 * If the IO lock is already held, mark that in the inode log item.\n	 */\n	if (lock_flags & XFS_IOLOCK_EXCL) {\n		iip->ili_flags |= XFS_ILI_IOLOCKED_EXCL;\n	} else if (lock_flags & XFS_IOLOCK_SHARED) {\n		iip->ili_flags |= XFS_ILI_IOLOCKED_SHARED;\n	}\n\n	/*\n	 * Initialize i_transp so we can find it with xfs_inode_incore()\n	 * in xfs_trans_iget() above.\n	 */\n	ip->i_transp = tp;\n}\n\n\n\n/*\n * Mark the inode as not needing to be unlocked when the inode item's\n * IOP_UNLOCK() routine is called.  The inode must already be locked\n * and associated with the given transaction.\n */\n/*ARGSUSED*/\nvoid\nxfs_trans_ihold(\n	xfs_trans_t	*tp,\n	xfs_inode_t	*ip)\n{\n	ASSERT(ip->i_transp == tp);\n	ASSERT(ip->i_itemp != NULL);\n	ASSERT(ismrlocked(&ip->i_lock, MR_UPDATE));\n\n	ip->i_itemp->ili_flags |= XFS_ILI_HOLD;\n}\n\n\n/*\n * This is called to mark the fields indicated in fieldmask as needing\n * to be logged when the transaction is committed.  The inode must\n * already be associated with the given transaction.\n *\n * The values for fieldmask are defined in xfs_inode_item.h.  We always\n * log all of the core inode if any of it has changed, and we always log\n * all of the inline data/extents/b-tree root if any of them has changed.\n */\nvoid\nxfs_trans_log_inode(\n	xfs_trans_t	*tp,\n	xfs_inode_t	*ip,\n	uint		flags)\n{\n	xfs_log_item_desc_t	*lidp;\n\n	ASSERT(ip->i_transp == tp);\n	ASSERT(ip->i_itemp != NULL);\n	ASSERT(ismrlocked(&ip->i_lock, MR_UPDATE));\n\n	lidp = xfs_trans_find_item(tp, (xfs_log_item_t*)(ip->i_itemp));\n	ASSERT(lidp != NULL);\n\n	tp->t_flags |= XFS_TRANS_DIRTY;\n	lidp->lid_flags |= XFS_LID_DIRTY;\n\n	/*\n	 * Always OR in the bits from the ili_last_fields field.\n	 * This is to coordinate with the xfs_iflush() and xfs_iflush_done()\n	 * routines in the eventual clearing of the ilf_fields bits.\n	 * See the big comment in xfs_iflush() for an explanation of\n	 * this coorination mechanism.\n	 */\n	flags |= ip->i_itemp->ili_last_fields;\n	ip->i_itemp->ili_format.ilf_fields |= flags;\n}\n\n#ifdef XFS_TRANS_DEBUG\n/*\n * Keep track of the state of the inode btree root to make sure we\n * log it properly.\n */\nSTATIC void\nxfs_trans_inode_broot_debug(\n	xfs_inode_t	*ip)\n{\n	xfs_inode_log_item_t	*iip;\n\n	ASSERT(ip->i_itemp != NULL);\n	iip = ip->i_itemp;\n	if (iip->ili_root_size != 0) {\n		ASSERT(iip->ili_orig_root != NULL);\n		kmem_free(iip->ili_orig_root, iip->ili_root_size);\n		iip->ili_root_size = 0;\n		iip->ili_orig_root = NULL;\n	}\n	if (ip->i_d.di_format == XFS_DINODE_FMT_BTREE) {\n		ASSERT((ip->i_df.if_broot != NULL) &&\n		       (ip->i_df.if_broot_bytes > 0));\n		iip->ili_root_size = ip->i_df.if_broot_bytes;\n		iip->ili_orig_root =\n			(char*)kmem_alloc(iip->ili_root_size, KM_SLEEP);\n		memcpy(iip->ili_orig_root, (char*)(ip->i_df.if_broot),\n		      iip->ili_root_size);\n	}\n}\n#endif\n",""
"torvalds/linux",da04b128cf0d74dd4cab270c53d9264e70f9203e,"arch/ppc/boot/simple/Makefile",fae6ec69c84d71b1d5bda9ede1a262c1681684aa,"arch/ppc/boot/simple/Makefile",2005-06-22 10:19:24 UTC,"Jaroslav Kysela","72edd5e1a572f82f059ccbb83c92b74d6cb051ff@petra","Merge with rsync://rsync.kernel.org/pub/scm/linux/kernel/git/torvalds/linux-2.6.git","Merge with rsync://rsync.kernel.org/pub/scm/linux/kernel/git/torvalds/linux-2.6.git","# This is far from simple, but I couldn't think of a good name.  This is\n# for making the 'zImage' or 'zImage.initrd' on a number of targets.\n#\n# Author: Tom Rini <trini@mvista.com>\n#\n# Notes:\n# (1) For machines that do not want to use the ELF image directly (including\n# stripping just the ELF header off), they must set the variables\n# zimage-$(CONFIG_MACHINE) and zimagerd-$(CONFIG_MACHINE) to the target\n# that produces the desired image and they must set end-$(CONFIG_MACHINE)\n# to what will be suffixed to the image filename.\n# (2) Regardless of (1), to have the resulting image be something other\n# than 'zImage.elf', set end-$(CONFIG_MACHINE) to be the suffix used for\n# the zImage, znetboot, and znetbootrd targets.\n# (3) For machine targets which use the mktree program, you can optionally\n# set entrypoint-$(CONFIG_MACHINE) to the location which the image should be\n# loaded at.  The optimal setting for entrypoint-$(CONFIG_MACHINE) is the link\n# address.\n# (4) It is advisable to pass in the memory size using BI_MEMSIZE and\n# get_mem_size(), which is memory controller dependent.  Add in the correct\n# XXX_memory.o file for this to work, as well as editing the\n# misc-$(CONFIG_MACHINE) variable.\n\nboot				:= arch/ppc/boot\ncommon				:= $(boot)/common\nutils				:= $(boot)/utils\nbootlib				:= $(boot)/lib\nimages				:= $(boot)/images\nof1275				:= $(boot)/of1275\ntftpboot			:= /tftpboot\n\n# Normally, we use the 'misc.c' file for decompress_kernel and\n# whatnot.  Sometimes we need to override this however.\nmisc-y	:= misc.o\n\n# Normally, we have our images end in .elf, but something we want to\n# change this.\nend-y := elf\n\n# Additionally, we normally don't need to mess with the L2 / L3 caches\n# if present on 'classic' PPC.\ncacheflag-y	:= -DCLEAR_CACHES=""\n# This file will flush / disable the L2, and L3 if present.\nclear_L2_L3	:= $(srctree)/$(boot)/simple/clear.S\n\n#\n# See arch/ppc/kconfig and arch/ppc/platforms/Kconfig\n# for definition of what platform each config option refer to.\n#----------------------------------------------------------------------------\n      zimage-$(CONFIG_CPCI690)		:= zImage-STRIPELF\nzimageinitrd-$(CONFIG_CPCI690)		:= zImage.initrd-STRIPELF\n     extra.o-$(CONFIG_CPCI690)		:= misc-cpci690.o\n         end-$(CONFIG_CPCI690)		:= cpci690\n   cacheflag-$(CONFIG_CPCI690)		:= -include $(clear_L2_L3)\n\n      zimage-$(CONFIG_IBM_OPENBIOS)	:= zImage-TREE\nzimageinitrd-$(CONFIG_IBM_OPENBIOS)	:= zImage.initrd-TREE\n         end-$(CONFIG_IBM_OPENBIOS)	:= treeboot\n        misc-$(CONFIG_IBM_OPENBIOS)	:= misc-embedded.o\n\n         end-$(CONFIG_EMBEDDEDBOOT)	:= embedded\n        misc-$(CONFIG_EMBEDDEDBOOT)	:= misc-embedded.o\n\n      zimage-$(CONFIG_EBONY)		:= zImage-TREE\nzimageinitrd-$(CONFIG_EBONY)		:= zImage.initrd-TREE\n         end-$(CONFIG_EBONY)		:= ebony\n  entrypoint-$(CONFIG_EBONY)		:= 0x01000000\n     extra.o-$(CONFIG_EBONY)		:= openbios.o\n\n      zimage-$(CONFIG_LUAN)		:= zImage-TREE\nzimageinitrd-$(CONFIG_LUAN)		:= zImage.initrd-TREE\n         end-$(CONFIG_LUAN)		:= luan\n  entrypoint-$(CONFIG_LUAN)		:= 0x01000000\n     extra.o-$(CONFIG_LUAN)		:= pibs.o\n\n      zimage-$(CONFIG_OCOTEA)		:= zImage-TREE\nzimageinitrd-$(CONFIG_OCOTEA)		:= zImage.initrd-TREE\n         end-$(CONFIG_OCOTEA)		:= ocotea\n  entrypoint-$(CONFIG_OCOTEA)		:= 0x01000000\n     extra.o-$(CONFIG_OCOTEA)		:= pibs.o\n\n     extra.o-$(CONFIG_EV64260)		:= misc-ev64260.o\n         end-$(CONFIG_EV64260)		:= ev64260\n   cacheflag-$(CONFIG_EV64260)		:= -include $(clear_L2_L3)\n\n     extra.o-$(CONFIG_CHESTNUT)		:= misc-chestnut.o\n         end-$(CONFIG_CHESTNUT)		:= chestnut\n\n      zimage-$(CONFIG_GEMINI)		:= zImage-STRIPELF\nzimageinitrd-$(CONFIG_GEMINI)		:= zImage.initrd-STRIPELF\n         end-$(CONFIG_GEMINI)		:= gemini\n\n     extra.o-$(CONFIG_K2)		:= prepmap.o\n         end-$(CONFIG_K2)		:= k2\n   cacheflag-$(CONFIG_K2)		:= -include $(clear_L2_L3)\n\n     extra.o-$(CONFIG_KATANA)		:= misc-katana.o\n         end-$(CONFIG_KATANA)		:= katana\n   cacheflag-$(CONFIG_KATANA)		:= -include $(clear_L2_L3)\n\n     extra.o-$(CONFIG_RADSTONE_PPC7D)	:= misc-radstone_ppc7d.o\n         end-$(CONFIG_RADSTONE_PPC7D)	:= radstone_ppc7d\n   cacheflag-$(CONFIG_RADSTONE_PPC7D)	:= -include $(clear_L2_L3)\n\n# kconfig 'feature', only one of these will ever be 'y' at a time.\n# The rest will be unset.\nmotorola := $(CONFIG_MCPN765)$(CONFIG_MVME5100)$(CONFIG_PRPMC750) \\n$(CONFIG_PRPMC800)$(CONFIG_LOPEC)$(CONFIG_PPLUS)\nmotorola := $(strip $(motorola))\npcore := $(CONFIG_PCORE)$(CONFIG_POWERPMC250)\n\n      zimage-$(motorola)		:= zImage-PPLUS\nzimageinitrd-$(motorola)		:= zImage.initrd-PPLUS\n         end-$(motorola)		:= pplus\n\n# Overrides previous assingment\n     extra.o-$(CONFIG_PPLUS)		:= prepmap.o\n     extra.o-$(CONFIG_LOPEC)		:= mpc10x_memory.o\n\n      zimage-$(pcore)			:= zImage-STRIPELF\nzimageinitrd-$(pcore)			:= zImage.initrd-STRIPELF\n     extra.o-$(pcore)			:= chrpmap.o\n         end-$(pcore)			:= pcore\n   cacheflag-$(pcore)			:= -include $(clear_L2_L3)\n\n# Really only valid if CONFIG_6xx=y\n      zimage-$(CONFIG_PPC_PREP)		:= zImage-PPLUS\nzimageinitrd-$(CONFIG_PPC_PREP)		:= zImage.initrd-PPLUS\nifeq ($(CONFIG_6xx),y)\n     extra.o-$(CONFIG_PPC_PREP)		:= prepmap.o\n        misc-$(CONFIG_PPC_PREP)		+= misc-prep.o mpc10x_memory.o\nendif\n         end-$(CONFIG_PPC_PREP)		:= prep\n\n         end-$(CONFIG_SANDPOINT)	:= sandpoint\n   cacheflag-$(CONFIG_SANDPOINT)	:= -include $(clear_L2_L3)\n\n      zimage-$(CONFIG_SPRUCE)		:= zImage-TREE\nzimageinitrd-$(CONFIG_SPRUCE)		:= zImage.initrd-TREE\n         end-$(CONFIG_SPRUCE)		:= spruce\n  entrypoint-$(CONFIG_SPRUCE)		:= 0x00800000\n        misc-$(CONFIG_SPRUCE)		+= misc-spruce.o\n\n      zimage-$(CONFIG_LITE5200)		:= zImage-STRIPELF\nzimageinitrd-$(CONFIG_LITE5200)		:= zImage.initrd-STRIPELF\n         end-$(CONFIG_LITE5200)		:= lite5200\n   cacheflag-$(CONFIG_LITE5200)		:= -include $(clear_L2_L3)\n\n\n# SMP images should have a '.smp' suffix.\n         end-$(CONFIG_SMP)             := $(end-y).smp\n\n# This is a treeboot that needs init functions until the\n# boot rom is sorted out (i.e. this is short lived)\nextra-aflags-$(CONFIG_REDWOOD_4)	:= -Wa,-m405\nextra.o-$(CONFIG_REDWOOD_4)		:= rw4/rw4_init.o rw4/rw4_init_brd.o\nEXTRA_AFLAGS := $(extra-aflags-y)\n# head.o needs to get the cacheflags defined.\nAFLAGS_head.o				+= $(cacheflag-y)\n\n# Linker args.  This specifies where the image will be run at.\nLD_ARGS					:= -T $(srctree)/$(boot)/ld.script \\n				   -Ttext $(CONFIG_BOOT_LOAD) -Bstatic\nOBJCOPY_ARGS			:= -O elf32-powerpc\n\n# head.o and relocate.o must be at the start.\nboot-y				:= head.o relocate.o $(extra.o-y) $(misc-y)\nboot-$(CONFIG_40x)		+= embed_config.o\nboot-$(CONFIG_8xx)		+= embed_config.o\nboot-$(CONFIG_8260)		+= embed_config.o\nboot-$(CONFIG_BSEIP)		+= iic.o\nboot-$(CONFIG_MBX)		+= iic.o pci.o qspan_pci.o\nboot-$(CONFIG_MV64X60)		+= misc-mv64x60.o\nboot-$(CONFIG_RPXCLASSIC)	+= iic.o pci.o qspan_pci.o\nboot-$(CONFIG_RPXLITE)		+= iic.o\n# Different boards need different serial implementations.\nifeq ($(CONFIG_SERIAL_CPM_CONSOLE),y)\nboot-$(CONFIG_8xx)		+= m8xx_tty.o\nboot-$(CONFIG_8260)		+= m8260_tty.o\nendif\nboot-$(CONFIG_SERIAL_MPC52xx_CONSOLE)	+= mpc52xx_tty.o\nboot-$(CONFIG_SERIAL_MPSC_CONSOLE)	+= mv64x60_tty.o\n\nLIBS				:= $(common)/lib.a $(bootlib)/lib.a\nifeq ($(CONFIG_PPC_PREP),y)\nLIBS 				+= $(of1275)/lib.a\nendif\n\nOBJS				:= $(addprefix $(obj)/,$(boot-y))\n\n# Tools\nMKBUGBOOT			:= $(utils)/mkbugboot\nMKPREP				:= $(utils)/mkprep\nMKTREE				:= $(utils)/mktree\n\ntargets := dummy.o\n\n$(obj)/zvmlinux: $(OBJS) $(LIBS) $(srctree)/$(boot)/ld.script \\n		$(images)/vmlinux.gz $(obj)/dummy.o\n	$(OBJCOPY) $(OBJCOPY_ARGS) \\n		--add-section=.image=$(images)/vmlinux.gz \\n		--set-section-flags=.image=contents,alloc,load,readonly,data \\n		$(obj)/dummy.o $(obj)/image.o\n	$(LD) $(LD_ARGS) -o $@ $(OBJS) $(obj)/image.o $(LIBS)\n	$(OBJCOPY) $(OBJCOPY_ARGS) $@ $@ -R .comment -R .stab \\n		-R .stabstr -R .ramdisk\n\n$(obj)/zvmlinux.initrd: $(OBJS) $(LIBS) $(srctree)/$(boot)/ld.script \\n		$(images)/vmlinux.gz $(obj)/dummy.o\n	$(OBJCOPY) $(OBJCOPY_ARGS) \\n		--add-section=.ramdisk=$(images)/ramdisk.image.gz \\n		--set-section-flags=.ramdisk=contents,alloc,load,readonly,data \\n		--add-section=.image=$(images)/vmlinux.gz \\n		--set-section-flags=.image=contents,alloc,load,readonly,data \\n		$(obj)/dummy.o $(obj)/image.o\n	$(LD) $(LD_ARGS) -o $@ $(OBJS) $(obj)/image.o $(LIBS)\n	$(OBJCOPY) $(OBJCOPY_ARGS) $@ $@ -R .comment -R .stab \\n		-R .stabstr\n\n# Sort-of dummy rules, that let us format the image we want.\nzImage: $(images)/$(zimage-y) $(obj)/zvmlinux\n	cp -f $(obj)/zvmlinux $(images)/zImage.elf\n	rm -f $(obj)/zvmlinux\n\nzImage.initrd: $(images)/$(zimageinitrd-y) $(obj)/zvmlinux.initrd\n	cp -f $(obj)/zvmlinux.initrd $(images)/zImage.initrd.elf\n	rm -f $(obj)/zvmlinux.initrd\n\nznetboot: zImage\n	cp $(images)/zImage.$(end-y) $(tftpboot)/zImage.$(end-y)\n\nznetboot.initrd: zImage.initrd\n	cp $(images)/zImage.initrd.$(end-y) $(tftpboot)/zImage.initrd.$(end-y)\n\n$(images)/zImage-STRIPELF: $(obj)/zvmlinux\n	dd if=$(obj)/zvmlinux of=$(images)/zImage.$(end-y) skip=64 bs=1k\n\n$(images)/zImage.initrd-STRIPELF: $(obj)/zvmlinux.initrd\n	dd if=$(obj)/zvmlinux.initrd of=$(images)/zImage.initrd.$(end-y) \\n		skip=64 bs=1k\n\n$(images)/zImage-TREE: $(obj)/zvmlinux $(MKTREE)\n	$(MKTREE) $(obj)/zvmlinux $(images)/zImage.$(end-y) $(ENTRYPOINT)\n\n$(images)/zImage.initrd-TREE: $(obj)/zvmlinux.initrd $(MKTREE)\n	$(MKTREE) $(obj)/zvmlinux.initrd $(images)/zImage.initrd.$(end-y) \\n		$(ENTRYPOINT)\n\n$(images)/zImage-PPLUS: $(obj)/zvmlinux $(MKPREP) $(MKBUGBOOT)\n	$(MKPREP) -pbp $(obj)/zvmlinux $(images)/zImage.$(end-y)\n	$(MKBUGBOOT) $(obj)/zvmlinux $(images)/zImage.bugboot\n\n$(images)/zImage.initrd-PPLUS: $(obj)/zvmlinux.initrd $(MKPREP) $(MKBUGBOOT)\n	$(MKPREP) -pbp $(obj)/zvmlinux.initrd $(images)/zImage.initrd.$(end-y)\n	$(MKBUGBOOT) $(obj)/zvmlinux.initrd $(images)/zImage.initrd.bugboot\n","# This is far from simple, but I couldn't think of a good name.  This is\n# for making the 'zImage' or 'zImage.initrd' on a number of targets.\n#\n# Author: Tom Rini <trini@mvista.com>\n#\n# Notes:\n# (1) For machines that do not want to use the ELF image directly (including\n# stripping just the ELF header off), they must set the variables\n# zimage-$(CONFIG_MACHINE) and zimagerd-$(CONFIG_MACHINE) to the target\n# that produces the desired image and they must set end-$(CONFIG_MACHINE)\n# to what will be suffixed to the image filename.\n# (2) Regardless of (1), to have the resulting image be something other\n# than 'zImage.elf', set end-$(CONFIG_MACHINE) to be the suffix used for\n# the zImage, znetboot, and znetbootrd targets.\n# (3) For machine targets which use the mktree program, you can optionally\n# set entrypoint-$(CONFIG_MACHINE) to the location which the image should be\n# loaded at.  The optimal setting for entrypoint-$(CONFIG_MACHINE) is the link\n# address.\n# (4) It is advisable to pass in the memory size using BI_MEMSIZE and\n# get_mem_size(), which is memory controller dependent.  Add in the correct\n# XXX_memory.o file for this to work, as well as editing the\n# misc-$(CONFIG_MACHINE) variable.\n\nboot				:= arch/ppc/boot\ncommon				:= $(boot)/common\nutils				:= $(boot)/utils\nbootlib				:= $(boot)/lib\nimages				:= $(boot)/images\nof1275				:= $(boot)/of1275\ntftpboot			:= /tftpboot\n\n# Normally, we use the 'misc.c' file for decompress_kernel and\n# whatnot.  Sometimes we need to override this however.\nmisc-y	:= misc.o\n\n# Normally, we have our images end in .elf, but something we want to\n# change this.\nend-y := elf\n\n# Additionally, we normally don't need to mess with the L2 / L3 caches\n# if present on 'classic' PPC.\ncacheflag-y	:= -DCLEAR_CACHES=""\n# This file will flush / disable the L2, and L3 if present.\nclear_L2_L3	:= $(srctree)/$(boot)/simple/clear.S\n\n#\n# See arch/ppc/kconfig and arch/ppc/platforms/Kconfig\n# for definition of what platform each config option refer to.\n#----------------------------------------------------------------------------\n      zimage-$(CONFIG_CPCI690)		:= zImage-STRIPELF\nzimageinitrd-$(CONFIG_CPCI690)		:= zImage.initrd-STRIPELF\n     extra.o-$(CONFIG_CPCI690)		:= misc-cpci690.o\n         end-$(CONFIG_CPCI690)		:= cpci690\n   cacheflag-$(CONFIG_CPCI690)		:= -include $(clear_L2_L3)\n\n      zimage-$(CONFIG_IBM_OPENBIOS)	:= zImage-TREE\nzimageinitrd-$(CONFIG_IBM_OPENBIOS)	:= zImage.initrd-TREE\n         end-$(CONFIG_IBM_OPENBIOS)	:= treeboot\n        misc-$(CONFIG_IBM_OPENBIOS)	:= misc-embedded.o\n\n         end-$(CONFIG_EMBEDDEDBOOT)	:= embedded\n        misc-$(CONFIG_EMBEDDEDBOOT)	:= misc-embedded.o\n\n      zimage-$(CONFIG_EBONY)		:= zImage-TREE\nzimageinitrd-$(CONFIG_EBONY)		:= zImage.initrd-TREE\n         end-$(CONFIG_EBONY)		:= ebony\n  entrypoint-$(CONFIG_EBONY)		:= 0x01000000\n     extra.o-$(CONFIG_EBONY)		:= openbios.o\n\n      zimage-$(CONFIG_LUAN)		:= zImage-TREE\nzimageinitrd-$(CONFIG_LUAN)		:= zImage.initrd-TREE\n         end-$(CONFIG_LUAN)		:= luan\n  entrypoint-$(CONFIG_LUAN)		:= 0x01000000\n     extra.o-$(CONFIG_LUAN)		:= pibs.o\n\n      zimage-$(CONFIG_OCOTEA)		:= zImage-TREE\nzimageinitrd-$(CONFIG_OCOTEA)		:= zImage.initrd-TREE\n         end-$(CONFIG_OCOTEA)		:= ocotea\n  entrypoint-$(CONFIG_OCOTEA)		:= 0x01000000\n     extra.o-$(CONFIG_OCOTEA)		:= pibs.o\n\n     extra.o-$(CONFIG_EV64260)		:= misc-ev64260.o\n         end-$(CONFIG_EV64260)		:= ev64260\n   cacheflag-$(CONFIG_EV64260)		:= -include $(clear_L2_L3)\n\n     extra.o-$(CONFIG_CHESTNUT)		:= misc-chestnut.o\n         end-$(CONFIG_CHESTNUT)		:= chestnut\n\n      zimage-$(CONFIG_GEMINI)		:= zImage-STRIPELF\nzimageinitrd-$(CONFIG_GEMINI)		:= zImage.initrd-STRIPELF\n         end-$(CONFIG_GEMINI)		:= gemini\n\n     extra.o-$(CONFIG_K2)		:= prepmap.o\n         end-$(CONFIG_K2)		:= k2\n   cacheflag-$(CONFIG_K2)		:= -include $(clear_L2_L3)\n\n     extra.o-$(CONFIG_KATANA)		:= misc-katana.o\n         end-$(CONFIG_KATANA)		:= katana\n   cacheflag-$(CONFIG_KATANA)		:= -include $(clear_L2_L3)\n\n     extra.o-$(CONFIG_RADSTONE_PPC7D)	:= misc-radstone_ppc7d.o\n         end-$(CONFIG_RADSTONE_PPC7D)	:= radstone_ppc7d\n   cacheflag-$(CONFIG_RADSTONE_PPC7D)	:= -include $(clear_L2_L3)\n\n# kconfig 'feature', only one of these will ever be 'y' at a time.\n# The rest will be unset.\nmotorola := $(CONFIG_MCPN765)$(CONFIG_MVME5100)$(CONFIG_PRPMC750) \\n$(CONFIG_PRPMC800)$(CONFIG_LOPEC)$(CONFIG_PPLUS)\nmotorola := $(strip $(motorola))\npcore := $(CONFIG_PCORE)$(CONFIG_POWERPMC250)\n\n      zimage-$(motorola)		:= zImage-PPLUS\nzimageinitrd-$(motorola)		:= zImage.initrd-PPLUS\n         end-$(motorola)		:= pplus\n\n# Overrides previous assingment\n     extra.o-$(CONFIG_PPLUS)		:= prepmap.o\n     extra.o-$(CONFIG_LOPEC)		:= mpc10x_memory.o\n\n      zimage-$(pcore)			:= zImage-STRIPELF\nzimageinitrd-$(pcore)			:= zImage.initrd-STRIPELF\n     extra.o-$(pcore)			:= chrpmap.o\n         end-$(pcore)			:= pcore\n   cacheflag-$(pcore)			:= -include $(clear_L2_L3)\n\n# Really only valid if CONFIG_6xx=y\n      zimage-$(CONFIG_PPC_PREP)		:= zImage-PPLUS\nzimageinitrd-$(CONFIG_PPC_PREP)		:= zImage.initrd-PPLUS\nifeq ($(CONFIG_6xx),y)\n     extra.o-$(CONFIG_PPC_PREP)		:= prepmap.o\n        misc-$(CONFIG_PPC_PREP)		+= misc-prep.o mpc10x_memory.o\nendif\n         end-$(CONFIG_PPC_PREP)		:= prep\n\n         end-$(CONFIG_SANDPOINT)	:= sandpoint\n   cacheflag-$(CONFIG_SANDPOINT)	:= -include $(clear_L2_L3)\n\n      zimage-$(CONFIG_SPRUCE)		:= zImage-TREE\nzimageinitrd-$(CONFIG_SPRUCE)		:= zImage.initrd-TREE\n         end-$(CONFIG_SPRUCE)		:= spruce\n  entrypoint-$(CONFIG_SPRUCE)		:= 0x00800000\n        misc-$(CONFIG_SPRUCE)		+= misc-spruce.o\n\n      zimage-$(CONFIG_LITE5200)		:= zImage-STRIPELF\nzimageinitrd-$(CONFIG_LITE5200)		:= zImage.initrd-STRIPELF\n         end-$(CONFIG_LITE5200)		:= lite5200\n   cacheflag-$(CONFIG_LITE5200)		:= -include $(clear_L2_L3)\n\n\n# SMP images should have a '.smp' suffix.\n         end-$(CONFIG_SMP)             := $(end-y).smp\n\n# This is a treeboot that needs init functions until the\n# boot rom is sorted out (i.e. this is short lived)\nextra-aflags-$(CONFIG_REDWOOD_4)	:= -Wa,-m405\nextra.o-$(CONFIG_REDWOOD_4)		:= rw4/rw4_init.o rw4/rw4_init_brd.o\nEXTRA_AFLAGS := $(extra-aflags-y)\n# head.o needs to get the cacheflags defined.\nAFLAGS_head.o				+= $(cacheflag-y)\n\n# Linker args.  This specifies where the image will be run at.\nLD_ARGS					:= -T $(srctree)/$(boot)/ld.script \\n				   -Ttext $(CONFIG_BOOT_LOAD) -Bstatic\nOBJCOPY_ARGS			:= -O elf32-powerpc\n\n# head.o and relocate.o must be at the start.\nboot-y				:= head.o relocate.o $(extra.o-y) $(misc-y)\nboot-$(CONFIG_40x)		+= embed_config.o\nboot-$(CONFIG_8xx)		+= embed_config.o\nboot-$(CONFIG_8260)		+= embed_config.o\nboot-$(CONFIG_BSEIP)		+= iic.o\nboot-$(CONFIG_MBX)		+= iic.o pci.o qspan_pci.o\nboot-$(CONFIG_MV64X60)		+= misc-mv64x60.o\nboot-$(CONFIG_RPXCLASSIC)	+= iic.o pci.o qspan_pci.o\nboot-$(CONFIG_RPXLITE)		+= iic.o\n# Different boards need different serial implementations.\nifeq ($(CONFIG_SERIAL_CPM_CONSOLE),y)\nboot-$(CONFIG_8xx)		+= m8xx_tty.o\nboot-$(CONFIG_8260)		+= m8260_tty.o\nendif\nboot-$(CONFIG_SERIAL_MPC52xx_CONSOLE)	+= mpc52xx_tty.o\nboot-$(CONFIG_SERIAL_MPSC_CONSOLE)	+= mv64x60_tty.o\n\nLIBS				:= $(common)/lib.a $(bootlib)/lib.a\nifeq ($(CONFIG_PPC_PREP),y)\nLIBS 				+= $(of1275)/lib.a\nendif\n\nOBJS				:= $(addprefix $(obj)/,$(boot-y))\n\n# Tools\nMKBUGBOOT			:= $(utils)/mkbugboot\nMKPREP				:= $(utils)/mkprep\nMKTREE				:= $(utils)/mktree\n\ntargets := dummy.o\n\n$(obj)/zvmlinux: $(OBJS) $(LIBS) $(srctree)/$(boot)/ld.script \\n		$(images)/vmlinux.gz $(obj)/dummy.o\n	$(OBJCOPY) $(OBJCOPY_ARGS) \\n		--add-section=.image=$(images)/vmlinux.gz \\n		--set-section-flags=.image=contents,alloc,load,readonly,data \\n		$(obj)/dummy.o $(obj)/image.o\n	$(LD) $(LD_ARGS) -o $@ $(OBJS) $(obj)/image.o $(LIBS)\n	$(OBJCOPY) $(OBJCOPY_ARGS) $@ $@ -R .comment -R .stab \\n		-R .stabstr -R .ramdisk -R .sysmap\n\n$(obj)/zvmlinux.initrd: $(OBJS) $(LIBS) $(srctree)/$(boot)/ld.script \\n		$(images)/vmlinux.gz $(obj)/dummy.o\n	$(OBJCOPY) $(OBJCOPY_ARGS) \\n		--add-section=.ramdisk=$(images)/ramdisk.image.gz \\n		--set-section-flags=.ramdisk=contents,alloc,load,readonly,data \\n		--add-section=.image=$(images)/vmlinux.gz \\n		--set-section-flags=.image=contents,alloc,load,readonly,data \\n		$(obj)/dummy.o $(obj)/image.o\n	$(LD) $(LD_ARGS) -o $@ $(OBJS) $(obj)/image.o $(LIBS)\n	$(OBJCOPY) $(OBJCOPY_ARGS) $@ $@ -R .comment -R .stab \\n		-R .stabstr -R .sysmap\n\n# Sort-of dummy rules, that let us format the image we want.\nzImage: $(images)/$(zimage-y) $(obj)/zvmlinux\n	cp -f $(obj)/zvmlinux $(images)/zImage.elf\n	rm -f $(obj)/zvmlinux\n\nzImage.initrd: $(images)/$(zimageinitrd-y) $(obj)/zvmlinux.initrd\n	cp -f $(obj)/zvmlinux.initrd $(images)/zImage.initrd.elf\n	rm -f $(obj)/zvmlinux.initrd\n\nznetboot: zImage\n	cp $(images)/zImage.$(end-y) $(tftpboot)/zImage.$(end-y)\n\nznetboot.initrd: zImage.initrd\n	cp $(images)/zImage.initrd.$(end-y) $(tftpboot)/zImage.initrd.$(end-y)\n\n$(images)/zImage-STRIPELF: $(obj)/zvmlinux\n	dd if=$(obj)/zvmlinux of=$(images)/zImage.$(end-y) skip=64 bs=1k\n\n$(images)/zImage.initrd-STRIPELF: $(obj)/zvmlinux.initrd\n	dd if=$(obj)/zvmlinux.initrd of=$(images)/zImage.initrd.$(end-y) \\n		skip=64 bs=1k\n\n$(images)/zImage-TREE: $(obj)/zvmlinux $(MKTREE)\n	$(MKTREE) $(obj)/zvmlinux $(images)/zImage.$(end-y) $(ENTRYPOINT)\n\n$(images)/zImage.initrd-TREE: $(obj)/zvmlinux.initrd $(MKTREE)\n	$(MKTREE) $(obj)/zvmlinux.initrd $(images)/zImage.initrd.$(end-y) \\n		$(ENTRYPOINT)\n\n$(images)/zImage-PPLUS: $(obj)/zvmlinux $(MKPREP) $(MKBUGBOOT)\n	$(MKPREP) -pbp $(obj)/zvmlinux $(images)/zImage.$(end-y)\n	$(MKBUGBOOT) $(obj)/zvmlinux $(images)/zImage.bugboot\n\n$(images)/zImage.initrd-PPLUS: $(obj)/zvmlinux.initrd $(MKPREP) $(MKBUGBOOT)\n	$(MKPREP) -pbp $(obj)/zvmlinux.initrd $(images)/zImage.initrd.$(end-y)\n	$(MKBUGBOOT) $(obj)/zvmlinux.initrd $(images)/zImage.initrd.bugboot\n","-		-R .stabstr -R .ramdisk -R .sysmap+		-R .stabstr -R .ramdisk-		-R .stabstr -R .sysmap+		-R .stabstr"
"torvalds/linux",da04b128cf0d74dd4cab270c53d9264e70f9203e,"fs/isofs/dir.c",fae6ec69c84d71b1d5bda9ede1a262c1681684aa,"fs/isofs/dir.c",2005-06-22 10:19:24 UTC,"Jaroslav Kysela","72edd5e1a572f82f059ccbb83c92b74d6cb051ff@petra","Merge with rsync://rsync.kernel.org/pub/scm/linux/kernel/git/torvalds/linux-2.6.git","Merge with rsync://rsync.kernel.org/pub/scm/linux/kernel/git/torvalds/linux-2.6.git","/*\n *  linux/fs/isofs/dir.c\n *\n *  (C) 1992, 1993, 1994  Eric Youngdale Modified for ISO 9660 filesystem.\n *\n *  (C) 1991  Linus Torvalds - minix filesystem\n *\n *  Steve Beynon		       : Missing last directory entries fixed\n *  (stephen@askone.demon.co.uk)      : 21st June 1996\n * \n *  isofs directory handling functions\n */\n#include <linux/config.h>\n#include <linux/smp_lock.h>\n#include "isofs.h"\n\nstatic int isofs_readdir(struct file *, void *, filldir_t);\n\nstruct file_operations isofs_dir_operations =\n{\n	.read		= generic_read_dir,\n	.readdir	= isofs_readdir,\n};\n\n/*\n * directories can handle most operations...\n */\nstruct inode_operations isofs_dir_inode_operations =\n{\n	.lookup		= isofs_lookup,\n};\n\nint isofs_name_translate(struct iso_directory_record *de, char *new, struct inode *inode)\n{\n	char * old = de->name;\n	int len = de->name_len[0];\n	int i;\n			\n	for (i = 0; i < len; i++) {\n		unsigned char c = old[i];\n		if (!c)\n			break;\n\n		if (c >= 'A' && c <= 'Z')\n			c |= 0x20;	/* lower case */\n\n		/* Drop trailing '.;1' (ISO 9660:1988 7.5.1 requires period) */\n		if (c == '.' && i == len - 3 && old[i + 1] == ';' && old[i + 2] == '1')\n			break;\n\n		/* Drop trailing ';1' */\n		if (c == ';' && i == len - 2 && old[i + 1] == '1')\n			break;\n\n		/* Convert remaining ';' to '.' */\n		/* Also '/' to '.' (broken Acorn-generated ISO9660 images) */\n		if (c == ';' || c == '/')\n			c = '.';\n\n		new[i] = c;\n	}\n	return i;\n}\n\n/* Acorn extensions written by Matthew Wilcox <willy@bofh.ai> 1998 */\nint get_acorn_filename(struct iso_directory_record * de,\n			    char * retname, struct inode * inode)\n{\n	int std;\n	unsigned char * chr;\n	int retnamlen = isofs_name_translate(de, retname, inode);\n	if (retnamlen == 0) return 0;\n	std = sizeof(struct iso_directory_record) + de->name_len[0];\n	if (std & 1) std++;\n	if ((*((unsigned char *) de) - std) != 32) return retnamlen;\n	chr = ((unsigned char *) de) + std;\n	if (strncmp(chr, "ARCHIMEDES", 10)) return retnamlen;\n	if ((*retname == '_') && ((chr[19] & 1) == 1)) *retname = '!';\n	if (((de->flags[0] & 2) == 0) && (chr[13] == 0xff)\n		&& ((chr[12] & 0xf0) == 0xf0))\n	{\n		retname[retnamlen] = ',';\n		sprintf(retname+retnamlen+1, "%3.3x",\n			((chr[12] & 0xf) << 8) | chr[11]);\n		retnamlen += 4;\n	}\n	return retnamlen;\n}\n\n/*\n * This should _really_ be cleaned up some day..\n */\nstatic int do_isofs_readdir(struct inode *inode, struct file *filp,\n		void *dirent, filldir_t filldir,\n		char * tmpname, struct iso_directory_record * tmpde)\n{\n	unsigned long bufsize = ISOFS_BUFFER_SIZE(inode);\n	unsigned char bufbits = ISOFS_BUFFER_BITS(inode);\n	unsigned long block, offset, block_saved, offset_saved;\n	unsigned long inode_number = 0;	/* Quiet GCC */\n	struct buffer_head *bh = NULL;\n	int len;\n	int map;\n	int first_de = 1;\n	char *p = NULL;		/* Quiet GCC */\n	struct iso_directory_record *de;\n	struct isofs_sb_info *sbi = ISOFS_SB(inode->i_sb);\n\n	offset = filp->f_pos & (bufsize - 1);\n	block = filp->f_pos >> bufbits;\n\n	while (filp->f_pos < inode->i_size) {\n		int de_len;\n\n		if (!bh) {\n			bh = isofs_bread(inode, block);\n			if (!bh)\n				return 0;\n		}\n\n		de = (struct iso_directory_record *) (bh->b_data + offset);\n\n		de_len = *(unsigned char *) de;\n\n		/* If the length byte is zero, we should move on to the next\n		   CDROM sector.  If we are at the end of the directory, we\n		   kick out of the while loop. */\n\n		if (de_len == 0) {\n			brelse(bh);\n			bh = NULL;\n			filp->f_pos = (filp->f_pos + ISOFS_BLOCK_SIZE) & ~(ISOFS_BLOCK_SIZE - 1);\n			block = filp->f_pos >> bufbits;\n			offset = 0;\n			continue;\n		}\n\n		block_saved = block;\n		offset_saved = offset;\n		offset += de_len;\n\n		/* Make sure we have a full directory entry */\n		if (offset >= bufsize) {\n			int slop = bufsize - offset + de_len;\n			memcpy(tmpde, de, slop);\n			offset &= bufsize - 1;\n			block++;\n			brelse(bh);\n			bh = NULL;\n			if (offset) {\n				bh = isofs_bread(inode, block);\n				if (!bh)\n					return 0;\n				memcpy((void *) tmpde + slop, bh->b_data, offset);\n			}\n			de = tmpde;\n		}\n\n		if (first_de) {\n			isofs_normalize_block_and_offset(de,\n							 &block_saved,\n							 &offset_saved);\n			inode_number = isofs_get_ino(block_saved,\n						     offset_saved,\n						     bufbits);\n		}\n\n		if (de->flags[-sbi->s_high_sierra] & 0x80) {\n			first_de = 0;\n			filp->f_pos += de_len;\n			continue;\n		}\n		first_de = 1;\n\n		/* Handle the case of the '.' directory */\n		if (de->name_len[0] == 1 && de->name[0] == 0) {\n			if (filldir(dirent, ".", 1, filp->f_pos, inode->i_ino, DT_DIR) < 0)\n				break;\n			filp->f_pos += de_len;\n			continue;\n		}\n\n		len = 0;\n\n		/* Handle the case of the '..' directory */\n		if (de->name_len[0] == 1 && de->name[0] == 1) {\n			inode_number = parent_ino(filp->f_dentry);\n			if (filldir(dirent, "..", 2, filp->f_pos, inode_number, DT_DIR) < 0)\n				break;\n			filp->f_pos += de_len;\n			continue;\n		}\n\n		/* Handle everything else.  Do name translation if there\n		   is no Rock Ridge NM field. */\n\n		/*\n		 * Do not report hidden files if so instructed, or associated\n		 * files unless instructed to do so\n		 */\n		if ((sbi->s_hide == 'y' &&\n				(de->flags[-sbi->s_high_sierra] & 1)) ||\n		      (sbi->s_showassoc =='n' &&\n				(de->flags[-sbi->s_high_sierra] & 4))) {\n			filp->f_pos += de_len;\n			continue;\n		}\n\n		map = 1;\n		if (sbi->s_rock) {\n			len = get_rock_ridge_filename(de, tmpname, inode);\n			if (len != 0) {		/* may be -1 */\n				p = tmpname;\n				map = 0;\n			}\n		}\n		if (map) {\n#ifdef CONFIG_JOLIET\n			if (sbi->s_joliet_level) {\n				len = get_joliet_filename(de, tmpname, inode);\n				p = tmpname;\n			} else\n#endif\n			if (sbi->s_mapping == 'a') {\n				len = get_acorn_filename(de, tmpname, inode);\n				p = tmpname;\n			} else\n			if (sbi->s_mapping == 'n') {\n				len = isofs_name_translate(de, tmpname, inode);\n				p = tmpname;\n			} else {\n				p = de->name;\n				len = de->name_len[0];\n			}\n		}\n		if (len > 0) {\n			if (filldir(dirent, p, len, filp->f_pos, inode_number, DT_UNKNOWN) < 0)\n				break;\n		}\n		filp->f_pos += de_len;\n\n		continue;\n	}\n	if (bh) brelse(bh);\n	return 0;\n}\n\n/*\n * Handle allocation of temporary space for name translation and\n * handling split directory entries.. The real work is done by\n * "do_isofs_readdir()".\n */\nstatic int isofs_readdir(struct file *filp,\n		void *dirent, filldir_t filldir)\n{\n	int result;\n	char * tmpname;\n	struct iso_directory_record * tmpde;\n	struct inode *inode = filp->f_dentry->d_inode;\n\n\n	tmpname = (char *)__get_free_page(GFP_KERNEL);\n	if (tmpname == NULL)\n		return -ENOMEM;\n\n	lock_kernel();\n	tmpde = (struct iso_directory_record *) (tmpname+1024);\n\n	result = do_isofs_readdir(inode, filp, dirent, filldir, tmpname, tmpde);\n\n	free_page((unsigned long) tmpname);\n	unlock_kernel();\n	return result;\n}\n","/*\n *  linux/fs/isofs/dir.c\n *\n *  (C) 1992, 1993, 1994  Eric Youngdale Modified for ISO 9660 filesystem.\n *\n *  (C) 1991  Linus Torvalds - minix filesystem\n *\n *  Steve Beynon		       : Missing last directory entries fixed\n *  (stephen@askone.demon.co.uk)      : 21st June 1996\n * \n *  isofs directory handling functions\n */\n#include <linux/config.h>\n#include <linux/smp_lock.h>\n#include "isofs.h"\n\nstatic int isofs_readdir(struct file *, void *, filldir_t);\n\nstruct file_operations isofs_dir_operations =\n{\n	.read		= generic_read_dir,\n	.readdir	= isofs_readdir,\n};\n\n/*\n * directories can handle most operations...\n */\nstruct inode_operations isofs_dir_inode_operations =\n{\n	.lookup		= isofs_lookup,\n};\n\nint isofs_name_translate(struct iso_directory_record *de, char *new, struct inode *inode)\n{\n	char * old = de->name;\n	int len = de->name_len[0];\n	int i;\n			\n	for (i = 0; i < len; i++) {\n		unsigned char c = old[i];\n		if (!c)\n			break;\n\n		if (c >= 'A' && c <= 'Z')\n			c |= 0x20;	/* lower case */\n\n		/* Drop trailing '.;1' (ISO 9660:1988 7.5.1 requires period) */\n		if (c == '.' && i == len - 3 && old[i + 1] == ';' && old[i + 2] == '1')\n			break;\n\n		/* Drop trailing ';1' */\n		if (c == ';' && i == len - 2 && old[i + 1] == '1')\n			break;\n\n		/* Convert remaining ';' to '.' */\n		/* Also '/' to '.' (broken Acorn-generated ISO9660 images) */\n		if (c == ';' || c == '/')\n			c = '.';\n\n		new[i] = c;\n	}\n	return i;\n}\n\n/* Acorn extensions written by Matthew Wilcox <willy@bofh.ai> 1998 */\nint get_acorn_filename(struct iso_directory_record * de,\n			    char * retname, struct inode * inode)\n{\n	int std;\n	unsigned char * chr;\n	int retnamlen = isofs_name_translate(de, retname, inode);\n	if (retnamlen == 0) return 0;\n	std = sizeof(struct iso_directory_record) + de->name_len[0];\n	if (std & 1) std++;\n	if ((*((unsigned char *) de) - std) != 32) return retnamlen;\n	chr = ((unsigned char *) de) + std;\n	if (strncmp(chr, "ARCHIMEDES", 10)) return retnamlen;\n	if ((*retname == '_') && ((chr[19] & 1) == 1)) *retname = '!';\n	if (((de->flags[0] & 2) == 0) && (chr[13] == 0xff)\n		&& ((chr[12] & 0xf0) == 0xf0))\n	{\n		retname[retnamlen] = ',';\n		sprintf(retname+retnamlen+1, "%3.3x",\n			((chr[12] & 0xf) << 8) | chr[11]);\n		retnamlen += 4;\n	}\n	return retnamlen;\n}\n\n/*\n * This should _really_ be cleaned up some day..\n */\nstatic int do_isofs_readdir(struct inode *inode, struct file *filp,\n		void *dirent, filldir_t filldir,\n		char * tmpname, struct iso_directory_record * tmpde)\n{\n	unsigned long bufsize = ISOFS_BUFFER_SIZE(inode);\n	unsigned char bufbits = ISOFS_BUFFER_BITS(inode);\n	unsigned long block, offset, block_saved, offset_saved;\n	unsigned long inode_number = 0;	/* Quiet GCC */\n	struct buffer_head *bh = NULL;\n	int len;\n	int map;\n	int first_de = 1;\n	char *p = NULL;		/* Quiet GCC */\n	struct iso_directory_record *de;\n	struct isofs_sb_info *sbi = ISOFS_SB(inode->i_sb);\n\n	offset = filp->f_pos & (bufsize - 1);\n	block = filp->f_pos >> bufbits;\n\n	while (filp->f_pos < inode->i_size) {\n		int de_len;\n\n		if (!bh) {\n			bh = isofs_bread(inode, block);\n			if (!bh)\n				return 0;\n		}\n\n		de = (struct iso_directory_record *) (bh->b_data + offset);\n\n		de_len = *(unsigned char *) de;\n\n		/* If the length byte is zero, we should move on to the next\n		   CDROM sector.  If we are at the end of the directory, we\n		   kick out of the while loop. */\n\n		if (de_len == 0) {\n			brelse(bh);\n			bh = NULL;\n			filp->f_pos = (filp->f_pos + ISOFS_BLOCK_SIZE) & ~(ISOFS_BLOCK_SIZE - 1);\n			block = filp->f_pos >> bufbits;\n			offset = 0;\n			continue;\n		}\n\n		block_saved = block;\n		offset_saved = offset;\n		offset += de_len;\n\n		/* Make sure we have a full directory entry */\n		if (offset >= bufsize) {\n			int slop = bufsize - offset + de_len;\n			memcpy(tmpde, de, slop);\n			offset &= bufsize - 1;\n			block++;\n			brelse(bh);\n			bh = NULL;\n			if (offset) {\n				bh = isofs_bread(inode, block);\n				if (!bh)\n					return 0;\n				memcpy((void *) tmpde + slop, bh->b_data, offset);\n			}\n			de = tmpde;\n		}\n\n		if (first_de) {\n			isofs_normalize_block_and_offset(de,\n							 &block_saved,\n							 &offset_saved);\n			inode_number = isofs_get_ino(block_saved,\n						     offset_saved,\n						     bufbits);\n		}\n\n		if (de->flags[-sbi->s_high_sierra] & 0x80) {\n			first_de = 0;\n			filp->f_pos += de_len;\n			continue;\n		}\n		first_de = 1;\n\n		/* Handle the case of the '.' directory */\n		if (de->name_len[0] == 1 && de->name[0] == 0) {\n			if (filldir(dirent, ".", 1, filp->f_pos, inode->i_ino, DT_DIR) < 0)\n				break;\n			filp->f_pos += de_len;\n			continue;\n		}\n\n		len = 0;\n\n		/* Handle the case of the '..' directory */\n		if (de->name_len[0] == 1 && de->name[0] == 1) {\n			inode_number = parent_ino(filp->f_dentry);\n			if (filldir(dirent, "..", 2, filp->f_pos, inode_number, DT_DIR) < 0)\n				break;\n			filp->f_pos += de_len;\n			continue;\n		}\n\n		/* Handle everything else.  Do name translation if there\n		   is no Rock Ridge NM field. */\n		if (sbi->s_unhide == 'n') {\n			/* Do not report hidden or associated files */\n			if (de->flags[-sbi->s_high_sierra] & 5) {\n				filp->f_pos += de_len;\n				continue;\n			}\n		}\n\n		map = 1;\n		if (sbi->s_rock) {\n			len = get_rock_ridge_filename(de, tmpname, inode);\n			if (len != 0) {		/* may be -1 */\n				p = tmpname;\n				map = 0;\n			}\n		}\n		if (map) {\n#ifdef CONFIG_JOLIET\n			if (sbi->s_joliet_level) {\n				len = get_joliet_filename(de, tmpname, inode);\n				p = tmpname;\n			} else\n#endif\n			if (sbi->s_mapping == 'a') {\n				len = get_acorn_filename(de, tmpname, inode);\n				p = tmpname;\n			} else\n			if (sbi->s_mapping == 'n') {\n				len = isofs_name_translate(de, tmpname, inode);\n				p = tmpname;\n			} else {\n				p = de->name;\n				len = de->name_len[0];\n			}\n		}\n		if (len > 0) {\n			if (filldir(dirent, p, len, filp->f_pos, inode_number, DT_UNKNOWN) < 0)\n				break;\n		}\n		filp->f_pos += de_len;\n\n		continue;\n	}\n	if (bh) brelse(bh);\n	return 0;\n}\n\n/*\n * Handle allocation of temporary space for name translation and\n * handling split directory entries.. The real work is done by\n * "do_isofs_readdir()".\n */\nstatic int isofs_readdir(struct file *filp,\n		void *dirent, filldir_t filldir)\n{\n	int result;\n	char * tmpname;\n	struct iso_directory_record * tmpde;\n	struct inode *inode = filp->f_dentry->d_inode;\n\n\n	tmpname = (char *)__get_free_page(GFP_KERNEL);\n	if (tmpname == NULL)\n		return -ENOMEM;\n\n	lock_kernel();\n	tmpde = (struct iso_directory_record *) (tmpname+1024);\n\n	result = do_isofs_readdir(inode, filp, dirent, filldir, tmpname, tmpde);\n\n	free_page((unsigned long) tmpname);\n	unlock_kernel();\n	return result;\n}\n","-		if (sbi->s_unhide == 'n') {-			/* Do not report hidden or associated files */-			if (de->flags[-sbi->s_high_sierra] & 5) {-				filp->f_pos += de_len;-				continue;-			}++		/*+		 * Do not report hidden files if so instructed, or associated+		 * files unless instructed to do so+		 */+		if ((sbi->s_hide == 'y' &&+				(de->flags[-sbi->s_high_sierra] & 1)) ||+		      (sbi->s_showassoc =='n' &&+				(de->flags[-sbi->s_high_sierra] & 4))) {+			filp->f_pos += de_len;+			continue;"
"torvalds/linux",da04b128cf0d74dd4cab270c53d9264e70f9203e,"fs/xfs/quota/xfs_quota_priv.h",fae6ec69c84d71b1d5bda9ede1a262c1681684aa,"fs/xfs/quota/xfs_quota_priv.h",2005-06-22 10:19:24 UTC,"Jaroslav Kysela","72edd5e1a572f82f059ccbb83c92b74d6cb051ff@petra","Merge with rsync://rsync.kernel.org/pub/scm/linux/kernel/git/torvalds/linux-2.6.git","Merge with rsync://rsync.kernel.org/pub/scm/linux/kernel/git/torvalds/linux-2.6.git","/*\n * Copyright (c) 2000-2003 Silicon Graphics, Inc.  All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of version 2 of the GNU General Public License as\n * published by the Free Software Foundation.\n *\n * This program is distributed in the hope that it would be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n *\n * Further, this software is distributed without any warranty that it is\n * free of the rightful claim of any third person regarding infringement\n * or the like.	 Any license provided herein, whether implied or\n * otherwise, applies only to this software file.  Patent licenses, if\n * any, provided herein do not apply to combinations of this program with\n * other software, or any other product whatsoever.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write the Free Software Foundation, Inc., 59\n * Temple Place - Suite 330, Boston MA 02111-1307, USA.\n *\n * Contact information: Silicon Graphics, Inc., 1600 Amphitheatre Pkwy,\n * Mountain View, CA  94043, or:\n *\n * http://www.sgi.com\n *\n * For further information regarding this notice, see:\n *\n * http://oss.sgi.com/projects/GenInfo/SGIGPLNoticeExplan/\n */\n#ifndef __XFS_QUOTA_PRIV_H__\n#define __XFS_QUOTA_PRIV_H__\n\n/*\n * Number of bmaps that we ask from bmapi when doing a quotacheck.\n * We make this restriction to keep the memory usage to a minimum.\n */\n#define XFS_DQITER_MAP_SIZE	10\n\n/* Number of dquots that fit in to a dquot block */\n#define XFS_QM_DQPERBLK(mp)	((mp)->m_quotainfo->qi_dqperchunk)\n\n#define XFS_ISLOCKED_INODE(ip)		(ismrlocked(&(ip)->i_lock, \\n					    MR_UPDATE | MR_ACCESS) != 0)\n#define XFS_ISLOCKED_INODE_EXCL(ip)	(ismrlocked(&(ip)->i_lock, \\n					    MR_UPDATE) != 0)\n\n#define XFS_DQ_IS_ADDEDTO_TRX(t, d)	((d)->q_transp == (t))\n\n#define XFS_QI_MPLRECLAIMS(mp)	((mp)->m_quotainfo->qi_dqreclaims)\n#define XFS_QI_UQIP(mp)		((mp)->m_quotainfo->qi_uquotaip)\n#define XFS_QI_GQIP(mp)		((mp)->m_quotainfo->qi_gquotaip)\n#define XFS_QI_DQCHUNKLEN(mp)	((mp)->m_quotainfo->qi_dqchunklen)\n#define XFS_QI_BTIMELIMIT(mp)	((mp)->m_quotainfo->qi_btimelimit)\n#define XFS_QI_RTBTIMELIMIT(mp) ((mp)->m_quotainfo->qi_rtbtimelimit)\n#define XFS_QI_ITIMELIMIT(mp)	((mp)->m_quotainfo->qi_itimelimit)\n#define XFS_QI_BWARNLIMIT(mp)	((mp)->m_quotainfo->qi_bwarnlimit)\n#define XFS_QI_RTBWARNLIMIT(mp)	((mp)->m_quotainfo->qi_rtbwarnlimit)\n#define XFS_QI_IWARNLIMIT(mp)	((mp)->m_quotainfo->qi_iwarnlimit)\n#define XFS_QI_QOFFLOCK(mp)	((mp)->m_quotainfo->qi_quotaofflock)\n\n#define XFS_QI_MPL_LIST(mp)	((mp)->m_quotainfo->qi_dqlist)\n#define XFS_QI_MPLLOCK(mp)	((mp)->m_quotainfo->qi_dqlist.qh_lock)\n#define XFS_QI_MPLNEXT(mp)	((mp)->m_quotainfo->qi_dqlist.qh_next)\n#define XFS_QI_MPLNDQUOTS(mp)	((mp)->m_quotainfo->qi_dqlist.qh_nelems)\n\n#define XQMLCK(h)			(mutex_lock(&((h)->qh_lock), PINOD))\n#define XQMUNLCK(h)			(mutex_unlock(&((h)->qh_lock)))\n#ifdef DEBUG\nstruct xfs_dqhash;\nstatic inline int XQMISLCKD(struct xfs_dqhash *h)\n{\n	if (mutex_trylock(&h->qh_lock)) {\n		mutex_unlock(&h->qh_lock);\n		return 0;\n	}\n	return 1;\n}\n#endif\n\n#define XFS_DQ_HASH_LOCK(h)		XQMLCK(h)\n#define XFS_DQ_HASH_UNLOCK(h)		XQMUNLCK(h)\n#define XFS_DQ_IS_HASH_LOCKED(h)	XQMISLCKD(h)\n\n#define xfs_qm_mplist_lock(mp)		XQMLCK(&(XFS_QI_MPL_LIST(mp)))\n#define xfs_qm_mplist_unlock(mp)	XQMUNLCK(&(XFS_QI_MPL_LIST(mp)))\n#define XFS_QM_IS_MPLIST_LOCKED(mp)	XQMISLCKD(&(XFS_QI_MPL_LIST(mp)))\n\n#define xfs_qm_freelist_lock(qm)	XQMLCK(&((qm)->qm_dqfreelist))\n#define xfs_qm_freelist_unlock(qm)	XQMUNLCK(&((qm)->qm_dqfreelist))\n#define XFS_QM_IS_FREELIST_LOCKED(qm)	XQMISLCKD(&((qm)->qm_dqfreelist))\n\n/*\n * Hash into a bucket in the dquot hash table, based on <mp, id>.\n */\n#define XFS_DQ_HASHVAL(mp, id) (((__psunsigned_t)(mp) + \\n				 (__psunsigned_t)(id)) & \\n				(xfs_Gqm->qm_dqhashmask - 1))\n#define XFS_DQ_HASH(mp, id, type)   (type == XFS_DQ_USER ? \\n				     (xfs_Gqm->qm_usr_dqhtable + \\n				      XFS_DQ_HASHVAL(mp, id)) : \\n				     (xfs_Gqm->qm_grp_dqhtable + \\n				      XFS_DQ_HASHVAL(mp, id)))\n#define XFS_IS_DQTYPE_ON(mp, type)   (type == XFS_DQ_USER ? \\n					XFS_IS_UQUOTA_ON(mp) : \\n					XFS_IS_OQUOTA_ON(mp))\n#define XFS_IS_DQUOT_UNINITIALIZED(dqp) ( \\n	!dqp->q_core.d_blk_hardlimit && \\n	!dqp->q_core.d_blk_softlimit && \\n	!dqp->q_core.d_rtb_hardlimit && \\n	!dqp->q_core.d_rtb_softlimit && \\n	!dqp->q_core.d_ino_hardlimit && \\n	!dqp->q_core.d_ino_softlimit && \\n	!dqp->q_core.d_bcount && \\n	!dqp->q_core.d_rtbcount && \\n	!dqp->q_core.d_icount)\n\n#define HL_PREVP	dq_hashlist.ql_prevp\n#define HL_NEXT		dq_hashlist.ql_next\n#define MPL_PREVP	dq_mplist.ql_prevp\n#define MPL_NEXT	dq_mplist.ql_next\n\n\n#define _LIST_REMOVE(h, dqp, PVP, NXT)				\\n	{							\\n		 xfs_dquot_t *d;				\\n		 if (((d) = (dqp)->NXT))				\\n			 (d)->PVP = (dqp)->PVP;			\\n		 *((dqp)->PVP) = d;				\\n		 (dqp)->NXT = NULL;				\\n		 (dqp)->PVP = NULL;				\\n		 (h)->qh_version++;				\\n		 (h)->qh_nelems--;				\\n	}\n\n#define _LIST_INSERT(h, dqp, PVP, NXT)				\\n	{							\\n		 xfs_dquot_t *d;				\\n		 if (((d) = (h)->qh_next))			\\n			 (d)->PVP = &((dqp)->NXT);		\\n		 (dqp)->NXT = d;				\\n		 (dqp)->PVP = &((h)->qh_next);			\\n		 (h)->qh_next = dqp;				\\n		 (h)->qh_version++;				\\n		 (h)->qh_nelems++;				\\n	 }\n\n#define FOREACH_DQUOT_IN_MP(dqp, mp) \\n	for ((dqp) = XFS_QI_MPLNEXT(mp); (dqp) != NULL; (dqp) = (dqp)->MPL_NEXT)\n\n#define FOREACH_DQUOT_IN_FREELIST(dqp, qlist)	\\nfor ((dqp) = (qlist)->qh_next; (dqp) != (xfs_dquot_t *)(qlist); \\n     (dqp) = (dqp)->dq_flnext)\n\n#define XQM_HASHLIST_INSERT(h, dqp)	\\n	 _LIST_INSERT(h, dqp, HL_PREVP, HL_NEXT)\n\n#define XQM_FREELIST_INSERT(h, dqp)	\\n	 xfs_qm_freelist_append(h, dqp)\n\n#define XQM_MPLIST_INSERT(h, dqp)	\\n	 _LIST_INSERT(h, dqp, MPL_PREVP, MPL_NEXT)\n\n#define XQM_HASHLIST_REMOVE(h, dqp)	\\n	 _LIST_REMOVE(h, dqp, HL_PREVP, HL_NEXT)\n#define XQM_FREELIST_REMOVE(dqp)	\\n	 xfs_qm_freelist_unlink(dqp)\n#define XQM_MPLIST_REMOVE(h, dqp)	\\n	{ _LIST_REMOVE(h, dqp, MPL_PREVP, MPL_NEXT); \\n	  XFS_QI_MPLRECLAIMS((dqp)->q_mount)++; }\n\n#define XFS_DQ_IS_LOGITEM_INITD(dqp)	((dqp)->q_logitem.qli_dquot == (dqp))\n\n#define XFS_QM_DQP_TO_DQACCT(tp, dqp)	(XFS_QM_ISUDQ(dqp) ? \\n					 (tp)->t_dqinfo->dqa_usrdquots : \\n					 (tp)->t_dqinfo->dqa_grpdquots)\n#define XFS_IS_SUSER_DQUOT(dqp)		\\n	(!((dqp)->q_core.d_id))\n\n#define XFS_PURGE_INODE(ip)		\\n	IRELE(ip);\n\n#define DQFLAGTO_TYPESTR(d)	(((d)->dq_flags & XFS_DQ_USER) ? "USR" : \\n				 (((d)->dq_flags & XFS_DQ_GROUP) ? "GRP" : \\n				 (((d)->dq_flags & XFS_DQ_PROJ) ? "PRJ":"???")))\n#define DQFLAGTO_DIRTYSTR(d)	(XFS_DQ_IS_DIRTY(d) ? "DIRTY" : "NOTDIRTY")\n\n#endif	/* __XFS_QUOTA_PRIV_H__ */\n","/*\n * Copyright (c) 2000-2003 Silicon Graphics, Inc.  All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or modify it\n * under the terms of version 2 of the GNU General Public License as\n * published by the Free Software Foundation.\n *\n * This program is distributed in the hope that it would be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n *\n * Further, this software is distributed without any warranty that it is\n * free of the rightful claim of any third person regarding infringement\n * or the like.	 Any license provided herein, whether implied or\n * otherwise, applies only to this software file.  Patent licenses, if\n * any, provided herein do not apply to combinations of this program with\n * other software, or any other product whatsoever.\n *\n * You should have received a copy of the GNU General Public License along\n * with this program; if not, write the Free Software Foundation, Inc., 59\n * Temple Place - Suite 330, Boston MA 02111-1307, USA.\n *\n * Contact information: Silicon Graphics, Inc., 1600 Amphitheatre Pkwy,\n * Mountain View, CA  94043, or:\n *\n * http://www.sgi.com\n *\n * For further information regarding this notice, see:\n *\n * http://oss.sgi.com/projects/GenInfo/SGIGPLNoticeExplan/\n */\n#ifndef __XFS_QUOTA_PRIV_H__\n#define __XFS_QUOTA_PRIV_H__\n\n/*\n * Number of bmaps that we ask from bmapi when doing a quotacheck.\n * We make this restriction to keep the memory usage to a minimum.\n */\n#define XFS_DQITER_MAP_SIZE	10\n\n/* Number of dquots that fit in to a dquot block */\n#define XFS_QM_DQPERBLK(mp)	((mp)->m_quotainfo->qi_dqperchunk)\n\n#define XFS_ISLOCKED_INODE(ip)		(ismrlocked(&(ip)->i_lock, \\n					    MR_UPDATE | MR_ACCESS) != 0)\n#define XFS_ISLOCKED_INODE_EXCL(ip)	(ismrlocked(&(ip)->i_lock, \\n					    MR_UPDATE) != 0)\n\n#define XFS_DQ_IS_ADDEDTO_TRX(t, d)	((d)->q_transp == (t))\n\n#define XFS_QI_MPLRECLAIMS(mp)	((mp)->m_quotainfo->qi_dqreclaims)\n#define XFS_QI_UQIP(mp)		((mp)->m_quotainfo->qi_uquotaip)\n#define XFS_QI_GQIP(mp)		((mp)->m_quotainfo->qi_gquotaip)\n#define XFS_QI_DQCHUNKLEN(mp)	((mp)->m_quotainfo->qi_dqchunklen)\n#define XFS_QI_BTIMELIMIT(mp)	((mp)->m_quotainfo->qi_btimelimit)\n#define XFS_QI_RTBTIMELIMIT(mp) ((mp)->m_quotainfo->qi_rtbtimelimit)\n#define XFS_QI_ITIMELIMIT(mp)	((mp)->m_quotainfo->qi_itimelimit)\n#define XFS_QI_BWARNLIMIT(mp)	((mp)->m_quotainfo->qi_bwarnlimit)\n#define XFS_QI_IWARNLIMIT(mp)	((mp)->m_quotainfo->qi_iwarnlimit)\n#define XFS_QI_QOFFLOCK(mp)	((mp)->m_quotainfo->qi_quotaofflock)\n\n#define XFS_QI_MPL_LIST(mp)	((mp)->m_quotainfo->qi_dqlist)\n#define XFS_QI_MPLLOCK(mp)	((mp)->m_quotainfo->qi_dqlist.qh_lock)\n#define XFS_QI_MPLNEXT(mp)	((mp)->m_quotainfo->qi_dqlist.qh_next)\n#define XFS_QI_MPLNDQUOTS(mp)	((mp)->m_quotainfo->qi_dqlist.qh_nelems)\n\n#define XQMLCK(h)			(mutex_lock(&((h)->qh_lock), PINOD))\n#define XQMUNLCK(h)			(mutex_unlock(&((h)->qh_lock)))\n#ifdef DEBUG\nstruct xfs_dqhash;\nstatic inline int XQMISLCKD(struct xfs_dqhash *h)\n{\n	if (mutex_trylock(&h->qh_lock)) {\n		mutex_unlock(&h->qh_lock);\n		return 0;\n	}\n	return 1;\n}\n#endif\n\n#define XFS_DQ_HASH_LOCK(h)		XQMLCK(h)\n#define XFS_DQ_HASH_UNLOCK(h)		XQMUNLCK(h)\n#define XFS_DQ_IS_HASH_LOCKED(h)	XQMISLCKD(h)\n\n#define xfs_qm_mplist_lock(mp)		XQMLCK(&(XFS_QI_MPL_LIST(mp)))\n#define xfs_qm_mplist_unlock(mp)	XQMUNLCK(&(XFS_QI_MPL_LIST(mp)))\n#define XFS_QM_IS_MPLIST_LOCKED(mp)	XQMISLCKD(&(XFS_QI_MPL_LIST(mp)))\n\n#define xfs_qm_freelist_lock(qm)	XQMLCK(&((qm)->qm_dqfreelist))\n#define xfs_qm_freelist_unlock(qm)	XQMUNLCK(&((qm)->qm_dqfreelist))\n#define XFS_QM_IS_FREELIST_LOCKED(qm)	XQMISLCKD(&((qm)->qm_dqfreelist))\n\n/*\n * Hash into a bucket in the dquot hash table, based on <mp, id>.\n */\n#define XFS_DQ_HASHVAL(mp, id) (((__psunsigned_t)(mp) + \\n				 (__psunsigned_t)(id)) & \\n				(xfs_Gqm->qm_dqhashmask - 1))\n#define XFS_DQ_HASH(mp, id, type)   (type == XFS_DQ_USER ? \\n				     (xfs_Gqm->qm_usr_dqhtable + \\n				      XFS_DQ_HASHVAL(mp, id)) : \\n				     (xfs_Gqm->qm_grp_dqhtable + \\n				      XFS_DQ_HASHVAL(mp, id)))\n#define XFS_IS_DQTYPE_ON(mp, type)   (type == XFS_DQ_USER ? \\n				      XFS_IS_UQUOTA_ON(mp):XFS_IS_GQUOTA_ON(mp))\n#define XFS_IS_DQUOT_UNINITIALIZED(dqp) ( \\n	!dqp->q_core.d_blk_hardlimit && \\n	!dqp->q_core.d_blk_softlimit && \\n	!dqp->q_core.d_rtb_hardlimit && \\n	!dqp->q_core.d_rtb_softlimit && \\n	!dqp->q_core.d_ino_hardlimit && \\n	!dqp->q_core.d_ino_softlimit && \\n	!dqp->q_core.d_bcount && \\n	!dqp->q_core.d_rtbcount && \\n	!dqp->q_core.d_icount)\n\n#define HL_PREVP	dq_hashlist.ql_prevp\n#define HL_NEXT		dq_hashlist.ql_next\n#define MPL_PREVP	dq_mplist.ql_prevp\n#define MPL_NEXT	dq_mplist.ql_next\n\n\n#define _LIST_REMOVE(h, dqp, PVP, NXT)				\\n	{							\\n		 xfs_dquot_t *d;				\\n		 if (((d) = (dqp)->NXT))				\\n			 (d)->PVP = (dqp)->PVP;			\\n		 *((dqp)->PVP) = d;				\\n		 (dqp)->NXT = NULL;				\\n		 (dqp)->PVP = NULL;				\\n		 (h)->qh_version++;				\\n		 (h)->qh_nelems--;				\\n	}\n\n#define _LIST_INSERT(h, dqp, PVP, NXT)				\\n	{							\\n		 xfs_dquot_t *d;				\\n		 if (((d) = (h)->qh_next))			\\n			 (d)->PVP = &((dqp)->NXT);		\\n		 (dqp)->NXT = d;				\\n		 (dqp)->PVP = &((h)->qh_next);			\\n		 (h)->qh_next = dqp;				\\n		 (h)->qh_version++;				\\n		 (h)->qh_nelems++;				\\n	 }\n\n#define FOREACH_DQUOT_IN_MP(dqp, mp) \\n	for ((dqp) = XFS_QI_MPLNEXT(mp); (dqp) != NULL; (dqp) = (dqp)->MPL_NEXT)\n\n#define FOREACH_DQUOT_IN_FREELIST(dqp, qlist)	\\nfor ((dqp) = (qlist)->qh_next; (dqp) != (xfs_dquot_t *)(qlist); \\n     (dqp) = (dqp)->dq_flnext)\n\n#define XQM_HASHLIST_INSERT(h, dqp)	\\n	 _LIST_INSERT(h, dqp, HL_PREVP, HL_NEXT)\n\n#define XQM_FREELIST_INSERT(h, dqp)	\\n	 xfs_qm_freelist_append(h, dqp)\n\n#define XQM_MPLIST_INSERT(h, dqp)	\\n	 _LIST_INSERT(h, dqp, MPL_PREVP, MPL_NEXT)\n\n#define XQM_HASHLIST_REMOVE(h, dqp)	\\n	 _LIST_REMOVE(h, dqp, HL_PREVP, HL_NEXT)\n#define XQM_FREELIST_REMOVE(dqp)	\\n	 xfs_qm_freelist_unlink(dqp)\n#define XQM_MPLIST_REMOVE(h, dqp)	\\n	{ _LIST_REMOVE(h, dqp, MPL_PREVP, MPL_NEXT); \\n	  XFS_QI_MPLRECLAIMS((dqp)->q_mount)++; }\n\n#define XFS_DQ_IS_LOGITEM_INITD(dqp)	((dqp)->q_logitem.qli_dquot == (dqp))\n\n#define XFS_QM_DQP_TO_DQACCT(tp, dqp)	(XFS_QM_ISUDQ(dqp) ? \\n					 (tp)->t_dqinfo->dqa_usrdquots : \\n					 (tp)->t_dqinfo->dqa_grpdquots)\n#define XFS_IS_SUSER_DQUOT(dqp)		\\n	(!((dqp)->q_core.d_id))\n\n#define XFS_PURGE_INODE(ip)		\\n	{				\\n	  vmap_t dqvmap;		\\n	  vnode_t *dqvp;		\\n	  dqvp = XFS_ITOV(ip);		\\n	  VMAP(dqvp, dqvmap);		\\n	  VN_RELE(dqvp);		\\n	}\n\n#define DQFLAGTO_TYPESTR(d)	(((d)->dq_flags & XFS_DQ_USER) ? "USR" : \\n				 (((d)->dq_flags & XFS_DQ_GROUP) ? "GRP" : "???"))\n#define DQFLAGTO_DIRTYSTR(d)	(XFS_DQ_IS_DIRTY(d) ? "DIRTY" : "NOTDIRTY")\n\n#endif	/* __XFS_QUOTA_PRIV_H__ */\n","+#define XFS_QI_RTBWARNLIMIT(mp)	((mp)->m_quotainfo->qi_rtbwarnlimit)-				      XFS_IS_UQUOTA_ON(mp):XFS_IS_GQUOTA_ON(mp))+					XFS_IS_UQUOTA_ON(mp) : \+					XFS_IS_OQUOTA_ON(mp))-	{				\-	  vmap_t dqvmap;		\-	  vnode_t *dqvp;		\-	  dqvp = XFS_ITOV(ip);		\-	  VMAP(dqvp, dqvmap);		\-	  VN_RELE(dqvp);		\-	}+	IRELE(ip);-				 (((d)->dq_flags & XFS_DQ_GROUP) ? "GRP" : "???"))+				 (((d)->dq_flags & XFS_DQ_GROUP) ? "GRP" : \+				 (((d)->dq_flags & XFS_DQ_PROJ) ? "PRJ":"???")))"
"torvalds/linux",da04b128cf0d74dd4cab270c53d9264e70f9203e,"arch/m32r/Kconfig",fae6ec69c84d71b1d5bda9ede1a262c1681684aa,"arch/m32r/Kconfig",2005-06-22 10:19:24 UTC,"Jaroslav Kysela","72edd5e1a572f82f059ccbb83c92b74d6cb051ff@petra","Merge with rsync://rsync.kernel.org/pub/scm/linux/kernel/git/torvalds/linux-2.6.git","Merge with rsync://rsync.kernel.org/pub/scm/linux/kernel/git/torvalds/linux-2.6.git","#\n# For a description of the syntax of this configuration file,\n# see Documentation/kbuild/kconfig-language.txt.\n#\n\nmainmenu "Linux/M32R Kernel Configuration"\n\nconfig M32R\n	bool\n	default y\n\nconfig SBUS\n	bool\n\nconfig UID16\n	bool\n	default n\n\nconfig GENERIC_ISA_DMA\n	bool\n	default y\n\nconfig GENERIC_HARDIRQS\n	bool\n	default y\n\nconfig GENERIC_IRQ_PROBE\n	bool\n	default y\n\nsource "init/Kconfig"\n\n\nmenu "Processor type and features"\n\nchoice\n	prompt "Platform Type"\n	default PLAT_MAPPI\n\nconfig PLAT_MAPPI\n	bool "Mappi-I"\n	help\n	  The Mappi-I is an FPGA board for SOC (System-On-a-Chip) prototyping.\n	  You can operate a Linux system on this board by using an M32R\n	  softmacro core, which is a fully-synthesizable functional model\n	  described in Verilog-HDL.\n\n	  The Mappi-I board was the first platform, which had been used\n	  to port and develop a Linux system for the M32R processor.\n	  Currently, the Mappi-II, an heir to the Mappi-I, is available.\n\nconfig PLAT_USRV\n	bool "uServer"\n\nconfig PLAT_M32700UT\n	bool "M32700UT"\n	help\n	  The M3T-M32700UT is an evaluation board based on uT-Engine\n	  specification.  This board has an M32700 (Chaos) evaluation chip.\n	  You can say Y for SMP, because the M32700 is a single chip\n	  multiprocessor.\n\nconfig PLAT_OPSPUT\n	bool "OPSPUT"\n	help\n	  The OPSPUT is an evaluation board based on uT-Engine\n	  specification.  This board has a OPSP-REP chip.\n\nconfig PLAT_OAKS32R\n	bool "OAKS32R"\n	help\n	  The OAKS32R is a tiny, inexpensive evaluation board.\n	  Please note that if you say Y here and choose chip "M32102",\n	  say N for MMU and select a no-MMU version kernel, otherwise\n	  a kernel with MMU support will not work, because the M32102\n	  is a microcontroller for embedded systems and it has no MMU.\n\nconfig PLAT_MAPPI2\n       bool "Mappi-II(M3A-ZA36/M3A-ZA52)"\n\nconfig PLAT_MAPPI3\n       bool "Mappi-III(M3A-2170)"\n\nendchoice\n\nchoice\n	prompt "Processor family"\n	default CHIP_M32700\n\nconfig CHIP_M32700\n	bool "M32700 (Chaos)"\n\nconfig CHIP_M32102\n	bool "M32102"\n\nconfig CHIP_VDEC2\n       bool "VDEC2"\n\nconfig CHIP_OPSP\n       bool "OPSP"\n\nendchoice\n\nconfig MMU\n	bool "Support for memory management hardware"\n	depends on CHIP_M32700 || CHIP_VDEC2 || CHIP_OPSP\n	default y\n\nconfig TLB_ENTRIES\n       int "TLB Entries"\n       depends on CHIP_M32700 || CHIP_VDEC2 || CHIP_OPSP\n       default 32 if CHIP_M32700 || CHIP_OPSP\n       default 16 if CHIP_VDEC2\n\n\nconfig ISA_M32R\n        bool\n	depends on CHIP_M32102\n	default y\n\nconfig ISA_M32R2\n	bool\n	depends on CHIP_M32700 || CHIP_VDEC2 || CHIP_OPSP\n	default y\n\nconfig ISA_DSP_LEVEL2\n	bool\n	depends on CHIP_M32700 || CHIP_OPSP\n	default y\n\nconfig ISA_DUAL_ISSUE\n	bool\n	depends on CHIP_M32700 || CHIP_OPSP\n	default y\n\nconfig BUS_CLOCK\n	int "Bus Clock [Hz] (integer)"\n	default "70000000" if PLAT_MAPPI\n	default "25000000" if PLAT_USRV\n	default "50000000" if PLAT_MAPPI3\n	default "50000000" if PLAT_M32700UT\n	default "50000000" if PLAT_OPSPUT\n	default "33333333" if PLAT_OAKS32R\n	default "20000000" if PLAT_MAPPI2\n\nconfig TIMER_DIVIDE\n	int "Timer divider (integer)"\n	default "128"\n\nconfig CPU_LITTLE_ENDIAN\n        bool "Generate little endian code"\n	default n\n\nconfig MEMORY_START\n	hex "Physical memory start address (hex)"\n	default "08000000" if PLAT_MAPPI || PLAT_MAPPI2 || PLAT_MAPPI3\n	default "08000000" if PLAT_USRV\n	default "08000000" if PLAT_M32700UT\n	default "08000000" if PLAT_OPSPUT\n	default "01000000" if PLAT_OAKS32R\n\nconfig MEMORY_SIZE\n	hex "Physical memory size (hex)"\n	default "08000000" if PLAT_MAPPI3\n	default "04000000" if PLAT_MAPPI || PLAT_MAPPI2\n	default "02000000" if PLAT_USRV\n	default "01000000" if PLAT_M32700UT\n	default "01000000" if PLAT_OPSPUT\n	default "00800000" if PLAT_OAKS32R\n\nconfig NOHIGHMEM\n	bool\n	default y\n\nconfig DISCONTIGMEM\n	bool "Internal RAM Support"\n	depends on CHIP_M32700 || CHIP_M32102 || CHIP_VDEC2 || CHIP_OPSP\n	default y\n\nconfig IRAM_START\n	hex "Internal memory start address (hex)"\n	default "00f00000"\n	depends on (CHIP_M32700 || CHIP_M32102 || CHIP_VDEC2 || CHIP_OPSP) && DISCONTIGMEM\n\nconfig IRAM_SIZE\n	hex "Internal memory size (hex)"\n	depends on (CHIP_M32700 || CHIP_M32102 || CHIP_VDEC2 || CHIP_OPSP) && DISCONTIGMEM\n	default "00080000" if CHIP_M32700\n	default "00010000" if CHIP_M32102 || CHIP_OPSP\n	default "00008000" if CHIP_VDEC2\n\n#\n# Define implied options from the CPU selection here\n#\n\nconfig RWSEM_GENERIC_SPINLOCK\n	bool\n	depends on M32R\n	default y\n\nconfig RWSEM_XCHGADD_ALGORITHM\n	bool\n	default n\n\nconfig GENERIC_CALIBRATE_DELAY\n	bool\n	default y\n\nconfig PREEMPT\n	bool "Preemptible Kernel"\n	help\n	  This option reduces the latency of the kernel when reacting to\n	  real-time or interactive events by allowing a low priority process to\n	  be preempted even if it is in kernel mode executing a system call.\n	  This allows applications to run more reliably even when the system is\n	  under load.\n\n	  Say Y here if you are building a kernel for a desktop, embedded\n	  or real-time system.  Say N if you are unsure.\n\nconfig HAVE_DEC_LOCK\n	bool\n	depends on (SMP || PREEMPT)\n	default n\n\nconfig SMP\n	bool "Symmetric multi-processing support"\n	---help---\n	  This enables support for systems with more than one CPU. If you have\n	  a system with only one CPU, like most personal computers, say N. If\n	  you have a system with more than one CPU, say Y.\n\n	  If you say N here, the kernel will run on single and multiprocessor\n	  machines, but will use only one CPU of a multiprocessor machine. If\n	  you say Y here, the kernel will run on many, but not all,\n	  singleprocessor machines. On a singleprocessor machine, the kernel\n	  will run faster if you say N here.\n\n	  People using multiprocessor machines who say Y here should also say\n	  Y to "Enhanced Real Time Clock Support", below. The "Advanced Power\n	  Management" code will be disabled if you say Y here.\n\n	  See also the <file:Documentation/smp.tex>,\n	  <file:Documentation/smp.txt> and the SMP-HOWTO available at\n	  <http://www.linuxdoc.org/docs.html#howto>.\n\n	  If you don't know what to do here, say N.\n\nconfig CHIP_M32700_TS1\n	bool "Workaround code for the M32700 TS1 chip's bug"\n	depends on (CHIP_M32700 && SMP)\n	default n\n\nconfig NR_CPUS\n	int "Maximum number of CPUs (2-32)"\n	range 2 32\n	depends on SMP\n	default "2"\n	help\n	  This allows you to specify the maximum number of CPUs which this\n	  kernel will support.  The maximum supported value is 32 and the\n	  minimum value which makes sense is 2.\n\n	  This is purely to save memory - each supported CPU adds\n	  approximately eight kilobytes to the kernel image.\n\n# Common NUMA Features\nconfig NUMA\n	bool "Numa Memory Allocation Support"\n	depends on SMP\n	default n\n\n# turning this on wastes a bunch of space.\n# Summit needs it only when NUMA is on\nconfig BOOT_IOREMAP\n	bool\n	depends on NUMA\n	default n\n\nendmenu\n\n\nmenu "Bus options (PCI, PCMCIA, EISA, MCA, ISA)"\n\nconfig PCI\n	bool "PCI support"\n	default n\n	help\n	  Find out whether you have a PCI motherboard. PCI is the name of a\n	  bus system, i.e. the way the CPU talks to the other stuff inside\n	  your box. Other bus systems are ISA, EISA, MicroChannel (MCA) or\n	  VESA. If you have PCI, say Y, otherwise N.\n\n	  The PCI-HOWTO, available from\n	  <http://www.linuxdoc.org/docs.html#howto>, contains valuable\n	  information about which PCI hardware does work under Linux and which\n	  doesn't.\n\nchoice\n	prompt "PCI access mode"\n	depends on PCI\n	default PCI_GOANY\n\nconfig PCI_GOBIOS\n	bool "BIOS"\n	---help---\n	  On PCI systems, the BIOS can be used to detect the PCI devices and\n	  determine their configuration. However, some old PCI motherboards\n	  have BIOS bugs and may crash if this is done. Also, some embedded\n	  PCI-based systems don't have any BIOS at all. Linux can also try to\n	  detect the PCI hardware directly without using the BIOS.\n\n	  With this option, you can specify how Linux should detect the PCI\n	  devices. If you choose "BIOS", the BIOS will be used, if you choose\n	  "Direct", the BIOS won't be used, and if you choose "Any", the\n	  kernel will try the direct access method and falls back to the BIOS\n	  if that doesn't work. If unsure, go with the default, which is\n	  "Any".\n\nconfig PCI_GODIRECT\n	bool "Direct"\n\nconfig PCI_GOANY\n	bool "Any"\n\nendchoice\n\nconfig PCI_BIOS\n	bool\n	depends on PCI && (PCI_GOBIOS || PCI_GOANY)\n	default y\n\nconfig PCI_DIRECT\n	bool\n 	depends on PCI && (PCI_GODIRECT || PCI_GOANY)\n	default y\n\nsource "drivers/pci/Kconfig"\n\nconfig ISA\n	bool "ISA support"\n	help\n	  Find out whether you have ISA slots on your motherboard.  ISA is the\n	  name of a bus system, i.e. the way the CPU talks to the other stuff\n	  inside your box.  If you have ISA, say Y, otherwise N.\n\nsource "drivers/pcmcia/Kconfig"\n\nsource "drivers/pci/hotplug/Kconfig"\n\nendmenu\n\n\nmenu "Executable file formats"\n\nsource "fs/Kconfig.binfmt"\n\nendmenu\n\nsource "drivers/Kconfig"\n\nsource "fs/Kconfig"\n\nsource "arch/m32r/oprofile/Kconfig"\n\nsource "arch/m32r/Kconfig.debug"\n\nsource "security/Kconfig"\n\nsource "crypto/Kconfig"\n\nsource "lib/Kconfig"\n","#\n# For a description of the syntax of this configuration file,\n# see Documentation/kbuild/kconfig-language.txt.\n#\n\nmainmenu "Linux/M32R Kernel Configuration"\n\nconfig M32R\n	bool\n	default y\n\nconfig SBUS\n	bool\n\nconfig UID16\n	bool\n	default n\n\nconfig GENERIC_ISA_DMA\n	bool\n	default y\n\nconfig GENERIC_HARDIRQS\n	bool\n	default y\n\nconfig GENERIC_IRQ_PROBE\n	bool\n	default y\n\nsource "init/Kconfig"\n\n\nmenu "Processor type and features"\n\nchoice\n	prompt "Platform Type"\n	default PLAT_MAPPI\n\nconfig PLAT_MAPPI\n	bool "Mappi-I"\n	help\n	  The Mappi-I is an FPGA board for SOC (System-On-a-Chip) prototyping.\n	  You can operate a Linux system on this board by using an M32R\n	  softmacro core, which is a fully-synthesizable functional model\n	  described in Verilog-HDL.\n\n	  The Mappi-I board was the first platform, which had been used\n	  to port and develop a Linux system for the M32R processor.\n	  Currently, the Mappi-II, an heir to the Mappi-I, is available.\n\nconfig PLAT_USRV\n	bool "uServer"\n\nconfig PLAT_M32700UT\n	bool "M32700UT"\n	help\n	  The M3T-M32700UT is an evaluation board based on uT-Engine\n	  specification.  This board has an M32700 (Chaos) evaluation chip.\n	  You can say Y for SMP, because the M32700 is a single chip\n	  multiprocessor.\n\nconfig PLAT_OPSPUT\n	bool "OPSPUT"\n	help\n	  The OPSPUT is an evaluation board based on uT-Engine\n	  specification.  This board has a OPSP-REP chip.\n\nconfig PLAT_OAKS32R\n	bool "OAKS32R"\n	help\n	  The OAKS32R is a tiny, inexpensive evaluation board.\n	  Please note that if you say Y here and choose chip "M32102",\n	  say N for MMU and select a no-MMU version kernel, otherwise\n	  a kernel with MMU support will not work, because the M32102\n	  is a microcontroller for embedded systems and it has no MMU.\n\nconfig PLAT_MAPPI2\n       bool "Mappi-II(M3A-ZA36/M3A-ZA52)"\n\nendchoice\n\nchoice\n	prompt "Processor family"\n	default CHIP_M32700\n\nconfig CHIP_M32700\n	bool "M32700 (Chaos)"\n\nconfig CHIP_M32102\n	bool "M32102"\n\nconfig CHIP_VDEC2\n       bool "VDEC2"\n\nconfig CHIP_OPSP\n       bool "OPSP"\n\nendchoice\n\nconfig MMU\n	bool "Support for memory management hardware"\n	depends on CHIP_M32700 || CHIP_VDEC2 || CHIP_OPSP\n	default y\n\nconfig TLB_ENTRIES\n       int "TLB Entries"\n       depends on CHIP_M32700 || CHIP_VDEC2 || CHIP_OPSP\n       default 32 if CHIP_M32700 || CHIP_OPSP\n       default 16 if CHIP_VDEC2\n\n\nconfig ISA_M32R\n        bool\n	depends on CHIP_M32102\n	default y\n\nconfig ISA_M32R2\n	bool\n	depends on CHIP_M32700 || CHIP_VDEC2 || CHIP_OPSP\n	default y\n\nconfig ISA_DSP_LEVEL2\n	bool\n	depends on CHIP_M32700 || CHIP_OPSP\n	default y\n\nconfig ISA_DUAL_ISSUE\n	bool\n	depends on CHIP_M32700 || CHIP_OPSP\n	default y\n\nconfig BUS_CLOCK\n	int "Bus Clock [Hz] (integer)"\n	default "70000000" if PLAT_MAPPI\n	default "25000000" if PLAT_USRV\n	default "50000000" if PLAT_M32700UT\n	default "50000000" if PLAT_OPSPUT\n	default "33333333" if PLAT_OAKS32R\n	default "20000000" if PLAT_MAPPI2\n\nconfig TIMER_DIVIDE\n	int "Timer divider (integer)"\n	default "128"\n\nconfig CPU_LITTLE_ENDIAN\n        bool "Generate little endian code"\n	default n\n\nconfig MEMORY_START\n	hex "Physical memory start address (hex)"\n	default "08000000" if PLAT_MAPPI || PLAT_MAPPI2\n	default "08000000" if PLAT_USRV\n	default "08000000" if PLAT_M32700UT\n	default "08000000" if PLAT_OPSPUT\n	default "01000000" if PLAT_OAKS32R\n\nconfig MEMORY_SIZE\n	hex "Physical memory size (hex)"\n	default "04000000" if PLAT_MAPPI || PLAT_MAPPI2\n	default "02000000" if PLAT_USRV\n	default "01000000" if PLAT_M32700UT\n	default "01000000" if PLAT_OPSPUT\n	default "00800000" if PLAT_OAKS32R\n\nconfig NOHIGHMEM\n	bool\n	default y\n\nconfig DISCONTIGMEM\n	bool "Internal RAM Support"\n	depends on CHIP_M32700 || CHIP_M32102 || CHIP_VDEC2 || CHIP_OPSP\n	default y\n\nconfig IRAM_START\n	hex "Internal memory start address (hex)"\n	default "00f00000"\n	depends on (CHIP_M32700 || CHIP_M32102 || CHIP_VDEC2 || CHIP_OPSP) && DISCONTIGMEM\n\nconfig IRAM_SIZE\n	hex "Internal memory size (hex)"\n	depends on (CHIP_M32700 || CHIP_M32102 || CHIP_VDEC2 || CHIP_OPSP) && DISCONTIGMEM\n	default "00080000" if CHIP_M32700\n	default "00010000" if CHIP_M32102 || CHIP_OPSP\n	default "00008000" if CHIP_VDEC2\n\n#\n# Define implied options from the CPU selection here\n#\n\nconfig RWSEM_GENERIC_SPINLOCK\n	bool\n	depends on M32R\n	default y\n\nconfig RWSEM_XCHGADD_ALGORITHM\n	bool\n	default n\n\nconfig GENERIC_CALIBRATE_DELAY\n	bool\n	default y\n\nconfig PREEMPT\n	bool "Preemptible Kernel"\n	help\n	  This option reduces the latency of the kernel when reacting to\n	  real-time or interactive events by allowing a low priority process to\n	  be preempted even if it is in kernel mode executing a system call.\n	  This allows applications to run more reliably even when the system is\n	  under load.\n\n	  Say Y here if you are building a kernel for a desktop, embedded\n	  or real-time system.  Say N if you are unsure.\n\nconfig HAVE_DEC_LOCK\n	bool\n	depends on (SMP || PREEMPT)\n	default n\n\nconfig SMP\n	bool "Symmetric multi-processing support"\n	---help---\n	  This enables support for systems with more than one CPU. If you have\n	  a system with only one CPU, like most personal computers, say N. If\n	  you have a system with more than one CPU, say Y.\n\n	  If you say N here, the kernel will run on single and multiprocessor\n	  machines, but will use only one CPU of a multiprocessor machine. If\n	  you say Y here, the kernel will run on many, but not all,\n	  singleprocessor machines. On a singleprocessor machine, the kernel\n	  will run faster if you say N here.\n\n	  People using multiprocessor machines who say Y here should also say\n	  Y to "Enhanced Real Time Clock Support", below. The "Advanced Power\n	  Management" code will be disabled if you say Y here.\n\n	  See also the <file:Documentation/smp.tex>,\n	  <file:Documentation/smp.txt> and the SMP-HOWTO available at\n	  <http://www.linuxdoc.org/docs.html#howto>.\n\n	  If you don't know what to do here, say N.\n\nconfig CHIP_M32700_TS1\n	bool "Workaround code for the M32700 TS1 chip's bug"\n	depends on (CHIP_M32700 && SMP)\n	default n\n\nconfig NR_CPUS\n	int "Maximum number of CPUs (2-32)"\n	range 2 32\n	depends on SMP\n	default "2"\n	help\n	  This allows you to specify the maximum number of CPUs which this\n	  kernel will support.  The maximum supported value is 32 and the\n	  minimum value which makes sense is 2.\n\n	  This is purely to save memory - each supported CPU adds\n	  approximately eight kilobytes to the kernel image.\n\n# Common NUMA Features\nconfig NUMA\n	bool "Numa Memory Allocation Support"\n	depends on SMP\n	default n\n\n# turning this on wastes a bunch of space.\n# Summit needs it only when NUMA is on\nconfig BOOT_IOREMAP\n	bool\n	depends on NUMA\n	default n\n\nendmenu\n\n\nmenu "Bus options (PCI, PCMCIA, EISA, MCA, ISA)"\n\nconfig PCI\n	bool "PCI support"\n	default n\n	help\n	  Find out whether you have a PCI motherboard. PCI is the name of a\n	  bus system, i.e. the way the CPU talks to the other stuff inside\n	  your box. Other bus systems are ISA, EISA, MicroChannel (MCA) or\n	  VESA. If you have PCI, say Y, otherwise N.\n\n	  The PCI-HOWTO, available from\n	  <http://www.linuxdoc.org/docs.html#howto>, contains valuable\n	  information about which PCI hardware does work under Linux and which\n	  doesn't.\n\nchoice\n	prompt "PCI access mode"\n	depends on PCI\n	default PCI_GOANY\n\nconfig PCI_GOBIOS\n	bool "BIOS"\n	---help---\n	  On PCI systems, the BIOS can be used to detect the PCI devices and\n	  determine their configuration. However, some old PCI motherboards\n	  have BIOS bugs and may crash if this is done. Also, some embedded\n	  PCI-based systems don't have any BIOS at all. Linux can also try to\n	  detect the PCI hardware directly without using the BIOS.\n\n	  With this option, you can specify how Linux should detect the PCI\n	  devices. If you choose "BIOS", the BIOS will be used, if you choose\n	  "Direct", the BIOS won't be used, and if you choose "Any", the\n	  kernel will try the direct access method and falls back to the BIOS\n	  if that doesn't work. If unsure, go with the default, which is\n	  "Any".\n\nconfig PCI_GODIRECT\n	bool "Direct"\n\nconfig PCI_GOANY\n	bool "Any"\n\nendchoice\n\nconfig PCI_BIOS\n	bool\n	depends on PCI && (PCI_GOBIOS || PCI_GOANY)\n	default y\n\nconfig PCI_DIRECT\n	bool\n 	depends on PCI && (PCI_GODIRECT || PCI_GOANY)\n	default y\n\nsource "drivers/pci/Kconfig"\n\nconfig ISA\n	bool "ISA support"\n	help\n	  Find out whether you have ISA slots on your motherboard.  ISA is the\n	  name of a bus system, i.e. the way the CPU talks to the other stuff\n	  inside your box.  If you have ISA, say Y, otherwise N.\n\nsource "drivers/pcmcia/Kconfig"\n\nsource "drivers/pci/hotplug/Kconfig"\n\nendmenu\n\n\nmenu "Executable file formats"\n\nsource "fs/Kconfig.binfmt"\n\nendmenu\n\nsource "drivers/Kconfig"\n\nsource "fs/Kconfig"\n\nsource "arch/m32r/oprofile/Kconfig"\n\nsource "arch/m32r/Kconfig.debug"\n\nsource "security/Kconfig"\n\nsource "crypto/Kconfig"\n\nsource "lib/Kconfig"\n","+config PLAT_MAPPI3+       bool "Mappi-III(M3A-2170)"++	default "50000000" if PLAT_MAPPI3-	default "08000000" if PLAT_MAPPI || PLAT_MAPPI2+	default "08000000" if PLAT_MAPPI || PLAT_MAPPI2 || PLAT_MAPPI3+	default "08000000" if PLAT_MAPPI3"
"torvalds/linux",da04b128cf0d74dd4cab270c53d9264e70f9203e,"CREDITS",fae6ec69c84d71b1d5bda9ede1a262c1681684aa,"CREDITS",2005-06-22 10:19:24 UTC,"Jaroslav Kysela","72edd5e1a572f82f059ccbb83c92b74d6cb051ff@petra","Merge with rsync://rsync.kernel.org/pub/scm/linux/kernel/git/torvalds/linux-2.6.git","Merge with rsync://rsync.kernel.org/pub/scm/linux/kernel/git/torvalds/linux-2.6.git","	This is at least a partial credits-file of people that have\n	contributed to the Linux project.  It is sorted by name and\n	formatted to allow easy grepping and beautification by\n	scripts.  The fields are: name (N), email (E), web-address\n	(W), PGP key ID and fingerprint (P), description (D), and\n	snail-mail address (S).\n	Thanks,\n\n			Linus\n----------\n\nN: Matti Aarnio\nE: mea@nic.funet.fi\nD: Alpha systems hacking, IPv6 and other network related stuff\nD: One of assisting postmasters for vger.kernel.org's lists\nS: (ask for current address)\nS: Finland\n\nN: Dragos Acostachioaie\nE: dragos@iname.com\nW: http://www.arbornet.org/~dragos\nD: /proc/sysvipc\nS: C. Negri 6, bl. D3\nS: Iasi 6600\nS: Romania\n\nN: Monalisa Agrawal\nE: magrawal@nortelnetworks.com\nD: Basic Interphase 5575 driver with UBR and ABR support.\nS: 75 Donald St, Apt 42\nS: Weymouth, MA 02188\n\nN: Dave Airlie\nE: airlied@linux.ie\nW: http://www.csn.ul.ie/~airlied\nD: NFS over TCP patches\nD: in-kernel DRM Maintainer\nS: Longford, Ireland\nS: Sydney, Australia\n\nN: Tigran A. Aivazian\nE: tigran@veritas.com\nW: http://www.moses.uklinux.net/patches\nD: BFS filesystem\nD: Intel IA32 CPU microcode update support\nD: Various kernel patches\nS: United Kingdom\n\nN: Werner Almesberger\nE: werner@almesberger.net\nW: http://www.almesberger.net/\nD: dosfs, LILO, some fd features, ATM, various other hacks here and there\nS: Buenos Aires\nS: Argentina\n\nN: Tim Alpaerts\nE: tim_alpaerts@toyota-motor-europe.com\nD: 802.2 class II logical link control layer,\nD: the humble start of an opening towards the IBM SNA protocols\nS: Klaproosstraat 72 c 10\nS: B-2610 Wilrijk-Antwerpen\nS: Belgium\n\nN: Anton Altaparmakov\nE: aia21@cantab.net\nW: http://www-stu.christs.cam.ac.uk/~aia21/\nD: Author of new NTFS driver, various other kernel hacks.\nS: Christ's College\nS: Cambridge CB2 3BU\nS: United Kingdom\n\nN: C. Scott Ananian\nE: cananian@alumni.princeton.edu\nW: http://www.pdos.lcs.mit.edu/~cananian\nP: 1024/85AD9EED AD C0 49 08 91 67 DF D7  FA 04 1A EE 09 E8 44 B0\nD: Unix98 pty support.\nD: APM update to 1.2 spec.\nD: /devfs hacking.\nS: 7 Kiwi Loop\nS: Howell, NJ 07731\nS: USA\n\nN: Erik Andersen\nE: andersen@codepoet.org\nW: http://www.codepoet.org/\nP: 1024D/30D39057 1BC4 2742 E885 E4DE 9301  0C82 5F9B 643E 30D3 9057\nD: Maintainer of ide-cd and Uniform CD-ROM driver, \nD: ATAPI CD-Changer support, Major 2.1.x CD-ROM update.\nS: 352 North 525 East\nS: Springville, Utah 84663\nS: USA\n\nN: Michael Ang\nE: mang@subcarrier.org\nW: http://www.subcarrier.org/mang\nD: Linux/PA-RISC hacker\nS: 85 Frank St.\nS: Ottawa, Ontario\nS: Canada K2P 0X3\n\nN: H. Peter Anvin\nE: hpa@zytor.com\nW: http://www.zytor.com/~hpa/\nP: 2047/2A960705 BA 03 D3 2C 14 A8 A8 BD  1E DF FE 69 EE 35 BD 74\nD: Author of the SYSLINUX boot loader, maintainer of the linux.* news\nD: hierarchy and the Linux Device List; various kernel hacks\nS: 4390 Albany Drive #46\nS: San Jose, California 95129\nS: USA\n\nN: Andrea Arcangeli\nE: andrea@suse.de\nW: http://www.kernel.org/pub/linux/kernel/people/andrea/\nP: 1024D/68B9CB43 13D9 8355 295F 4823 7C49  C012 DFA1 686E 68B9 CB43\nP: 1024R/CB4660B9 CC A0 71 81 F4 A0 63 AC  C0 4B 81 1D 8C 15 C8 E5\nD: Parport hacker\nD: Implemented a workaround for some interrupt buggy printers\nD: Author of pscan that helps to fix lp/parport bugs\nD: Author of lil (Linux Interrupt Latency benchmark)\nD: Fixed the shm swap deallocation at swapoff time (try_to_unuse message)\nD: VM hacker\nD: Various other kernel hacks\nS: Via Cicalini 26\nS: Imola 40026\nS: Italy\n\nN: Derek Atkins\nE: warlord@MIT.EDU\nD: Linux-AFS Port, random kernel hacker,\nD: VFS fixes (new notify_change in particular)\nD: Moving all VFS access checks into the file systems\nS: MIT Room E15-341\nS: 20 Ames Street\nS: Cambridge, Massachusetts 02139\nS: USA\n\nN: Michel Aubry\nE: giovanni <giovanni@sudfr.com>\nD: Aladdin 1533/1543(C) chipset IDE\nD: VIA MVP-3/TX Pro III chipset IDE\n\nN: Jens Axboe\nE: axboe@suse.de\nD: Linux CD-ROM maintainer, DVD support\nD: elevator + block layer rewrites\nD: highmem I/O support\nD: misc hacking on IDE, SCSI, block drivers, etc\nS: Peter Bangs Vej 258, 2TH\nS: 2500 Valby\nS: Denmark\n\nN: John Aycock\nE: aycock@cpsc.ucalgary.ca\nD: Adaptec 274x driver\nS: Department of Computer Science\nS: University of Calgary\nS: Calgary, Alberta\nS: Canada\n\nN: Miles Bader\nE: miles@gnu.org\nD: v850 port (uClinux)\nS: NEC Corporation\nS: 1753 Shimonumabe, Nakahara-ku\nS: Kawasaki 211-8666\nS: Japan\n\nN: Ralf Baechle\nE: ralf@gnu.org\nP: 1024/AF7B30C1 CF 97 C2 CC 6D AE A7 FE  C8 BA 9C FC 88 DE 32 C3\nD: Linux/MIPS port\nD: Linux/68k hacker\nS: Hauptstrasse 19\nS: 79837 St. Blasien\nS: Germany\n\nN: Krishna Balasubramanian\nE: balasub@cis.ohio-state.edu\nD: Wrote SYS V IPC (part of standard kernel since 0.99.10)\n\nN: Dario Ballabio\nE: ballabio_dario@emc.com\nE: dario.ballabio@tiscalinet.it\nE: dario.ballabio@inwind.it\nD: Author and maintainer of the Ultrastor 14F/34F SCSI driver\nD: Author and maintainer of the EATA ISA/EISA/PCI SCSI driver\nS: EMC Corporation\nS: Milano\nS: Italy\n\nN: Paul Bame\nE: bame@debian.org\nE: bame@puffin.external.hp.com\nE: paul_bame@hp.com\nW: http://www.parisc-linux.org\nD: PA-RISC 32 and 64-bit early boot, firmware interface, interrupts, misc\nS: MS42\nS: Hewlett-Packard\nS: 3404 E Harmony Rd\nS: Fort Collins, CO 80525\n\nN: Arindam Banerji\nE: axb@cse.nd.edu\nD: Contributed ESDI driver routines needed to port LINUX to the PS/2 MCA.\nS: Department of Computer Science & Eng.\nS: University of Notre Dame\nS: Notre Dame, Indiana\nS: USA\n\nN: Greg Banks\nE: gnb@alphalink.com.au\nD: IDT77105 ATM network driver\nD: some SuperH port work\nD: some trivial futzing with kconfig\n\nN: James Banks\nE: james@sovereign.org\nD: TLAN network driver\nD: Logitech Busmouse driver\n\nN: Krzysztof G. Baranowski\nE: kgb@manjak.knm.org.pl\nP: 1024/FA6F16D1 96 D1 1A CF 5F CA 69 EC  F9 4F 36 1F 6D 60 7B DA\nD: Maintainer of the System V file system.\nD: System V fs update for 2.1.x dcache.\nD: Forward ported a couple of SCSI drivers.\nD: Various bugfixes.\nS: ul. Koscielna 12a\nS: 62-300 Wrzesnia\nS: Poland\n\nN: Fred Barnes\nE: frmb2@ukc.ac.uk\nD: Various parport/ppdev hacks and fixes\nS: Computing Lab, The University\nS: Canterbury, KENT\nS: CT2 7NF\nS: England\n\nN: Paul Barton-Davis\nE: pbd@op.net\nD: Driver for WaveFront soundcards (Turtle Beach Maui, Tropez, Tropez+)\nD: Various bugfixes and changes to sound drivers\nS: USA \n\nN: Carlos Henrique Bauer\nE: chbauer@acm.org\nE: bauer@atlas.unisinos.br\nD: Some new sysctl entries for the parport driver.\nD: New sysctl function for handling unsigned longs\nS: Universidade do Vale do Rio dos Sinos - UNISINOS\nS: DSI/IDASI\nS: Av. Unisinos, 950\nS: 93022000 Sao Leopoldo RS\nS: Brazil\n\nN: Peter Bauer\nE: 100136.3530@compuserve.com\nD: Driver for depca-ethernet-board\nS: 69259 Wilhemsfeld\nS: Rainweg 15\nS: Germany\n\nN: Fred Baumgarten\nE: dc6iq@insl1.etec.uni-karlsruhe.de\nE: dc6iq@adacom.org\nE: dc6iq@db0ais.#hes.deu.eu (packet radio)\nD: NET-2 & netstat(8)\nS: Soevener Strasse 11\nS: 53773 Hennef\nS: Germany\n\nN: Donald Becker\nE: becker@cesdis.gsfc.nasa.gov\nD: General low-level networking hacker\nD: Most of the ethercard drivers\nD: Original author of the NFS server\nS: USRA Center of Excellence in Space Data and Information Sciences\nS: Code 930.5, Goddard Space Flight Center\nS: Greenbelt, Maryland 20771\nS: USA\n\nN: Adam Belay\nE: ambx1@neo.rr.com\nD: Linux Plug and Play Support\nS: USA\n\nN: Daniele Bellucci\nE: bellucda@tiscali.it\nD: Various Janitor work.\nW: http://web.tiscali.it/bellucda\nS: Via Delle Palme, 9\nS: Terni 05100\nS: Italy\n\nN: Krzysztof Benedyczak\nE: golbi@mat.uni.torun.pl\nW: http://www.mat.uni.torun.pl/~golbi\nD: POSIX message queues fs (with M. Wronski)\nS: ul. Podmiejska 52\nS: Radunica\nS: 83-000 Pruszcz Gdanski\nS: Poland\n\nN: Randolph Bentson\nE: bentson@grieg.seaslug.org\nW: http://www.aa.net/~bentson/\nP: 1024/39ED5729 5C A8 7A F4 B2 7A D1 3E  B5 3B 81 CF 47 30 11 71\nD: Author of driver for Cyclom-Y and Cyclades-Z async mux\nS: 2322 37th Ave SW\nS: Seattle, Washington 98126-2010\nS: USA\n\nN: Stephen R. van den Berg (AKA BuGless)\nE: berg@pool.informatik.rwth-aachen.de\nD: General kernel, gcc, and libc hacker\nD: Specialisation: tweaking, ensuring portability, tweaking, cleaning,\nD: tweaking and occasionally debugging :-)\nS: Bouwensstraat 22\nS: 6369 BG Simpelveld\nS: The Netherlands\n\nN: Peter Berger\nE: pberger@brimson.com\nW: http://www.brimson.com\nD: Author/maintainer of Digi AccelePort USB driver\nS: 1549 Hiironen Rd.\nS: Brimson, MN  55602\nS: USA\n\nN: Hennus Bergman\nP: 1024/77D50909 76 99 FD 31 91 E1 96 1C  90 BB 22 80 62 F6 BD 63\nD: Author and maintainer of the QIC-02 tape driver\nS: The Netherlands\n\nN: Tomas Berndtsson\nE: tomas@nocrew.org\nW: http://tomas.nocrew.org/\nD: dsp56k device driver\n\nN: Ross Biro\nE: ross.biro@gmail.com\nD: Original author of the Linux networking code\n\nN: Anton Blanchard\nE: anton@samba.org\nW: http://samba.org/~anton/\nP: 1024/8462A731 4C 55 86 34 44 59 A7 99  2B 97 88 4A 88 9A 0D 97\nD: sun4 port, Sparc hacker\n\nN: Hugh Blemings\nE: hugh@misc.nu\nW: http://misc.nu/hugh/\nD: Author and maintainer of the Keyspan USB to Serial drivers\nS: Po Box 234\nS: Belconnen ACT 2616\nS: Australia\n\nN: Philip Blundell\nE: philb@gnu.org\nD: Linux/ARM hacker\nD: Device driver hacker (eexpress, 3c505, c-qcam, ...)\nD: m68k port to HP9000/300\nD: AUN network protocols\nD: Co-architect of the parallel port sharing system\nD: IPv6 netfilter\nS: FutureTV Labs Ltd\nS: Brunswick House, 61-69 Newmarket Rd, Cambridge CB5 8EG\nS: United Kingdom\n\nN: Thomas Bogend�rfer\nE: tsbogend@alpha.franken.de\nD: PCnet32 driver, SONIC driver, JAZZ_ESP driver\nD: newport abscon driver, g364 framebuffer driver\nD: strace for Linux/Alpha\nD: Linux/MIPS hacker\nS: Schafhofstr. 40\nS: 90556 Cadolzburg\nS: Germany\n\nN: Bill Bogstad\nE: bogstad@pobox.com\nD: wrote /proc/self hack, minor samba & dosemu patches\n\nN: Axel Boldt\nE: axel@uni-paderborn.de\nW: http://math-www.uni-paderborn.de/~axel/\nD: Configuration help text support\nD: Linux CD and Support Giveaway List\n\nN: Erik Inge Bols�\nE: knan@mo.himolde.no\nD: Misc kernel hacks\n\nN: Andreas E. Bombe\nE: andreas.bombe@munich.netsurf.de\nW: http://home.pages.de/~andreas.bombe/\nP: 1024/04880A44 72E5 7031 4414 2EB6 F6B4  4CBD 1181 7032 0488 0A44\nD: IEEE 1394 subsystem rewrite and maintainer\nD: Texas Instruments PCILynx IEEE 1394 driver\n\nN: Al Borchers\nE: alborchers@steinerpoint.com\nD: Author/maintainer of Digi AccelePort USB driver\nD: work on usbserial and keyspan_pda drivers\nS: 4912 Zenith Ave. S.\nS: Minneapolis, MN  55410\nS: USA\n\nN: Marc Boucher\nE: marc@mbsi.ca\nP: CA 67 A5 1A 38 CE B6 F2  D5 83 51 03 D2 9C 30 9E  CE D2 DD 65\nD: Netfilter core\nD: IP policy routing by mark\nD: Various fixes (mostly networking)\nS: Montreal, Quebec\nS: Canada\n\nN: Zolt�n B�sz�rm�nyi\nE: zboszor@mail.externet.hu\nD: MTRR emulation with Cyrix style ARR registers, Athlon MTRR support\n\nN: John Boyd\nE: boyd@cis.ohio-state.edu\nD: Co-author of wd7000 SCSI driver\nS: 101 Curl Drive #591\nS: Columbus, Ohio 43210\nS: USA\n\nN: Peter Braam\nE: braam@clusterfs.com\nW: http://www.clusterfs.com/\nD: Coda & InterMezzo filesystems\nS: 181 McNeil\nS: Canmore, AB\nS: Canada, T1W 2R9\n\nN: Ryan Bradetich\nE: rbradetich@uswest.net\nD: Linux/PA-RISC hacker\nS: 1200 Goldenrod Dr.\nS: Nampa, Idaho 83686\n\nN: Derrick J. Brashear\nE: shadow@dementia.org\nW: http://www.dementia.org/~shadow\nP: 512/71EC9367 C5 29 0F BC 83 51 B9 F0  BC 05 89 A0 4F 1F 30 05\nD: Author of Sparc CS4231 audio driver, random Sparc work\nS: 403 Gilmore Avenue\nS: Trafford, Pennsylvania 15085\nS: USA\n\nN: Dag Brattli\nE: dagb@cs.uit.no\nW: http://www.cs.uit.no/~dagb\nD: IrDA Subsystem\nS: 19. Wellington Road\nS: Lancaster, LA1 4DN\nS: UK, England\n\nN: Lars Brinkhoff\nE: lars@nocrew.org\nW: http://lars.nocrew.org/\nD: dsp56k device driver\nD: ptrace proxy in user mode kernel port\nS: Kopmansg 2\nS: 411 13  Goteborg\nS: Sweden\n\nN: Dominik Brodowski\nE: linux@brodo.de\nW: http://www.brodo.de/\nP: 1024D/725B37C6  190F 3E77 9C89 3B6D BECD  46EE 67C3 0308 725B 37C6\nD: parts of CPUFreq code, ACPI bugfixes\nS: Tuebingen, Germany\n\nN: Andries Brouwer\nE: aeb@cwi.nl\nD: random Linux hacker\nS: Bessemerstraat 21\nS: Amsterdam\nS: The Netherlands\n\nN: Zach Brown\nE: zab@zabbo.net\nD: maestro pci sound\n\nN: Gary Brubaker\nE: xavyer@ix.netcom.com\nD: USB Serial Empeg Empeg-car Mark I/II Driver\n\nN: Matthias Bruestle\nE: m@mbsks.franken.de\nD: REINER SCT cyberJack pinpad/e-com USB chipcard reader driver\nS: Germany\n\nN: Adrian Bunk\nE: bunk@stusta.de\nP: 1024D/4F12B400  B29C E71E FE19 6755 5C8A  84D4 99FC EA98 4F12 B400\nD: misc kernel hacking and testing\nS: Grasmeierstrasse 11\nS: 80805 Muenchen\nS: Germany\n\nN: Ray Burr\nE: ryb@nightmare.com\nD: Original author of Amiga FFS filesystem\nS: Orlando, Florida\nS: USA\n\nN: Lennert Buytenhek\nE: buytenh@gnu.org\nD: Rewrite of the ethernet bridging code\nS: Ravenhorst 58B\nS: 2317 AK Leiden\nS: The Netherlands\n\nN: Michael Callahan\nE: callahan@maths.ox.ac.uk\nD: PPP for Linux\nS: The Mathematical Institute\nS: 25-29 St Giles\nS: Oxford\nS: United Kingdom\n\nN: Luiz Fernando N. Capitulino\nE: lcapitulino@terra.com.br\nE: lcapitulino@prefeitura.sp.gov.br\nW: http://www.telecentros.sp.gov.br\nD: Little fixes and a lot of janitorial work\nS: E-GOV Telecentros SP\nS: Brazil\n\nN: Remy Card\nE: Remy.Card@masi.ibp.fr\nE: Remy.Card@linux.org\nD: Extended file system [defunct] designer and developer\nD: Second extended file system designer and developer\nS: Institut Blaise Pascal\nS: 4 Place Jussieu\nS: 75252 Paris Cedex 05\nS: France\n\nN: Ulf Carlsson\nD: SGI Indy audio (HAL2) drivers\nE: ulfc@bun.falkenberg.se\n\nN: Ed Carp\nE: ecarp@netcom.com\nD: uucp, elm, pine, pico port\nD: cron, at(1) developer\nS: 48287 Sawleaf\nS: Fremont, California 94539\nS: USA\n\nN: Florent Chabaud\nE: florent.chabaud@polytechnique.org\nD: software suspend\nS: SGDN/DCSSI/SDS/LTI\nS: 58, Bd Latour-Maubourg\nS: 75700 Paris 07 SP\nS: France\n\nN: Gordon Chaffee\nE: chaffee@cs.berkeley.edu\nW: http://bmrc.berkeley.edu/people/chaffee/\nD: vfat, fat32, joliet, native language support\nS: 3700 Warwick Road\nS: Fremont, California 94555\nS: USA\n\nN: Chih-Jen Chang\nE: chihjenc@scf.usc.edu\nE: chihjen@iis.sinica.edu.tw\nD: IGMP(Internet Group Management Protocol) version 2\nS: 3F, 65 Tajen street\nS: Tamsui town, Taipei county,\nS: Taiwan 251\nS: Republic of China\n\nN: Michael Elizabeth Chastain\nE: mec@shout.net\nD: Configure, Menuconfig, xconfig\n\nN: Raymond Chen\nE: raymondc@microsoft.com\nD: Author of Configure script\nS: 14509 NE 39th Street #1096\nS: Bellevue, Washington 98007\nS: USA\n\nN: Christopher L. Cheney\nE: ccheney@debian.org\nE: ccheney@cheney.cx\nW: http://www.cheney.cx\nP: 1024D/8E384AF2 2D31 1927 87D7 1F24 9FF9  1BC5 D106 5AB3 8E38 4AF2\nD: Vista Imaging usb webcam driver\nS: 314 Prince of Wales\nS: Conroe, TX 77304\nS: USA\n\nN: Stuart Cheshire\nE: cheshire@cs.stanford.edu\nD: Author of Starmode Radio IP (STRIP) driver\nD: Originator of design for new combined interrupt handlers\nS: William Gates Department\nS: Stanford University\nS: Stanford, California 94305\nS: USA\n\nN: Randolph Chung\nE: tausq@debian.org\nD: Linux/PA-RISC hacker\nS: Los Altos, CA 94022\nS: USA\n\nN: Juan Jose Ciarlante\nW: http://juanjox.kernelnotes.org/\nE: jjciarla@raiz.uncu.edu.ar\nE: jjo@mendoza.gov.ar\nD: Network driver alias support\nD: IP masq hashing and app modules\nD: IP masq 2.1 features and bugs\nS: Las Cuevas 2385 - Bo Guemes\nS: Las Heras, Mendoza CP 5539\nS: Argentina\n\nN: Steven P. Cole\nE: scole@lanl.gov\nE: elenstev@mesatop.com\nD: Various build fixes and kernel documentation.\nS: Los Alamos, New Mexico\n\nN: Hamish Coleman\nE: hamish@zot.apana.org.au\nD: SEEQ8005 network driver\nS: 98 Paxton Street\nS: East Malvern, Victoria, 3145\nS: Australia\n\nN: Neil Conway\nE: nconway.list@ukaea.org.uk\nD: Assorted sched/mm titbits\nS: Oxfordshire, UK.\n\nN: Kees Cook\nE: kees@outflux.net\nW: http://outflux.net/\nP: 1024D/17063E6D 9FA3 C49C 23C9 D1BC 2E30  1975 1FFF 4BA9 1706 3E6D\nD: Minor updates to SCSI code for the Communications type\nS: (ask for current address)\nS: USA\n\nN: Mark Corner\nE: mcorner@umich.edu\nW: http://www.eecs.umich.edu/~mcorner/\nD: USB Bluetooth Driver\nS: University of Michigan\nS: Ann Arbor, MI\n\nN: Michael Cornwell\nE: cornwell@acm.org\nD: Original designer and co-author of ATA Taskfile\nD: Kernel module SMART utilities\nS: Santa Cruz, California\nS: USA\n\nN: Alan Cox\nW: http://www.linux.org.uk/diary/\nD: Linux Networking (0.99.10->2.0.29)\nD: Original Appletalk, AX.25, and IPX code\nD: 3c501 hacker\nD: Watchdog timer drivers\nD: Linux/SMP x86 (up to 2.0 only)\nD: Initial Mac68K port\nD: Video4Linux design, bw-qcam and PMS driver ports.\nD: IDE modularisation work\nD: Z85230 driver\nD: Former security contact point (please use vendor-sec@lst.de)\nD: ex 2.2 maintainer\nD: 2.1.x modular sound\nS: c/o Red Hat UK Ltd\nS: Alexandra House\nS: Alexandra Terrace\nS: Guildford, GU1 3DA\nS: United Kingdom\n\nN: Cristian Mihail Craciunescu\nW: http://www.dnt.ro/~cristi/\nE: cristi@dnt.ro\nD: Support for Xircom PGSDB9 (firmware and host driver)\nS: Bucharest\nS: Romania\n\nN: Laurence Culhane\nE: loz@holmes.demon.co.uk\nD: Wrote the initial alpha SLIP code\nS: 81 Hood Street\nS: Northampton\nS: NN1 3QT\nS: United Kingdom\n\nN: Uwe Dannowski\nE: Uwe.Dannowski@ira.uka.de\nW: http://i30www.ira.uka.de/~dannowsk/\nD: FORE PCA-200E driver\nS: University of Karlsruhe\nS: Germany\n\nN: Ray Dassen\nE: jdassen@wi.LeidenUniv.nl\nW: http://www.wi.leidenuniv.nl/~jdassen/\nP: 1024/672D05C1 DD 60 32 60 F7 90 64 80  E7 6F D4 E4 F8 C9 4A 58\nD: Debian GNU/Linux: www.debian.org maintainer, FAQ co-maintainer,\nD: packages testing, nit-picking & fixing. Enjoying BugFree (TM) kernels.\nS: Zuidsingel 10A\nS: 2312 SB  Leiden\nS: The Netherlands\n\nN: David Davies\nE: davies@wanton.lkg.dec.com\nD: Network driver author - depca, ewrk3 and de4x5\nD: Wrote shared interrupt support\nS: Digital Equipment Corporation\nS: 550 King Street\nS: Littleton, Massachusetts 01460\nS: USA\n\nN: Frank Davis\nE: fdavis@si.rr.com\nE: fdavis112@juno.com\nD: Various kernel patches\nS: 8 Lakeview Terr.\nS: Kerhonkson, NY 12446\nS: USA\n\nN: Wayne Davison\nE: davison@borland.com\nD: Second extended file system co-designer\n\nN: Terry Dawson\nE: terry@perf.no.itg.telecom.com.au\nE: terry@albert.vk2ktj.ampr.org (Amateur Radio use only)\nD: trivial hack to add variable address length routing to Rose.\nD: AX25-HOWTO, HAM-HOWTO, IPX-HOWTO, NET-2-HOWTO\nD: ax25-utils maintainer.\n\nN: Helge Deller\nE: deller@gmx.de\nE: hdeller@redhat.de\nD: PA-RISC Linux hacker, LASI-, ASP-, WAX-, LCD/LED-driver\nS: Schimmelsrain 1\nS: D-69231 Rauenberg\nS: Germany\n\nN: Jean Delvare\nE: khali@linux-fr.org\nW: http://khali.linux-fr.org/\nD: Several hardware monitoring drivers\nS: France\n\nN: Peter Denison\nE: peterd@pnd-pc.demon.co.uk\nW: http://www.pnd-pc.demon.co.uk/promise/\nD: Promise DC4030VL caching HD controller drivers\n\nN: Todd J. Derr\nE: tjd@fore.com\nW: http://www.wordsmith.org/~tjd\nD: Random console hacks and other miscellaneous stuff\nS: 3000 FORE Drive\nS: Warrendale, Pennsylvania 15086\nS: USA\n\nN: Martin Devera\nE: devik@cdi.cz\nW: http://luxik.cdi.cz/~devik/qos/\nD: HTB qdisc and random networking hacks\n\nN: Alex deVries\nE: alex@onefishtwo.ca\nD: Various SGI parts, bits of HAL2 and Newport, PA-RISC Linux.\nS: 41.5 William Street\nS: Ottawa, Ontario\nS: K1N 6Z9\nS: CANADA\n\nN: Jeff Dike\nE: jdike@karaya.com\nW: http://user-mode-linux.sourceforge.net\nD: User mode kernel port\nS: 375 Tubbs Hill Rd\nS: Deering NH 03244\nS: USA\n\nN: Matt Domsch\nE: Matt_Domsch@dell.com\nW: http://www.dell.com/linux\nW: http://domsch.com/linux\nD: Linux/IA-64\nD: Dell PowerEdge server, SCSI layer, misc drivers, and other patches\nS: Dell Inc.\nS: One Dell Way\nS: Round Rock, TX  78682\nS: USA\n\nN: Ben Dooks\nE: ben-linux@fluff.org\nE: ben@simtec.co.uk\nW: http://www.fluff.org/ben/\nW: http://www.simtec.co.uk/\nD: Samsung S3C2410/S3C2440 support, general ARM support\nD: Maintaining Simtec Electronics development boards\nS: Simtec Electronics\nS: Avondale Drive\nS: Tarleton\nS: Preston\nS: Lancs\nS: PR4 6AX\nS: United Kingdom\n\nN: John G Dorsey\nE: john+@cs.cmu.edu\nD: ARM Linux ports to Assabet/Neponset, Spot\nS: Department of Electrical and Computer Engineering\nS: Carnegie Mellon University\nS: Pittsburgh, PA  15213\nS: USA\n\nN: Eddie C. Dost\nE: ecd@skynet.be\nD: Linux/Sparc kernel hacker\nD: Linux/Sparc maintainer\nS: Rue de la Chapelle 51\nS: 4850 Moresnet\nS: Belgium\n\nN: Cort Dougan\nE: cort@fsmlabs.com\nW: http://www.fsmlabs.com/linuxppcbk.html\nD: PowerPC\n\nN: Daniel Drake\nE: dsd@gentoo.org\nD: USBAT02 CompactFlash support in usb-storage\nS: UK\n\nN: Oleg Drokin\nE: green@ccssu.crimea.ua\nW: http://www.ccssu.crimea.ua/~green\nD: Cleaning up sound drivers, SA1100 Watchdog.\nS: Skvoznoy per., 14a\nS: Evpatoria\nS: Crimea\nS: UKRAINE, 334320\n\nN: Walt Drummond\nE: drummond@valinux.com\nD: Linux/IA-64\nS: 1382 Bordeaux Drive\nS: Sunnyvale, CA 94087\nS: USA\n\nN: Bruno Ducrot\nE: ducrot@poupinou.org\nD: CPUFreq and ACPI bugfixes.\nS: Mougin, France\n\nN: Don Dugger\nE: n0ano@valinux.com\nD: Linux/IA-64\nS: 1209 Pearl Street, #12\nS: Boulder, CO 80302\nS: USA\n\nN: Thomas Dunbar\nE: tdunbar@vt.edu\nD: TeX & METAFONT hacking/maintenance\nS: Virginia Tech Computing Center\nS: 1700 Pratt Drive\nS: Blacksburg, Virginia 24061\nS: USA\n\nN: Randy Dunlap\nE: rdunlap@xenotime.net\nW: http://www.xenotime.net/linux/linux.html\nW: http://www.linux-usb.org\nD: Linux-USB subsystem, USB core/UHCI/printer/storage drivers\nD: x86 SMP, ACPI, bootflag hacking\nS: (ask for current address)\nS: USA\n\nN: Bob Dunlop\nE: rjd@xyzzy.clara.co.uk\nE: bob.dunlop@farsite.co.uk\nW: www.farsite.co.uk\nD: FarSync card device driver\nS: FarSite Communications Ltd\nS: Tempus Business Centre\nS: 60 Kingsclere Road\nS: Basingstoke       RG21 6XG\nS: UK\n\nN: Cyrus Durgin\nE: cider@speakeasy.org\nW: http://www.speakeasy.org/~cider/\nD: implemented kmod\n\nN: Torsten Duwe\nE: Torsten.Duwe@informatik.uni-erlangen.de\nD: Part-time kernel hacker\nD: The Linux Support Team Erlangen\nS: Grevenbroicher Str. 17\nS: 47807 Krefeld\nS: Germany\n\nN: Tom Dyas\nE: tdyas@eden.rutgers.edu\nD: minor hacks and some sparc port stuff\nS: New Jersey\nS: USA\n\nN: Drew Eckhardt\nE: drew@PoohSticks.ORG\nD: SCSI code\nD: Assorted snippets elsewhere\nD: Boot sector "..." printing\nS: 2037 Walnut #6\nS: Boulder, Colorado 80302\nS: USA\n\nN: Heiko Eissfeldt\nE: heiko@colossus.escape.de heiko@unifix.de\nD: verify_area stuff, generic SCSI fixes\nD: SCSI Programming HOWTO\nD: POSIX.1 compliance testing\nS: Unifix Software GmbH\nS: Bueltenweg 27a\nS: D-38106 Braunschweig\nS: Germany\n\nN: Bjorn Ekwall\nE: bj0rn@blox.se\nW: http://www.pi.se/blox/\nD: Extended support for loadable modules\nD: D-Link pocket adapter drivers\nS: Brevia 1043\nS: S-114 79 Stockholm\nS: Sweden\n\nN: David Engebretsen\nE: engebret@us.ibm.com\nD: Linux port to 64-bit PowerPC architecture\n\nN: Michael Engel\nE: engel@unix-ag.org\nD: DECstation framebuffer drivers\nS: Germany\n\nN: Paal-Kristian Engstad\nE: engstad@intermetrics.com\nD: Kernel smbfs (to mount WfW, NT and OS/2 network drives.)\nS: 17101 Springdale Street #225\nS: Huntington Beach, California 92649\nS: USA\n\nN: Stephane Eranian\nE: eranian@hpl.hp.com\nD: Linux/ia64\nS: 1501 Page Mill Rd, MS 1U17\nS: Palo Alto, CA 94304\nS: USA\n\nN: Johannes Erdfelt\nE: johannes@erdfelt.com\nD: Linux/IA-64 bootloader and kernel goop, USB\nS: 6350 Stoneridge Mall Road\nS: Pleasanton, CA 94588\nS: USA\n\nN: Doug Evans\nE: dje@cygnus.com\nD: Wrote Xenix FS (part of standard kernel since 0.99.15)\n\nN: Riccardo Facchetti\nE: fizban@tin.it\nP: 1024/6E657BB5 AF 22 90 33 78 76 04 8B  AF F9 97 1E B5 E2 65 30\nD: Audio Excel DSP 16 init driver author\nD: libmodem author\nD: Yet Another Micro Monitor port and current maintainer\nD: First ELF-HOWTO author\nD: random kernel hacker\nS: Via Paolo VI n.29\nS: 23900 - LECCO (Lc)\nS: Italy\n\nN: Nils Faerber\nE: nils@kernelconcepts.de\nD: i810 TCO watchdog driver author\nD: Mitsumi LU005 tests and fixes\nD: port and fixes of cs46xx sounddriver\nS: Dreisbachstrasse 24\nS: D-57250 Netphen\nS: Germany\n\nN: Rik Faith\nE: faith@acm.org\nD: Future Domain TMC-16x0 SCSI driver (author)\nD: APM driver (early port)\nD: DRM drivers (author of several)\n\nN: J�nos Farkas\nE: chexum@shadow.banki.hu\nD: romfs, various (mostly networking) fixes\nP: 1024/F81FB2E1 41 B7 E4 E6 3E D4 A6 71  6D 9C F3 9F F2 BF DF 6E\nS: Madar�sz Viktor utca 25\nS: 1131 Budapest\nS: Hungary\n\nN: Ben Fennema\nE: bfennema@falcon.csc.calpoly.edu\nW: http://www.csc.calpoly.edu/~bfennema\nD: UDF filesystem\nS: (ask for current address)\nS: USA\n\nN: J�rgen Fischer\nE: fischer@norbit.de (=?iso-8859-1?q?J=FCrgen?= Fischer)\nD: Author of Adaptec AHA-152x SCSI driver\nS: Schulstra�e 18\nS: 26506 Norden\nS: Germany\n\nN: Jeremy Fitzhardinge\nE: jeremy@goop.org\nW: http://www.goop.org/~jeremy\nD: author of userfs filesystem\nD: Improved mmap and munmap handling\nD: General mm minor tidyups\nD: autofs v4 maintainer\nS: 987 Alabama St\nS: San Francisco\nS: CA, 94110\nS: USA\n\nN: Ralf Flaxa\nE: rfflaxa@immd4.informatik.uni-erlangen.de\nD: The Linux Support Team Erlangen\nD: Creator of LST distribution\nD: Author of installation tool LISA\nS: Pfitznerweg 6\nS: 74523 Schwaebisch Hall\nS: Germany\n\nN: Lawrence Foard\nE: entropy@world.std.com\nD: Floppy track reading, fs code\nS: 217 Park Avenue, Suite 108\nS: Worcester, Massachusetts 01609\nS: USA\n\nN: Karl Fogel\nE: kfogel@cs.oberlin.edu\nD: Contributor, Linux User's Guide\nS: 1123 North Oak Park Avenue\nS: Oak Park, Illinois 60302\nS: USA\n\nN: Daniel J. Frasnelli\nE: dfrasnel@alphalinux.org\nW: http://www.alphalinux.org/\nP: 1024/3EF87611 B9 F1 44 50 D3 E8 C2 80  DA E5 55 AA 56 7C 42 DA\nD: DEC Alpha hacker \nD: Miscellaneous bug squisher\n\nN: Jim Freeman\nE: jfree@sovereign.org\nW: http://www.sovereign.org/\nD: Initial GPL'd Frame Relay driver\nD: Dynamic PPP devices\nD: Sundry modularizations (PPP, IPX, ...) and fixes\n\nN: Bob Frey\nE: bobf@advansys.com\nD: AdvanSys SCSI driver\nS: 1150 Ringwood Court\nS: San Jose, California 95131\nS: USA\n\nN: Fernando Fuganti\nE: fuganti@conectiva.com.br\nE: fuganti@netbank.com.br\nD: random kernel hacker, ZF MachZ Watchdog driver\nS: Conectiva S.A.\nS: R. Tocantins, 89 - Cristo Rei\nS: 80050-430 - Curitiba - Paran�\nS: Brazil\n\nN: Kumar Gala\nE: kumar.gala@freescale.com\nD: Embedded PowerPC 6xx/7xx/74xx/82xx/83xx/85xx support\nS: Austin, Texas 78729\nS: USA\n\nN: Nigel Gamble\nE: nigel@nrg.org\nD: Interrupt-driven printer driver\nD: Preemptible kernel\nS: 120 Alley Way\nS: Mountain View, California 94040\nS: USA\n\nN: Jeff Garzik\nE: jgarzik@pobox.com\n\nN: Jacques Gelinas\nE: jacques@solucorp.qc.ca\nD: Author of the Umsdos file system\nS: 1326 De Val-Brillant\nS: Laval, Quebec\nS: Canada H7Y 1V9\n\nN: David Gentzel\nE: gentzel@telerama.lm.com\nD: Original BusLogic driver and original UltraStor driver\nS: Whitfield Software Services\nS: 600 North Bell Avenue, Suite 160\nS: Carnegie, Pennsylvania 15106-4304\nS: USA\n\nN: Philip Gladstone\nE: philip@raptor.com\nD: Kernel / timekeeping stuff\n  \nN: Jan-Benedict Glaw\nE: jbglaw@lug-owl.de\nD: SRM environment driver (for Alpha systems)\nP: 1024D/8399E1BB 250D 3BCF 7127 0D8C A444  A961 1DBD 5E75 8399 E1BB\n\nN: Thomas Gleixner\nE: tglx@linutronix.de\nD: NAND flash hardware support, JFFS2 on NAND flash\n\nN: Richard E. Gooch\nE: rgooch@atnf.csiro.au\nD: parent process death signal to children\nD: prctl() syscall\nD: /proc/mtrr support to manipulate MTRRs on Intel P6 family\nD: Device FileSystem (devfs)\nS: CSIRO Australia Telescope National Facility\nS: P.O. Box 76, Epping\nS: New South Wales, 2121\nS: Australia\n\nN: Carlos E. Gorges \nE: carlos@techlinux.com.br\nD: fix smp support on cmpci driver\nP: 2048G/EA3C4B19 FF31 33A6 0362 4915 B7EB  E541 17D0 0379 EA3C 4B19\nS: Brazil\n\nN: Dmitry S. Gorodchanin\nE: pgmdsg@ibi.com\nD: RISCom/8 driver, misc kernel fixes.\nS: 4 Main Street\nS: Woodbridge, Connecticut 06525\nS: USA\n\nN: Paul Gortmaker\nE: p_gortmaker@yahoo.com\nD: Author of RTC driver & several net drivers, Ethernet & BootPrompt Howto.\nD: Made support for modules, ramdisk, generic-serial, etc. optional.\nD: Transformed old user space bdflush into 1st kernel thread - kflushd.\nD: Many other patches, documentation files, mini kernels, utilities, ...\n\nN: Masanori GOTO\nE: gotom@debian.or.jp\nD: Workbit NinjaSCSI-32Bi/UDE driver\nS: Japan\n\nN: John E. Gotts\nE: jgotts@linuxsavvy.com\nD: kernel hacker\nS: 8124 Constitution Apt. 7\nS: Sterling Heights, Michigan 48313\nS: USA\n\nN: William Greathouse\nE: wgreathouse@smva.com\nE: wgreathouse@myfavoritei.com\nD: Current Belkin USB Serial Adapter F5U103 hacker\nD: Kernel hacker, embedded systems\nS: 7802 Fitzwater Road   \nS: Brecksville, OH  44141-1334\nS: USA\n\nN: Tristan Greaves\nE: Tristan.Greaves@icl.com\nE: tmg296@ecs.soton.ac.uk\nW: http://www.ecs.soton.ac.uk/~tmg296\nD: Miscellaneous ipv4 sysctl patches\nS: 15 Little Mead\nS: Denmead\nS: Hampshire\nS: PO7 6HS\nS: United Kingdom\n\nN: Michael A. Griffith\nE: grif@cs.ucr.edu\nW: http://www.cs.ucr.edu/~grif\nD: Loopback speedup, qlogic SCSI hacking, VT_LOCKSWITCH\nS: Department of Computer Science\nS: University of California, Riverside\nS: Riverside, California 92521-0304\nS: USA\n\nN: Hans Grobler\nE: grobh@sun.ac.za\nD: Various AX.25/ROSE/NETROM + hamradio driver patches\nD: Various X.25/LABP + driver patches\nD: Misc kernel fixes and updates\nS: Department of Electronic Engineering\nS: University of Stellenbosch\nS: Stellenbosch, Western Cape\nS: South Africa\n\nN: Grant Grundler\nE: grundler@parisc-linux.org\nW: http://obmouse.sourceforge.net/\nW: http://www.parisc-linux.org/\nD: obmouse - rewrote Olivier Florent's Omnibook 600 "pop-up" mouse driver\nD: PA-RISC - Interrupt/PCI HBA/IOMMU author and architect\nS: Mountain View, California\nS: USA\n\nN: Grant Guenther\nE: grant@torque.net\nW: http://www.torque.net/linux-pp.html\nD: original author of ppa driver for parallel port ZIP drive\nD: original architect of the parallel-port sharing scheme \nD: PARIDE subsystem: drivers for parallel port IDE & ATAPI devices\nS: 44 St. Joseph Street, Suite 506\nS: Toronto, Ontario, M4Y 2W4\nS: Canada\n\nN: Richard G�nther\nE: rguenth@tat.physik.uni-tuebingen.de\nW: http://www.tat.physik.uni-tuebingen.de/~rguenth\nP: 2048/2E829319 2F 83 FC 93 E9 E4 19 E2  93 7A 32 42 45 37 23 57\nD: binfmt_misc\nS: 72074 T�bingen\nS: Germany\n\nN: Justin Guyett\nE: jguyett@andrew.cmu.edu\nD: via-rhine net driver hacking\n\nN: Danny ter Haar\nE: dth@cistron.nl\nD: /proc/cpuinfo, reboot on panic , kernel pre-patch tester ;)\nS: Cistron\nS: PO-Box 297\nS: 2400 AG, Alphen aan den Rijn\nS: The Netherlands\n\nN: Enver Haase\nE: ehaase@inf.fu-berlin.de\nW: http://www.inf.fu-berlin.de/~ehaase\nD: Driver for the Commodore A2232 serial board\n\nN: Bruno Haible\nE: haible@ma2s2.mathematik.uni-karlsruhe.de\nD: SysV FS, shm swapping, memory management fixes\nS: 17 rue Danton\nS: F - 94270 Le Kremlin-Bic�tre\nS: France\n\nN: Greg Hankins\nE: gregh@cc.gatech.edu\nD: fixed keyboard driver to separate LED and locking status\nS: 25360 Georgia Tech Station\nS: Atlanta, Georgia 30332\nS: USA\n\nN: Brad Hards\nE: bradh@frogmouth.net\nD: Various USB bits, other minor patches\n\nN: Angelo Haritsis\nE: ah@computer.org\nD: kernel patches (serial, watchdog)\nD: xringd, vuzkern, greekXfonts\nS: 77 Clarence Mews\nS: London SE16 1GD\nS: United Kingdom\n\nN: Jan Harkes\nE: jaharkes@cs.cmu.edu\nW: http://www.coda.cs.cmu.edu/\nD: Coda file system\nS: Computer Science Department\nS: Carnegie Mellon University\nS: 5000 Forbes Avenue\nS: Pittsburgh, Pennsylvania 15213\nS: USA\n\nN: Kai Harrekilde-Petersen\nE: kai.harrekilde@get2net.dk\nD: Original author of the ftape-HOWTO, i82078 fdc detection code.\n\nN: Bart Hartgers\nE: bart@etpmod.phys.tue.nl\nD: MTRR emulation with Centaur MCRs\nS: Gen Stedmanstraat 212\nS: 5623 HZ Eindhoven\nS: The Netherlands\n\nN: Andrew Haylett\nE: ajh@primag.co.uk\nD: Selection mechanism\n\nN: Andre Hedrick\nE: andre@linux-ide.org\nE: andre@linuxdiskcert.org\nW: http://www.linux-ide.org/\nW: http://www.linuxdiskcert.org/\nD: Random SMP kernel hacker...\nD: Uniform Multi-Platform E-IDE driver\nD: Active-ATA-Chipset maddness..........\nD: Ultra DMA 133/100/66/33 w/48-bit Addressing\nD: ATA-Disconnect, ATA-TCQ\nD: ATA-Smart Kernel Daemon\nD: Serial ATA\nD: ATA Command Block and Taskfile\nS: Linux ATA Development (LAD)\nS: Concord, CA\n\nN: Jochen Hein\nE: jochen@jochen.org\nP: 1024/4A27F015 25 72 FB E3 85 9F DE 3B  CB 0A DA DA 40 77 05 6C\nP: 1024D/77D4FC9B F5C5 1C20 1DFC DEC3 3107  54A4 2332 ADFC 77D4 FC9B\nD: National Language Support\nD: Linux Internationalization Project\nD: German Localization for Linux and GNU software\nS: Kriemhildring 12a\nS: 65795 Hattersheim am Main\nS: Germany\n\nN: Christoph Hellwig\nE: hch@infradead.org\nD: all kinds of driver, filesystem & core kernel hacking\nD: freevxfs driver\nD: sysvfs maintainer\nD: chief codingstyle nitpicker\nS: Ampferstr. 50 / 4\nS: 6020 Innsbruck\nS: Austria\n\nN: Richard Henderson\nE: rth@twiddle.net\nE: rth@cygnus.com\nD: Alpha hacker, kernel and userland\nS: 1668 California St.\nS: Mountain View, California 94041\nS: USA\n\nN: Benjamin Herrenschmidt\nE: benh@kernel.crashing.org\nD: Various parts of PPC/PPC64 & PowerMac\nS: 312/107 Canberra Avenue\nS: Griffith, ACT 2603 \nS: Australia\n\nN: Sebastian Hetze\nE: she@lunetix.de\nD: German Linux Documentation,\nD: Organization of German Linux Conferences\nS: Danckelmannstr. 48\nS: 14059 Berlin\nS: Germany\n\nN: David Hinds\nE: dahinds@users.sourceforge.net\nW: http://tao.stanford.edu/~dhinds\nD: PCMCIA and CardBus stuff, PCMCIA-HOWTO, PCMCIA client drivers\nS: 2019 W. Middlefield Rd #1\nS: Mountain View, CA  94043\nS: USA\n\nN: Michael Hipp\nE: hippm@informatik.uni-tuebingen.de\nD: drivers for the racal ni5210 & ni6510 Ethernet-boards\nS: Talstr. 1\nS: D - 72072 Tuebingen\nS: Germany\n\nN: Richard Hirst\nE: richard@sleepie.demon.co.uk\nE: rhirst@linuxcare.com\nW: http://www.sleepie.demon.co.uk/\nD: linux-m68k VME support\nD: PA-RISC port, scsi and network drivers\nD: 53c700/53c710 driver author, 82596 driver maintainer\nS: United Kingdom\n\nN: Jauder Ho\nE: jauderho@carumba.com\nW: http://www.carumba.com/\nD: bug toaster (A1 sauce makes all the difference)\nD: Random linux hacker\n\nN: Tim Hockin\nE: thockin@hockin.org\nW: http://www.hockin.org/~thockin\nD: Natsemi ethernet\nD: Cobalt Networks (x86) support\nD: This-and-That\n\nN: Dirk Hohndel\nE: hohndel@suse.de\nD: The XFree86[tm] Project\nD: USB mouse maintainer\nS: SuSE Rhein/Main AG\nS: Mergenthalerallee 45-47\nS: 65760 Eschborn\nS: Germany\n\nN: Kenji Hollis\nE: kenji@bitgate.com\nW: http://www.bitgate.com/\nD: Berkshire PC Watchdog Driver\nD: Small/Industrial Driver Project\n\nN: Nick Holloway\nE: Nick.Holloway@pyrites.org.uk\nW: http://www.pyrites.org.uk/\nP: 1024/36115A04 F4E1 3384 FCFD C055 15D6  BA4C AB03 FBF8 3611 5A04\nD: Occasional Linux hacker...\nS: (ask for current address)\nS: United Kingdom\n\nN: Ron Holt\nE: ron@holt.org\nE: rholt@netcom.com\nW: http://www.holt.org/\nW: http://www.ronholt.com/\nD: Kernel development\nD: Kernel LDT modifications to support Wabi and Wine\nS: Holtron Internetics, Inc.\nS: 998 East 900 South, Suite 26\nS: Provo, Utah 84606-5607\nS: USA\n\nN: Marcel Holtmann\nE: marcel@holtmann.org\nW: http://www.holtmann.org\nD: Maintainer of the Linux Bluetooth Subsystem\nD: Author and maintainer of the various Bluetooth HCI drivers\nD: Author and maintainer of the CAPI message transport protocol driver\nD: Author and maintainer of the Bluetooth HID protocol driver\nD: Various other Bluetooth related patches, cleanups and fixes\nS: Germany\n\nN: Rob W. W. Hooft\nE: hooft@EMBL-Heidelberg.DE\nD: Shared libs for graphics-tools and for the f2c compiler\nD: Some kernel programming on the floppy and sound drivers in early days\nD: Some other hacks to get different kinds of programs to work for linux\nS: Panoramastrasse 18\nS: D-69126 Heidelberg\nS: Germany\n\nN: Christopher Horn\nE: chorn@warwick.net\nD: Miscellaneous sysctl hacks\nS: 36 Mudtown Road\nS: Wantage, New Jersey 07461\nS: USA\n\nN: Harald Hoyer\nE: harald.hoyer@parzelle.de\nW: http://parzelle.de/\nD: ip_masq_quake\nD: md boot support\nS: Hohe Strasse 30\nS: D-70176 Stuttgart\nS: Germany\n\nN: Jan Hubicka\nE: hubicka@freesoft.cz\nE: hubicka@suse.cz\nW: http://www.paru.cas.cz/~hubicka/\nD: Random kernel tweaks and fixes.\nS: Dukelskych bojovniku 1944\nS: Tabor 390 03\nS: Czech Republic\n\nN: David Huggins-Daines\nE: dhd@debian.org\nE: dhd@eradicator.org\nE: dhd@cepstral.com\nD: PA-RISC port\nD: Nubus subsystem\nD: Generic 68k Macintosh framebuffer driver\nD: STI framebuffer tweaks\nD: LTPC driver tweaks\nS: 110 S. 12th St., Apt. A\nS: Pittsburgh, PA 15203-1250\nS: USA\n\nN: Gareth Hughes\nE: gareth.hughes@acm.org\nD: Pentium III FXSR, SSE support\nD: Author/maintainer of most DRM drivers (especially ATI, MGA)\nD: Core DRM templates, general DRM and 3D-related hacking\nS: No fixed address\n\nN: Kenn Humborg\nE: kenn@wombat.ie\nD: Mods to loop device to support sparse backing files\nS: Ballinagard\nS: Roscommon\nS: Ireland\n\nN: Michael Hunold\nE: michael@mihu.de\nW: http://www.mihu.de/linux/\nD: Generic saa7146 video4linux-2 driver core,\nD: Driver for the "Multimedia eXtension Board", "dpc7146",\nD: "Hexium Orion", "Hexium Gemini"\n\nN: Miguel de Icaza Amozurrutia\nE: miguel@nuclecu.unam.mx\nD: Linux/SPARC team, Midnight Commander maintainer\nS: Avenida Copilco 162, 22-1003\nS: Mexico, DF\nS: Mexico\n\nN: Ian Jackson\nE: iwj10@cus.cam.ac.uk\nE: ijackson@nyx.cs.du.edu\nD: FAQ maintainer and poster of the daily postings\nD: FSSTND group member\nD: Debian core team member and maintainer of several Debian packages\nS: 2 Lexington Close\nS: Cambridge\nS: CB3 0DS\nS: United Kingdom\n\nN: Andreas Jaeger\nE: aj@suse.de\nD: Various smaller kernel fixes\nD: glibc developer\nS: Gottfried-Kinkel-Str. 18\nS: D 67659 Kaiserslautern\nS: Germany\n\nN: Mike Jagdis\nE: jaggy@purplet.demon.co.uk\nE: Mike.Jagdis@purplet.demon.co.uk\nD: iBCS personalities, socket and X interfaces, x.out loader, syscalls...\nD: Purple Distribution maintainer\nD: UK FidoNet support\nD: ISODE && PP\nD: Kernel and device driver hacking\nS: 280 Silverdale Road\nS: Earley\nS: Reading\nS: RG6 2NU\nS: United Kingdom\n\nN: Jakub Jelinek\nE: jakub@redhat.com\nW: http://sunsite.mff.cuni.cz/~jj\nP: 1024/0F7623C5 53 95 71 3C EB 73 99 97  02 49 40 47 F9 19 68 20\nD: Sparc hacker, SILO, mc\nD: Maintain sunsite.mff.cuni.cz\nS: K osmidomkum 723\nS: 160 00 Praha 6\nS: Czech Republic\n\nN: Niels Kristian Bech Jensen\nE: nkbj@image.dk\nW: http://www.image.dk/~nkbj\nD: Miscellaneous kernel updates and fixes.\nS: Dr. Holsts Vej 34, lejl. 164\nS: DK-8230 �byh�j\nS: Denmark\n\nN: Michael K. Johnson\nE: johnsonm@redhat.com\nW: http://www.redhat.com/~johnsonm\nP: 1024/4536A8DD 2A EC 88 08 40 64 CE D8  DD F8 12 2B 61 43 83 15\nD: The Linux Documentation Project\nD: Kernel Hackers' Guide\nD: Procps\nD: Proc filesystem\nD: Maintain tsx-11.mit.edu\nD: LP driver\nS: 201 Howell Street, Apartment 1C\nS: Chapel Hill, North Carolina 27514-4818\nS: USA\n\nN: Dave Jones\nE: davej@codemonkey.org.uk\nW: http://www.codemonkey.org.uk\nD: x86 errata/setup maintenance.\nD: AGPGART driver.\nD: CPUFREQ maintenance.\nD: Backport/Forwardport merge monkey.\nD: Various Janitor work.\nS: United Kingdom\n\nN: Martin Josfsson\nE: gandalf@wlug.westbo.se\nP: 1024D/F6B6D3B1 7610 7CED 5C34 4AA6 DBA2  8BE1 5A6D AF95 F6B6 D3B1\nD: netfilter: SAME target\nD: netfilter: helper target\nD: netfilter: various other hacks\nS: Ronneby\nS: Sweden\n\nN: Ani Joshi\nE: ajoshi@shell.unixbox.com\nD: fbdev hacking\n\nN: Jesper Juhl\nE: juhl-lkml@dif.dk\nD: Various small janitor fixes, cleanups etc.\nS: Lemnosvej 1, 3.tv\nS: 2300 Copenhagen S\nS: Denmark\n\nN: Jozsef Kadlecsik\nE: kadlec@blackhole.kfki.hu\nP: 1024D/470DB964 4CB3 1A05 713E 9BF7 FAC5  5809 DD8C B7B1 470D B964\nD: netfilter: TCP window tracking code\nD: netfilter: raw table\nD: netfilter: iprange match\nD: netfilter: new logging interfaces\nD: netfilter: various other hacks\nS: Tata\nS: Hungary\n\nN: Bernhard Kaindl\nE: bkaindl@netway.at\nE: edv@bartelt.via.at\nD: Author of a menu based configuration tool, kmenu, which \nD: is the predecessor of 'make menuconfig' and 'make xconfig'.\nD: digiboard driver update(modularisation work and 2.1.x upd)\nS: Tallak 95\nS: 8103 Rein\nS: Austria\n\nN: Mitsuru Kanda\nE: mk@linux-ipv6.org\nE: mk@isl.rdc.toshiba.co.jp\nE: mk@karaba.org\nW: http://www.karaba.org/~mk/\nP: 1024D/2EC7E30D 4DC3 949B 5A6C F0D6 375F  4472 8888 A8E1 2EC7 E30D\nD: IPsec, IPv6\nD: USAGI/WIDE Project, TOSHIBA CORPORATION\nS: 2-47-8, Takinogawa,\nS: Kita, Tokyo 114-0023\nS: Japan\n\nN: Jan Kara\nE: jack@atrey.karlin.mff.cuni.cz\nE: jack@suse.cz\nD: Quota fixes for 2.2 kernel\nD: Quota fixes for 2.3 kernel\nD: Few other fixes in filesystem area (buffer cache, isofs, loopback)\nW: http://atrey.karlin.mff.cuni.cz/~jack/\nS: Krosenska' 543\nS: 181 00 Praha 8\nS: Czech Republic\n\nN: Jan "Yenya" Kasprzak\nE: kas@fi.muni.cz\nD: Author of the COSA/SRP sync serial board driver.\nD: Port of the syncppp.c from the 2.0 to the 2.1 kernel.\nP: 1024/D3498839 0D 99 A7 FB 20 66 05 D7  8B 35 FC DE 05 B1 8A 5E\nW: http://www.fi.muni.cz/~kas/\nS: c/o Faculty of Informatics, Masaryk University\nS: Botanicka' 68a\nS: 602 00 Brno\nS: Czech Republic\n\nN: Jakob Kemi\nE: jakob.kemi@telia.com\nD: V4L W9966 Webcam driver\nS: Forsbyv�gen 33\nS: 74143 Knivsta\nS: Sweden\n\nN: Fred N. van Kempen\nE: waltje@linux.com\nD: NET-2\nD: Drivers\nD: Kernel cleanups\nS: Korte Heul 95\nS: 1403 ND  BUSSUM\nS: The Netherlands\n\nN: Karl Keyte\nE: karl@koft.com\nD: Disk usage statistics and modifications to line printer driver\nS: 26a Sheen Road\nS: Richmond\nS: Surrey\nS: TW9 1AE\nS: United Kingdom\n\nN: Marko Kiiskila\nE: marko@iprg.nokia.com\nD: Author of ATM Lan Emulation\nS: 660 Harvard Ave. #7\nS: Santa Clara, CA 95051\nS: USA\n\nN: Russell King\nE: rmk@arm.linux.org.uk\nD: Linux/arm integrator, maintainer & hacker\nD: Acornfb, Cyber2000fb author\nS: Burgh Heath, Tadworth, Surrey.\nS: England\n\nN: Olaf Kirch\nE: okir@monad.swb.de\nD: Author of the Linux Network Administrators' Guide\nS: Kattreinstr 38\nS: D-64295\nS: Germany\n\nN: Andi Kleen\nE: ak@muc.de\nD: network hacker, syncookies\nS: Schwalbenstr. 96\nS: 85551 Ottobrunn\nS: Germany\n\nN: Ian Kluft\nE: ikluft@thunder.sbay.org\nW: http://www.kluft.com/~ikluft/\nD: NET-1 beta testing & minor patches, original Smail binary packages for\nD: Slackware and Debian, vote-taker for 2nd comp.os.linux reorganization\nS: Post Office Box 611311\nS: San Jose, California 95161-1311\nS: USA\n\nN: Thorsten Knabe\nE: Thorsten Knabe <tek@rbg.informatik.tu-darmstadt.de>\nE: Thorsten Knabe <tek01@hrzpub.tu-darmstadt.de>\nW: http://www.student.informatik.tu-darmstadt.de/~tek\nW: http://www.tu-darmstadt.de/~tek01\nP: 1024/3BC8D885 8C 29 C5 0A C0 D1 D6 F4  20 D4 2D AB 29 F6 D0 60\nD: AD1816 sound driver\nS: Am Bergfried 10\nS: 63225 Langen\nS: Germany\n\nN: Alain L. Knaff\nE: Alain.Knaff@lll.lu\nD: floppy driver\nS: 19, rue Jean l'Aveugle\nS: L-1148 Luxembourg-City\nS: Luxembourg\n\nN: Gerd Knorr\nW: http://bytesex.org\nE: kraxel@bytesex.org\nE: kraxel@suse.de\nD: video4linux, bttv, vesafb, some scsi, misc fixes\n\nN: Harald Koenig\nE: koenig@tat.physik.uni-tuebingen.de\nD: XFree86 (S3), DCF77, some kernel hacks and fixes\nS: Koenigsberger Str. 90\nS: D-72336 Balingen\nS: Germany\n\nN: Rudolf Koenig\nE: rfkoenig@immd4.informatik.uni-erlangen.de\nD: The Linux Support Team Erlangen\n\nN: Andreas Koensgen\nE: ajk@iehk.rwth-aachen.de\nD: 6pack driver for AX.25\n\nN: Harald Koerfgen\nE: hkoerfg@web.de\nD: Linux/MIPS kernel hacks and fixes,\nD: DECstation port, Sharp Mobilon port\nS: D-50931 Koeln\nS: Germany\n\nN: Willy Konynenberg\nE: willy@xos.nl\nW: http://www.xos.nl/\nD: IP transparent proxy support\nS: X/OS Experts in Open Systems BV\nS: Kruislaan 419\nS: 1098 VA Amsterdam \nS: The Netherlands\n\nN: Gene Kozin\nE: 74604.152@compuserve.com\nW: http://www.sangoma.com\nD: WAN Router & Sangoma WAN drivers\nS: Sangoma Technologies Inc.\nS: 7170 Warden Avenue, Unit 2\nS: Markham, Ontario\nS: L3R 8B2\nS: Canada\n\nN: Maxim Krasnyansky\nE: maxk@qualcomm.com\nW: http://vtun.sf.net\nW: http://bluez.sf.net\nD: Author of the Universal TUN/TAP driver\nD: Author of the Linux Bluetooth Subsystem (BlueZ)\nD: Various other kernel patches, cleanups and fixes\nS: 2213 La Terrace Circle\nS: San Jose, CA 95123\nS: USA\n\nN: Andreas S. Krebs\nE: akrebs@altavista.net\nD: CYPRESS CY82C693 chipset IDE, Digital's PC-Alpha 164SX boards\n\nN: Greg Kroah-Hartman\nE: greg@kroah.com\nE: gregkh@suse.de\nW: http://www.kroah.com/linux/\nD: USB Serial Converter driver framework, USB Handspring Visor driver\nD: ConnectTech WHITEHeat USB driver, Generic USB Serial driver\nD: USB I/O Edgeport driver, USB Serial IrDA driver\nD: USB Bluetooth driver, USB Skeleton driver\nD: bits and pieces of USB core code.\nD: PCI Hotplug core, PCI Hotplug Compaq driver modifications\nD: portions of the Linux Security Module (LSM) framework\nD: parts of the driver core, debugfs.\n\nN: Russell Kroll\nE: rkroll@exploits.org\nW: http://www.exploits.org/\nD: V4L radio cards: radio-aztech (new), others (bugfixes/features)\nD: Loopback block device: dynamic sizing ("max_loop" as module)\nS: Post Office Box 691886\nS: San Antonio, Texas 78269-1886\nS: USA\n\nN: Denis O. Kropp\nE: dok@directfb.org\nD: NeoMagic framebuffer driver\nS: Badensche Str. 46\nS: 10715 Berlin\nS: Germany\n\nN: Andrzej M. Krzysztofowicz\nE: ankry@mif.pg.gda.pl\nD: Some 8-bit XT disk driver and devfs hacking \nD: Aladdin 1533/1543(C) chipset IDE\nD: PIIX chipset IDE\nS: ul. Matemblewska 1B/10\nS: 80-283 Gdansk\nS: Poland\n\nN: Gero Kuhlmann\nE: gero@gkminix.han.de\nD: mounting root via NFS\nS: Donarweg 4\nS: D-30657 Hannover\nS: Germany\n\nN: Markus Kuhn\nE: mskuhn@cip.informatik.uni-erlangen.de\nW: http://wwwcip.informatik.uni-erlangen.de/user/mskuhn\nD: Unicode, real-time, time, standards\nS: Schlehenweg 9\nS: D-91080 Uttenreuth\nS: Germany\n\nN: Jaya Kumar\nE: jayalk@intworks.biz\nW: http://www.intworks.biz\nD: Arc monochrome LCD framebuffer driver, x86 reboot fixups\nS: Gurgaon, India\nS: Kuala Lumpur, Malaysia\n\nN: Gabor Kuti\nM: seasons@falcon.sch.bme.hu\nM: seasons@makosteszta.sote.hu\nD: Original author of software suspend\n\nN: Jaroslav Kysela\nE: perex@suse.cz\nW: http://www.perex.cz\nD: Original Author and Maintainer for HP 10/100 Mbit Network Adapters\nD: ISA PnP\nS: Sindlovy Dvory 117\nS: 370 01  Ceske Budejovice\nS: Czech Republic\n\nN: Bas Laarhoven\nE: sjml@xs4all.nl\nD: Loadable modules and ftape driver\nS: J. Obrechtstr 23\nS: NL-5216 GP 's-Hertogenbosch\nS: The Netherlands\n\nN: Savio Lam\nE: lam836@cs.cuhk.hk\nD: Author of the dialog utility, foundation\nD: for Menuconfig's lxdialog.\n\nN: Christoph Lameter\nE: christoph@lameter.com\nD: Digiboard PC/Xe and PC/Xi, Digiboard EPCA\nD: Early protocol filter for bridging code\nD: Bug fixes\n\nN: Paul Laufer\nE: paul@laufernet.com\nD: Soundblaster driver fixes, ISAPnP quirk\nS: California, USA\n\nN: Tom Lees\nE: tom@lpsg.demon.co.uk\nW: http://www.lpsg.demon.co.uk/\nP: 1024/87D4D065 2A 66 86 9D 02 4D A6 1E  B8 A2 17 9D 4F 9B 89 D6\nD: Original author and current maintainer of\nD: PnP code.\n\nN: David van Leeuwen\nE: david@tm.tno.nl\nD: Philips/LMS cm206 cdrom driver, generic cdrom driver\nS: Scheltemalaan 14\nS: 3817 KS Amersfoort\nS: The Netherlands\n\nN: Volker Lendecke\nE: vl@kki.org\nD: Kernel smbfs (to mount WfW, NT and OS/2 network drives.)\nD: NCP filesystem support (to mount NetWare volumes)\nS: Von Ossietzky Str. 12\nS: 37085 Goettingen\nS: Germany\n\nN: Kevin Lentin\nE: kevinl@cs.monash.edu.au\nD: NCR53C400/T130B SCSI extension to NCR5380 driver.\nS: 18 Board Street\nS: Doncaster VIC 3108\nS: Australia\n\nN: Hans Lermen\nE: lermen@elserv.ffm.fgan.de\nD: Author of the LOADLIN Linux loader, hacking on boot stuff\nD: Coordinator of DOSEMU releases\nS: Am Muehlenweg 38\nS: D53424 Remagen\nS: Germany\n\nN: Colin Leroy\nE: colin@colino.net\nW: http://www.geekounet.org/\nD: PowerMac adt746x fan driver\nD: Random fixing of various drivers (macintosh, usb, sound)\nS: Toulouse\nS: France\n\nN: Achim Leubner\nE: achim_leubner@adaptec.com\nD: GDT Disk Array Controller/Storage RAID controller driver\nS: ICP vortex GmbH\nS: Neckarsulm\nS: Germany\n\nN: Phil Lewis\nE: beans@bucket.ualr.edu\nD: Promised to send money if I would put his name in the source tree.\nS: Post Office Box 371\nS: North Little Rock, Arkansas 72115\nS: USA\n\nN: Stephan Linz\nE: linz@mazet.de\nE: Stephan.Linz@gmx.de\nW: http://www.crosswinds.net/~tuxer\nD: PCILynx patch to work with 1394a PHY and without local RAM\nS: (ask for current address)\nS: Germany\n\nN: Christophe Lizzi\nE: lizzi@cnam.fr\nW: http://cedric.cnam.fr/personne/lizzi\nD: FORE Systems 200E-series ATM network driver, sparc64 port of ATM\nS: CNAM, Laboratoire CEDRIC\nS: 292, rue St-Martin\nS: 75141 Paris Cedex 03\nS: France\n\nN: Siegfried "Frieder" Loeffler (dg1sek)\nE: floeff@tunix.mathematik.uni-stuttgart.de, fl@LF.net\nW: http://www.mathematik.uni-stuttgart.de/~floeff\nD: Busmaster driver for HP 10/100 Mbit Network Adapters\nS: University of Stuttgart, Germany and\nS: Ecole Nationale Superieure des Telecommunications, Paris\n\nN: Jamie Lokier\nE: jamie@imbolc.ucc.ie\nD: Reboot-through-BIOS for broken 486 motherboards\nD: Some parport fixes\nS: 11 Goodson Walk\nS: Marston\nS: Oxford\nS: OX3 0HX\nS: United Kingdom\n\nN: Mark Lord\nE: mlord@pobox.com\nD: EIDE driver, hd.c support\nD: EIDE PCI and bus-master DMA support\nD: Hard Disk Parameter (hdparm) utility\nS: 33 Ridgefield Cr\nS: Nepean, Ontario\nS: Canada K2H 6S3\n\nN: Warner Losh\nE: imp@village.org\nD: Linux/MIPS Deskstation support, Provided OI/OB for Linux\nS: 8786 Niwot Road\nS: Niwot, Colorado 80503\nS: USA\n\nN: Robert M. Love\nE: rml@tech9.net\nE: rml@novell.com\nD: misc. kernel hacking and debugging\nS: Cambridge, MA 02139\nS: USA\n\nN: Martin von L�wis\nE: loewis@informatik.hu-berlin.de\nD: script binary format\nD: NTFS driver\n\nN: H.J. Lu\nE: hjl@gnu.ai.mit.edu\nD: GCC + libraries hacker\n\nN: Michal Ludvig\nE: michal@logix.cz\nE: michal.ludvig@asterisk.co.nz\nW: http://www.logix.cz/michal\nP: 1024D/C45B2218 1162 6471 D391 76E0 9F99  29DA 0C3A 2509 C45B 2218\nD: VIA PadLock driver\nD: Netfilter pkttype module\nS: Asterisk Ltd.\nS: Auckland\nS: New Zealand\n\nN: Tuomas J. Lukka\nE: Tuomas.Lukka@Helsinki.FI\nD: Original dual-monitor patches\nD: Console-mouse-tracking patches\nS: Puistokaari 1 E 18\nS: 00200 Helsinki\nS: Finland\n\nN: Daniel J. Maas\nE: dmaas@dcine.com\nW: http://www.maasdigital.com\nD: dv1394\n\nN: Hamish Macdonald\nE: hamishm@lucent.com\nD: Linux/68k port\nS: 32 Clydesdale Avenue\nS: Kanata, Ontario\nS: Canada K2M-2G7\n\nN: Peter MacDonald\nD: SLS distribution\nD: Initial implementation of VC's, pty's and select()\n\nN: Pavel Machek\nE: pavel@ucw.cz\nE: pavel@suse.cz\nD: Softcursor for vga, hypertech cdrom support, vcsa bugfix, nbd\nD: sun4/330 port, capabilities for elf, speedup for rm on ext2, USB,\nD: work on suspend-to-ram/disk, killing duplicates from ioctl32\nS: Volkova 1131\nS: 198 00 Praha 9\nS: Czech Republic\n\nN: Paul Mackerras\nE: paulus@samba.org\nD: PPP driver\nD: Linux for PowerPC\nD: Linux port for PCI Power Macintosh\n\nN: Pat Mackinlay\nE: pat@it.com.au\nD: 8 bit XT hard disk driver\nD: Miscellaneous ST0x, TMC-8xx and other SCSI hacking\nS: 25 McMillan Street\nS: Victoria Park 6100\nS: Australia\n\nN: James B. MacLean\nE: macleajb@ednet.ns.ca\nW: http://www.ednet.ns.ca/~macleajb/dosemu.html\nD: Former Coordinator of DOSEMU releases\nD: Program in DOSEMU\nS: PO BOX 220, HFX. CENTRAL\nS: Halifax, Nova Scotia\nS: Canada B3J 3C8\n\nN: Kai M�kisara\nE: Kai.Makisara@kolumbus.fi\nD: SCSI Tape Driver\n\nN: Asit Mallick\nE: asit.k.mallick@intel.com\nD: Linux/IA-64\nS: 2200 Mission College Blvd\nS: Santa Clara, CA 95052\nS: USA\n\nN: Petko Manolov\nE: petkan@users.sourceforge.net\nD: USB ethernet pegasus/pegasus-II driver\nD: USB ethernet rtl8150 driver\nD: optimizing i[45]86 string routines\nD: i386 task switching hacks\nS: 482 Shadowgraph Dr.\nS: San Jose, CA  95110\nS: USA\n\nN: Martin Mares\nE: mj@ucw.cz\nW: http://www.ucw.cz/~mj/\nD: BIOS video mode handling code\nD: MOXA C-218 serial board driver\nD: Network autoconfiguration\nD: PCI subsystem\nD: Random kernel hacking\nS: Kankovskeho 1241\nS: 182 00 Praha 8\nS: Czech Republic\n\nN: John A. Martin\nE: jam@acm.org\nW: http://www.tux.org/~jam/\nP: 1024/04456D53 9D A3 6C 6B 88 80 8A 61  D7 06 22 4F 95 40 CE D2\nP: 1024/3B986635 5A61 7EE6 9E20 51FB 59FB  2DA5 3E18 DD55 3B98 6635\nD: FSSTND contributor\nD: Credit file compilator\n\nN: Kevin E. Martin\nE: martin@cs.unc.edu\nD: Developed original accelerated X servers included in XFree86\nD: XF86_Mach64\nD: XF86_Mach32\nD: XF86_Mach8\nD: XF86_8514\nD: cfdisk (curses based disk partitioning program)\n\nN: John S. Marvin\nE: jsm@fc.hp.com\nD: PA-RISC port\nS: Hewlett Packard\nS: MS 42\nS: 3404 E. Harmony Road\nS: Fort Collins, CO 80528\n\nN: Torben Mathiasen\nE: torben.mathiasen@compaq.com\nE: torben@kernel.dk\nW: http://tlan.kernel.dk\nD: ThunderLAN maintainer\nD: ThunderLAN updates and other kernel fixes.\nS: Bremensgade 29, st.th\nS: 2300 Copenhagen S\nS: Denmark\n\nN: Claudio S. Matsuoka\nE: claudio@conectiva.com\nE: claudio@helllabs.org\nW: http://helllabs.org/~claudio\nD: V4L, OV511 driver hacks\nS: Conectiva S.A.\nS: R. Tocantins 89\nS: 80050-430  Curitiba PR\nS: Brazil\n\nN: Heinz Mauelshagen\nE: mge@EZ-Darmstadt.Telekom.de\nD: Logical Volume Manager\nS: Bartningstr. 12\nS: 64289 Darmstadt\nS: Germany \n\nN: Mark W. McClelland\nE: mmcclell@bigfoot.com\nE: mark@alpha.dyndns.org\nW: http://alpha.dyndns.org/ov511/\nP: 1024D/357375CC 317C 58AC 1B39 2AB0 AB96  EB38 0B6F 731F 3573 75CC\nD: OV511 driver\nS: (address available on request)\nS: USA\n\nN: Patrick McHardy\nE: kaber@trash.net\nP: 1024D/12155E80 B128 7DE6 FF0A C2B2 48BE  AB4C C9D4 964E 1215 5E80\nD: netfilter: endless number of bugfixes\nD: netfilter: CLASSIFY target\nD: netfilter: addrtype match\nD: tc: HFSC scheduler\nS: Freiburg\nS: Germany\n\nN: Mike McLagan\nE: mike.mclagan@linux.org\nW: http://www.invlogic.com/~mmclagan\nD: DLCI/FRAD drivers for Sangoma SDLAs\nS: Innovative Logic Corp\nS: Post Office Box 1068\nS: Laurel, Maryland 20732\nS: USA\n\nN: Bradley McLean\nE: brad@bradpc.gaylord.com\nD: Device driver hacker\nD: General kernel debugger\nS: 249 Nichols Avenue\nS: Syracuse, New York 13206\nS: USA\n\nN: Dirk Melchers\nE: dirk@merlin.nbg.sub.org\nD: 8 bit XT hard disk driver for OMTI5520\nS: Schloessleinsgasse 31\nS: D-90453 Nuernberg\nS: Germany\n\nN: Arnaldo Carvalho de Melo\nE: acme@conectiva.com.br\nE: acme@kernel.org\nE: acme@gnu.org\nW: http://bazar2.conectiva.com.br/~acme\nW: http://advogato.org/person/acme\nP: 1024D/9224DF01 D5DF E3BB E3C8 BCBB F8AD  841A B6AB 4681 9224 DF01\nD: wanrouter hacking\nD: misc Makefile, Config.in, drivers and network stacks fixes\nD: IPX & LLC network stacks maintainer\nD: Cyclom 2X synchronous card driver\nD: wl3501 PCMCIA wireless card driver\nD: i18n for minicom, net-tools, util-linux, fetchmail, etc\nS: Conectiva S.A.\nS: R. Tocantins, 89 - Cristo Rei\nS: 80050-430 - Curitiba - Paran�\nS: Brazil\n\nN: Karsten Merker\nE: merker@linuxtag.org\nD: DECstation framebuffer drivers\nS: Germany\n\nN: Michael Meskes\nE: meskes@debian.org\nP: 1024/04B6E8F5 6C 77 33 CA CC D6 22 03  AB AB 15 A3 AE AD 39 7D\nD: Kernel hacker. PostgreSQL hacker. Software watchdog daemon.\nD: Maintainer of several Debian packages\nS: Th.-Heuss-Str. 61 \nS: D-41812 Erkelenz\nS: Germany\n\nN: Nigel Metheringham\nE: Nigel.Metheringham@ThePLAnet.net\nP: 1024/31455639 B7 99 BD B8 00 17 BD 46  C1 15 B8 AB 87 BC 25 FA\nD: IP Masquerading work and minor fixes\nS: Planet Online\nS: The White House, Melbourne Street, LEEDS\nS: LS2 7PS, United Kingdom\n\nN: Craig Metz\nE: cmetz@inner.net\nD: Some of PAS 16 mixer & PCM support, inet6-apps\n\nN: William (Bill) Metzenthen\nE: billm@suburbia.net\nD: Author of the FPU emulator.\nD: Minor kernel hacker for other lost causes (Hercules mono, etc).\nS: 22 Parker Street\nS: Ormond\nS: Victoria 3163\nS: Australia\n\nN: Pauline Middelink\nE: middelin@polyware.nl\nD: General low-level bug fixes, /proc fixes, identd support\nD: Author of IP masquerading\nD: Zoran ZR36120 Video For Linux driver\nS: Boterkorfhoek 34\nS: 7546 JA  Enschede\nS: Netherlands\n\nN: David S. Miller\nE: davem@davemloft.net\nD: Sparc and blue box hacker\nD: Vger Linux mailing list co-maintainer\nD: Linux Emacs elf/qmagic support + other libc/gcc things\nD: Yee bore de yee bore! ;-)\nS: 575 Harrison St. #103\nS: San Francisco, CA 94105\nS: USA\n\nN: Rick Miller\nE: rdmiller@execpc.com\nW: http://www.execpc.com/~rdmiller/\nD: Original Linux Device Registrar (Major/minor numbers)\nD: au-play, bwBASIC\nS: S78 W16203 Woods Road\nS: Muskego, Wisconsin 53150\nS: USA\n\nN: Harald Milz\nE: hm@seneca.linux.de\nD: Linux Projects Map, Linux Commercial-HOWTO\nD: general Linux publicity in Germany, vacation port\nD: UUCP and CNEWS binary packages for LST\nS: Editorial Board iX Mag\nS: Helstorfer Str. 7\nS: D-30625 Hannover\nS: Germany\n\nN: Corey Minyard\nE: minyard@wf-rch.cirr.com\nE: minyard@mvista.com\nW: http://home.attbi.com/~minyard\nD: Sony CDU31A CDROM Driver\nD: IPMI driver\nD: Various networking fixes long ago\nD: Original ppc_md work\nD: Shared zlib\nS: 7406 Wheat Field Rd\nS: Garland, Texas 75044\nS: USA\n\nN: Kazunori Miyazawa\nE: miyazawa@linux-ipv6.org\nE: Kazunori.Miyazawa@jp.yokogawa.com\nE: kazunori@miyazawa.org\nW: http://www.miyazawa.org/~kazunori/\nD: IPsec, IPv6\nD: USAGI/WIDE Project, Yokogawa Electric Corporation\nS: 2-20-4-203, Nakacho,\nS: Musashino, Tokyo 180-0006\nS: Japan\n\nN: Patrick Mochel\nE: mochel@osdl.org\nE: mochelp@infinity.powertie.org\nD: PCI Power Management, ACPI work\nS: 12725 SW Millikan Way, Suite 400\nS: Beaverton, Oregon 97005\nS: USA\n\nN: Eberhard Moenkeberg\nE: emoenke@gwdg.de\nD: CDROM driver "sbpcd" (Matsushita/Panasonic/Soundblaster)\nS: Ruhstrathoehe 2 b.\nS: D-37085 Goettingen\nS: Germany\n\nN: Thomas Molina\nE: tmolina@cablespeed.com\nD: bug fixes, documentation, minor hackery\n\nN: James Morris\nE: jmorris@intercode.com.au\nW: http://www.intercode.com.au/jmorris/\nD: Netfilter, Linux Security Modules (LSM).\nS: PO Box 707\nS: Spit Junction NSW 2088\nS: Australia\n\nN: David Mosberger-Tang\nE: davidm@hpl.hp.com if IA-64 related, else David.Mosberger@acm.org\nD: Linux/Alpha and Linux/ia64\nS: 35706 Runckel Lane\nS: Fremont, California 94536\nS: USA\n\nN: Sam Mosel\nE: sam.mosel@computer.org\nD: Wacom Intuos USB Support\nS: 22 Seaview St\nS: Fullarton 5063\nS: South Australia\n\nN. Wolfgang Muees\nE: wolfgang@iksw-muees.de\nD: Auerswald USB driver\n\nN: Ian A. Murdock\nE: imurdock@gnu.ai.mit.edu\nD: Creator of Debian distribution\nS: 30 White Tail Lane\nS: Lafayette, Indiana 47905\nS: USA\n\nN: Scott Murray\nE: scottm@somanetworks.com\nE: scott@spiteful.org\nD: OPL3-SA2, OPL3-SA3 sound driver\nD: CompactPCI hotplug core\nD: Ziatech ZT5550 and generic CompactPCI hotplug drivers\nS: Toronto, Ontario\nS: Canada\n\nN: Zwane Mwaikambo\nE: zwane@linuxpower.ca\nW: http://function.linuxpower.ca\nD: Various driver hacking\nD: Lowlevel x86 kernel hacking\nD: General debugging\nS: (ask for current address)\nS: Tanzania\n\nN: Trond Myklebust\nE: trond.myklebust@fys.uio.no\nD: current NFS client hacker.\nS: Dagaliveien 31e\nS: N-0391 Oslo\nS: Norway\n\nN: Johan Myreen\nE: jem@iki.fi\nD: PS/2 mouse driver writer etc.\nS: Dragonvagen 1 A 13\nS: FIN-00330 Helsingfors\nS: Finland\n\nN: Matija Nalis\nE: mnalis@jagor.srce.hr\nE: mnalis@voyager.hr\nD: Maintainer of the Umsdos file system\nS: Listopadska 7\nS: 10000 Zagreb\nS: Croatia\n\nN: Jonathan Naylor\nE: g4klx@g4klx.demon.co.uk\nE: g4klx@amsat.org\nW: http://zone.pspt.fi/~jsn/\nD: AX.25, NET/ROM and ROSE amateur radio protocol suites\nD: CCITT X.25 PLP and LAPB.\nS: 24 Castle View Drive\nS: Cromford\nS: Matlock\nS: Derbyshire DE4 3RL\nS: United Kingdom\n\nN: Ian S. Nelson\nE: ian.nelson@echostar.com\nD: Minor mmap and ide hacks\nS: 1370 Atlantis Ave.\nS: Lafayette CO, 80026\nS: USA\n\nN: Russell Nelson\nE: nelson@crynwr.com\nW: http://www.crynwr.com/~nelson\nP: 1024/83942741 FF 68 EE 27 A0 5A AA C3  F5 DC 05 62 BD 5B 20 2F\nD: Author of cs89x0, maintainer of kernel changelog through 1.3.3\nD: Wrote many packet drivers, from which some Ethernet drivers are derived.\nS: 521 Pleasant Valley Road\nS: Potsdam, New York 13676\nS: USA\n\nN: Dave Neuer\nE: dave.neuer@pobox.com\nD: Helped implement support for Compaq's H31xx series iPAQs\nD: Other mostly minor tweaks & bugfixes\n\nN: Michael Neuffer\nE: mike@i-Connect.Net\nE: neuffer@goofy.zdv.uni-mainz.de\nW: http://www.i-Connect.Net/~mike/\nD: Developer and maintainer of the EATA-DMA SCSI driver\nD: Co-developer EATA-PIO SCSI driver\nD: /proc/scsi and assorted other snippets \nS: Zum Schiersteiner Grund 2\nS: 55127 Mainz\nS: Germany\n\nN: Gustavo Niemeyer\nE: niemeyer@conectiva.com\nW: https://moin.conectiva.com.br/GustavoNiemeyer\nD: wl3501 PCMCIA wireless card initial support for wireless extensions in 2.4\nS: Conectiva S.A.\nS: R. Tocantins 89\nS: 80050-430  Curitiba PR\nS: Brazil\n\nN: David C. Niemi\nE: niemi@tux.org\nW: http://www.tux.org/~niemi/\nD: Assistant maintainer of Mtools, fdutils, and floppy driver\nD: Administrator of Tux.Org Linux Server, http://www.tux.org\nS: 2364 Old Trail Drive\nS: Reston, Virginia 20191\nS: USA\n\nN: Fredrik Noring\nE: noring@nocrew.org\nW: http://www.lysator.liu.se/~noring/\nD: dsp56k device driver\n\nN: Michael O'Reilly\nE: michael@iinet.com.au\nE: oreillym@tartarus.uwa.edu.au\nD: Wrote the original dynamic sized disk cache stuff. I think the only\nD: part that remains is the GFP_KERNEL et al #defines. :)\nS: 192 Nichsolson Road\nS: Subiaco, 6008\nS: Perth, Western Australia\nS: Australia\n\nN: Greg Page\nE: gpage@sovereign.org\nD: IPX development and support\n\nN: David Parsons\nE: orc@pell.chi.il.us\nD: improved memory detection code.\n\nN: Ivan Passos\nE: ivan@cyclades.com\nD: Author of the Cyclades-PC300 synchronous card driver\nD: Maintainer of the Cyclom-Y/Cyclades-Z asynchronous card driver\nS: Cyclades Corp\nS: 41934 Christy St\nS: Fremont, CA 94538\nS: USA\n\nN: Mikulas Patocka\nE: mikulas@artax.karlin.mff.cuni.cz\nW: http://artax.karlin.mff.cuni.cz/~mikulas/\nP: 1024/BB11D2D5 A0 F1 28 4A C4 14 1E CF  92 58 7A 8F 69 BC A4 D3\nD: Read/write HPFS filesystem\nS: Weissova 8\nS: 644 00 Brno\nS: Czech Republic\n\nN: Vojtech Pavlik\nE: vojtech@suse.cz\nD: Joystick driver\nD: arcnet-hardware readme\nD: Minor ARCnet hacking\nD: USB (HID, ACM, Printer ...)\nS: Ucitelska 1576\nS: Prague 8\nS: 182 00 Czech Republic\n\nN: Barak A. Pearlmutter\nE: bap@cs.unm.edu\nW: http://www.cs.unm.edu/~bap/\nP: 512/602D785D 9B A1 83 CD EE CB AD 93  20 C6 4C B7 F5 E9 60 D4\nD: Author of mark-and-sweep GC integrated by Alan Cox\nS: Computer Science Department\nS: FEC 313\nS: University of New Mexico\nS: Albuquerque, New Mexico 87131\nS: USA\n\nN: Avery Pennarun\nE: apenwarr@worldvisions.ca\nW: http://www.worldvisions.ca/~apenwarr/\nD: ARCnet driver\nD: "make xconfig" improvements\nD: Various minor hacking\nS: RR #5, 497 Pole Line Road\nS: Thunder Bay, Ontario\nS: CANADA P7C 5M9\n\nN: Yuri Per\nE: yuri@pts.mipt.ru\nD: Some smbfs fixes\nS: Demonstratsii 8-382\nS: Tula 300000\nS: Russia\n\nN: Gordon Peters\nE: GordPeters@smarttech.com\nD: Isochronous receive for IEEE 1394 driver (OHCI module).\nD: Bugfixes for the aforementioned.\nS: Calgary, Alberta\nS: Canada\n\nN: Johnnie Peters\nE: jpeters@phx.mcd.mot.com\nD: Motorola PowerPC changes for PReP\nS: 2900 S. Diable Way\nS: Tempe, Arizona 85282\nS: USA\n\nN: Kirk Petersen\nE: kirk@speakeasy.org\nW: http://www.speakeasy.org/~kirk/\nD: implemented kmod\nD: modularized BSD Unix domain sockets\n\nN: Martin Kasper Petersen\nE: mkp@mkp.net\nD: PA-RISC port\nD: XFS file system\nD: kiobuf based block I/O work\nS: 314 Frank St.\nS: Ottawa, Ontario\nS: Canada K2P 0X8\n\nN: Mikael Pettersson\nE: mikpe@csd.uu.se\nW: http://www.csd.uu.se/~mikpe/\nD: Miscellaneous fixes\n\nN: Reed H. Petty\nE: rhp@draper.net\nW: http://www.draper.net\nD: Loop device driver extensions\nD: Encryption transfer modules (no export)\nS: Post Office Box 1815\nS: Harrison, Arkansas  72602-1815\nS: USA\n\nN: Kai Petzke\nE: petzke@teltarif.de\nW: http://www.teltarif.de/\nP: 1024/B42868C1 D9 59 B9 98 BB 93 05 38  2E 3E 31 79 C3 65 5D E1\nD: Driver for Laser Magnetic Storage CD-ROM\nD: Some kernel bug fixes\nD: Port of the database Postgres\nD: Book: "Linux verstehen und anwenden" (Hanser-Verlag)\nS: Triftstra=DFe 55\nS: 13353 Berlin\nS: Germany\n\nN: Emanuel Pirker\nE: epirker@edu.uni-klu.ac.at\nD: AIC5800 IEEE 1394, RAW I/O on 1394\nD: Starter of Linux1394 effort\nS: ask per mail for current address\n\nN: Nicolas Pitre\nE: nico@cam.org\nD: StrongARM SA1100 support integrator & hacker\nD: Xscale PXA architecture\nD: unified SMC 91C9x/91C11x ethernet driver (smc91x)\nS: Montreal, Quebec, Canada\n\nN: Ken Pizzini\nE: ken@halcyon.com\nD: CDROM driver "sonycd535" (Sony CDU-535/531)\n\nN: Stelian Pop\nE: stelian@popies.net\nP: 1024D/EDBB6147 7B36 0E07 04BC 11DC A7A0  D3F7 7185 9E7A EDBB 6147\nD: sonypi, meye drivers, mct_u232 usb serial hacks\nS: Paris, France\n\nN: Pete Popov\nE: pete_popov@yahoo.com\nD: Linux/MIPS AMD/Alchemy Port and mips hacking and debugging\nS: San Jose, CA 95134\nS: USA\n\nN: Matt Porter\nE: mporter@kernel.crashing.org\nD: Motorola PowerPC PReP support\nD: cPCI PowerPC support\nD: Embedded PowerPC 4xx/6xx/7xx/74xx support\nS: Chandler, Arizona 85249\nS: USA\n\nN: Frederic Potter \nE: fpotter@cirpack.com\nD: Some PCI kernel support\n\nN: Rui Prior\nE: rprior@inescn.pt\nD: ATM device driver for NICStAR based cards\n\nN: Stefan Probst\nE: sp@caldera.de\nD: The Linux Support Team Erlangen, 1993-97\nS: Caldera (Deutschland) GmbH\nS: Lazarettstrasse 8\nS: 91054 Erlangen\nS: Germany\n\nN: Giuliano Procida\nE: myxie@debian.org,gprocida@madge.com\nD: Madge Ambassador driver (Collage 155 Server ATM adapter)\nD: Madge Horizon driver (Collage 25 and 155 Client ATM adapters)\nP: 1024/93898735 D3 9E F4 F7 6D 8D 2F 3A  38 BA 06 7C 2B 33 43 7D\nS: Madge Networks\nS: Framewood Road\nS: Wexham SL3 6PJ\nS: United Kingdom\n\nN: Daniel Quinlan\nE: quinlan@pathname.com\nW: http://www.pathname.com/~quinlan/\nD: FSSTND coordinator; FHS editor\nD: random Linux documentation, patches, and hacks\nS: 4390 Albany Drive #41A\nS: San Jose, California 95129\nS: USA\n\nN: Juan Quintela\nE: quintela@fi.udc.es\nD: Memory Management hacking\nS: LFCIA\nS: Departamento de Computaci�n\nS: Universidade da Coru�a\nS: E-15071\nS: A Coru�a\nS: Spain\n\nN: Augusto Cesar Radtke\nE: bishop@sekure.org\nW: http://bishop.sekure.org\nD: {copy,get,put}_user calls updates\nD: Miscellaneous hacks\nS: R. Otto Marquardt, 226 - Garcia\nS: 89020-350 Blumenau - Santa Catarina\nS: Brazil\n\nN: Goutham Rao\nE: goutham.rao@intel.com\nD: Linux/IA-64\nS: 2200 Mission College Blvd\nS: Santa Clara, CA 95052\nS: USA\n\nN: Eric S. Raymond\nE: esr@thyrsus.com\nW: http://www.tuxedo.org/~esr/\nD: terminfo master file maintainer\nD: Editor: Installation HOWTO, Distributions HOWTO, XFree86 HOWTO\nD: Author: fetchmail, Emacs VC mode, Emacs GUD mode\nS: 6 Karen Drive\nS: Malvern, Pennsylvania 19355\nS: USA\n\nN: Stefan Reinauer\nE: stepan@linux.de\nW: http://www.freiburg.linux.de/~stepan/\nD: Modularization of some filesystems\nD: /proc/sound, minor fixes\nS: Schlossbergring 9\nS: 79098 Freiburg\nS: Germany\n\nN: Joerg Reuter\nE: jreuter@yaina.de\nW: http://yaina.de/jreuter/\nW: http://www.qsl.net/dl1bke/\nD: Generic Z8530 driver, AX.25 DAMA slave implementation\nD: Several AX.25 hacks\n\nN: Francois-Rene Rideau\nE: fare@tunes.org\nW: http://www.tunes.org/~fare\nD: petty kernel janitor (byteorder, ufs)\nS: 6, rue Augustin Thierry\nS: 75019 Paris\nS: France\n\nN: Rik van Riel\nE: riel@redhat.com\nW: http://www.surriel.com/\nD: Linux-MM site, Documentation/sysctl/*, swap/mm readaround\nD: kswapd fixes, random kernel hacker, rmap VM,\nD: nl.linux.org administrator, minor scheduler additions\nS: Red Hat Boston\nS: 3 Lan Drive\nS: Westford, MA 01886\nS: USA\n\nN: Pekka Riikonen\nE: priikone@poseidon.pspt.fi\nE: priikone@ssh.com\nD: Random kernel hacking and bug fixes\nD: International kernel patch project\nS: Kasarmikatu 11 A4\nS: 70110 Kuopio\nS: Finland\n\nN: Luca Risolia\nE: luca.risolia@studio.unibo.it\nP: 1024D/FCE635A4 88E8 F32F 7244 68BA 3958  5D40 99DA 5D2A FCE6 35A4\nD: V4L driver for W996[87]CF JPEG USB Dual Mode Camera Chips\nD: V4L2 driver for SN9C10x PC Camera Controllers\nS: Via Liberta' 41/A\nS: Osio Sotto, 24046, Bergamo\nS: Italy\n\nN: William E. Roadcap\nE: roadcapw@cfw.com\nW: http://www.cfw.com/~roadcapw\nD: Author of menu based configuration tool, Menuconfig.\nS: 1407 Broad Street\nS: Waynesboro, Virginia 22980\nS: USA\n\nN: Andrew J. Robinson\nE: arobinso@nyx.net\nW: http://www.nyx.net/~arobinso\nD: Hayes ESP serial port driver\n\nN: Florian La Roche\nE: rzsfl@rz.uni-sb.de\nE: flla@stud.uni-sb.de\nD: Net programs and kernel net hacker\nS: Gaildorfer Str. 27\nS: 7000 Stuttgart 50\nS: Germany\n\nN: Christoph Rohland\nE: hans-christoph.rohland@sap.com\nE: ch.rohland@gmx.net\nD: shm fs, SYSV semaphores, af_unix\nS: Neue Heimat Str. 8\nS: D-68789 St.Leon-Rot\nS: Germany\n\nN: Thiago Berlitz Rondon\nE: maluco@mileniumnet.com.br\nW: http://vivaldi.linuxms.com.br/~maluco\nD: Miscellaneous kernel hacker\nS: R. Anhanguera, 1487 - Ipiranga\nS: 79080-740 - Campo Grande - Mato Grosso do Sul\nS: Brazil\n\nN: Stephen Rothwell\nE: sfr@canb.auug.org.au\nW: http://www.canb.auug.org.au/~sfr\nP: 1024/BD8C7805 CD A4 9D 01 10 6E 7E 3B  91 88 FA D9 C8 40 AA 02\nD: Boot/setup/build work for setup > 2K\nD: Author, APM driver\nD: Directory notification\nS: 66 Maltby Circuit\nS: Wanniassa ACT 2903\nS: Australia\n\nN: Gerard Roudier\nE: groudier@free.fr\nD: Contributed to asynchronous read-ahead improvement\nS: 21 Rue Carnot\nS: 95170 Deuil La Barre\nS: France\n\nN: Sebastien Rougeaux\nE: Sebastien.Rougeaux@syseng.anu.edu.au\nD: IEEE 1394 OHCI module\nS: Research School of Information Science and Engineering\nS: The Australian National University, ACT 0200\nS: Australia\n\nN: Aristeu Sergio Rozanski Filho\nE: aris@cathedrallabs.org\nD: Support for EtherExpress 10 ISA (i82595) in eepro driver\nD: User level driver support for input\nS: R. Jose Serrato, 130 - Santa Candida\nS: 82640-320 - Curitiba - Paran�\nS: Brazil\n\nN: Alessandro Rubini\nE: rubini@ipvvis.unipv.it\nD: the gpm mouse server and kernel support for it\n\nN: Philipp Rumpf\nE: prumpf@tux.org\nD: random bugfixes\nS: Drausnickstrasse 29\nS: 91052 Erlangen\nS: Germany\n\nN: Paul `Rusty' Russell\nE: rusty@rustcorp.com.au\nW: http://ozlabs.org/~rusty\nD: Ruggedly handsome.\nD: netfilter, ipchains with Michael Neuling.\nS: 52 Moore St\nS: Turner ACT 2612\nS: Australia\n\nN: Richard Russon (FlatCap)\nE: kernel@flatcap.org\nW: http://www.flatcap.org\nD: NTFS support\nD: LDM support (Win2000/XP Logical Disk Manager/Dynamic Disks)\nS: 50 Swansea Road\nS: Reading\nS: United Kingdom\n\nN: Bill Ryder\nE: bryder@sgi.com\nD: FTDI_SIO usb/serial converter driver\nW: http://reality.sgi.com/bryder_wellington/ftdi_sio\nS: I/3 Walter St\nS: Wellington\nS: New Zealand\n\nN: Sampo Saaristo\nE: sambo@cs.tut.fi\nD: Co-author of Multi-Protocol Over ATM (MPOA)\nS: Tampere University of Technology / Telecom lab\nS: Hermiankatu 12C\nS: FIN-33720 Tampere\nS: Finland\n\nN: Thomas Sailer\nE: t.sailer@alumni.ethz.ch\nE: HB9JNX@HB9W.CHE.EU (packet radio)\nD: Baycom driver\nS: Markusstrasse 18\nS: 8006 Zuerich\nS: Switzerland\n\nN: Manuel Estrada Sainz\nD: Firmware loader (request_firmware)\n\nN: Wayne Salamon\nE: wsalamon@tislabs.com\nE: wsalamon@nai.com\nD: portions of the Linux Security Module (LSM) framework and security modules\n\nN: Robert Sanders\nE: gt8134b@prism.gatech.edu\nD: Dosemu\n\nN: Duncan Sands\nE: duncan.sands@free.fr\nW: http://topo.math.u-psud.fr/~sands\nD: Alcatel SpeedTouch USB driver\nS: 69 rue Dunois\nS: 75013 Paris\nS: France\n\nN: Hannu Savolainen\nE: hannu@opensound.com\nD: Maintainer of the sound drivers until 2.1.x days.\nD: Original compressed boot image support.\nS: Valurink. 4A11\nS: 03600 Karkkila\nS: Finland\n\nN: Deepak Saxena\nE: dsaxena@plexity.net\nD: I2O kernel layer (config, block, core, pci, net). I2O disk support for LILO\nD: XScale(IOP, IXP) porting and other random ARM bits\nS: Portland, OR\n\nN: Eric Schenk\nE: Eric.Schenk@dna.lth.se\nD: Random kernel debugging.\nD: SYSV Semaphore code rewrite.\nD: Network layer debugging.\nD: Dial on demand facility (diald).\nS: Dag Hammerskjolds v. 3E\nS: S-226 64 LUND\nS: Sweden\n\nN: Henning P. Schmiedehausen\nE: hps@tanstaafl.de\nD: added PCI support to the serial driver\nS: Buckenhof, Germany\n\nN: Michael Schmitz\nE:\nD: Macintosh IDE Driver\n\nN: Peter De Schrijver\nE: stud11@cc4.kuleuven.ac.be\nD: Mitsumi CD-ROM driver patches March version\nS: Molenbaan 29\nS: B2240 Zandhoven\nS: Belgium\n\nN: Martin Schulze\nE: joey@linux.de\nW: http://home.pages.de/~joey/\nD: Random Linux Hacker, Linux Promoter\nD: CD-List, Books-List, Ex-FAQ\nD: Linux-Support, -Mailbox, -Stammtisch\nD: several improvements to system programs\nS: Oldenburg\nS: Germany\n\nN: Robert Schwebel\nE: robert@schwebel.de\nW: http://www.schwebel.de\nD: Embedded hacker and book author,\nD: AMD Elan support for Linux\nS: Pengutronix\nS: Braunschweiger Strasse 79\nS: 31134 Hildesheim\nS: Germany\n\nN: Darren Senn\nE: sinster@darkwater.com\nD: Whatever I notice needs doing (so far: itimers, /proc)\nS: Post Office Box 64132\nS: Sunnyvale, California 94088-4132\nS: USA\n\nN: Simon Shapiro\nE: shimon@i-Connect.Net\nW: http://www.-i-Connect.Net/~shimon\nD: SCSI debugging\nD: Maintainer of the Debian Kernel packages\nS: 14355 SW Allen Blvd., Suite #140\nS: Beaverton, Oregon 97008\nS: USA\n\nN: Mike Shaver\nE: shaver@hungry.org\nW: http://www.hungry.org/~shaver/\nD: MIPS work, /proc/sys/net, misc net hacking\nS: 149 Union St.\nS: Kingston, Ontario\nS: Canada K7L 2P4\n\nN: John Shifflett\nE: john@geolog.com\nE: jshiffle@netcom.com\nD: Always IN2000 SCSI driver\nD: wd33c93 SCSI driver (linux-m68k)\nS: San Jose, California\nS: USA\n\nN: Robert Siemer\nE: Robert.Siemer@gmx.de\nP: 2048/C99A4289 2F DC 17 2E 56 62 01 C8  3D F2 AC 09 F2 E5 DD EE\nD: miroSOUND PCM20 radio RDS driver, ACI rewrite\nS: Klosterweg 28 / i309\nS: 76131 Karlsruhe\nS: Germany\n\nN: James Simmons \nE: jsimmons@infradead.org\nE: jsimmons@users.sf.net \nD: Frame buffer device maintainer\nD: input layer developement \nD: tty/console layer\nD: various mipsel devices \nS: 115 Carmel Avenue \nS: El Cerrito CA 94530\nS: USA \n\nN: Jaspreet Singh\nE: jaspreet@sangoma.com\nW: www.sangoma.com\nD: WANPIPE drivers & API Support for Sangoma S508/FT1 cards \nS: Sangoma Technologies Inc.,\nS: 1001 Denison Street\nS: Suite 101\nS: Markham, Ontario L3R 2Z6\nS: Canada\n\nN: Rick Sladkey\nE: jrs@world.std.com\nD: utility hacker: Emacs, NFS server, mount, kmem-ps, UPS debugger, strace, GDB\nD: library hacker: RPC, profil(3), realpath(3), regexp.h\nD: kernel hacker: unnamed block devs, NFS client, fast select, precision timer\nS: 24 Avon Place\nS: Arlington, Massachusetts 02174\nS: USA\n\nN: Craig Small\nE: csmall@triode.apana.org.au\nE: vk2xlz@gonzo.vk2xlz.ampr.org (packet radio)\nD: Gracilis PackeTwin device driver\nD: RSPF daemon \nS: 10 Stockalls Place\nS: Minto, NSW, 2566\nS: Australia\n\nN: Stephen Smalley\nE: sds@epoch.ncsc.mil\nD: portions of the Linux Security Module (LSM) framework and security modules\n\nN: Chris Smith\nE: csmith@convex.com\nD: Read only HPFS filesystem\nS: Richardson, Texas\nS: USA\n\nN: Christopher Smith\nE: x@xman.org\nD: Tulip net driver hacker\n\nN: Mark Smith\nE: mark.smith@comdev.cc\nD: Multicast support in bonding driver\n\nN: Miquel van Smoorenburg\nE: miquels@cistron.nl\nD: Kernel and net hacker. Sysvinit, minicom. doing Debian stuff.\nS: Cistron Internet Services\nS: PO-Box 297\nS: 2400 AG, Alphen aan den Rijn\nS: The Netherlands\n\nN: Scott Snyder\nE: snyder@fnald0.fnal.gov\nD: ATAPI cdrom driver\nS: MS 352, Fermilab\nS: Post Office Box 500\nS: Batavia, Illinois 60510\nS: USA\n\nN: Leo Spiekman\nE: leo@netlabs.net\nW: http://www.netlabs.net/hp/leo/\nD: Optics Storage 8000AT cdrom driver\nS: Cliffwood, New Jersey 07721\nS: USA\n\nN: Manfred Spraul\nE: manfred@colorfullife.com\nW: http://www.colorfullife.com/~manfred\nD: Lots of tiny hacks. Larger improvments to SysV IPC msg,\nD: slab, pipe, select.\nS: 71701 Schwieberdingen\nS: Germany\n\nN: Andrew Stanley-Jones\nE: asj@lanmedia.com\nD: LanMedia Corp. Device WAN card device driver\nS: #102, 686 W. Maude Ave\nS: Sunyvale, CA 94086\nS: USA\n\nN: Michael Still\nE: mikal@stillhq.com\nW: http://www.stillhq.com\nD: Various janitorial patches\nD: mandocs and mandocs_install build targets\nS: (Email me and ask)\nS: Australia\n\nN: Henrik Storner\nE: storner@image.dk\nW: http://www.image.dk/~storner/\nW: http://www.sslug.dk/\nD: Configure script: Invented tristate for module-configuration\nD: vfat/msdos integration, kerneld docs, Linux promotion\nD: Miscellaneous bug-fixes\nS: Chr. Winthersvej 1 B, st.th.\nS: DK-1860 Frederiksberg C\nS: Denmark\n\nN: Drew Sullivan\nE: drew@ss.org\nW: http://www.ss.org/\nP: 1024/ACFFA969 5A 9C 42 AB E4 24 82 31  99 56 00 BF D3 2B 25 46\nD: iBCS2 developer\nS: 22 Irvington Cres.\nS: Willowdale, Ontario\nS: Canada M2N 2Z1\n\nN: Adam Sulmicki\nE: adam@cfar.umd.edu\nW: http://www.eax.com\nD: core networking fixes\nD: patch-kernel enhancements\nD: misc kernel fixes and updates\n\nN: Adrian Sun\nE: asun@cobaltnet.com\nD: hfs support\nD: alpha rtc port, random appletalk fixes\nS: Department of Zoology, University of Washington\nS: Seattle, WA  98195-1800\nS: USA\n\nN: Eugene Surovegin\nE: ebs@ebshome.net\nW: http://kernel.ebshome.net/\nP: 1024D/AE5467F1 FF22 39F1 6728 89F6 6E6C  2365 7602 F33D AE54 67F1\nD: Embedded PowerPC 4xx: I2C, PIC and random hacks/fixes\nS: Sunnyvale, California 94085\nS: USA\n\nN: Corey Thomas\nE: corey@world.std.com\nW: http://world.std.com/~corey/index.html\nD: Raylink/WebGear wireless LAN device driver (ray_cs) author\nS: 145 Howard St.\nS: Northborough, MA 01532\nS: USA\n\nN: Tommy Thorn\nE: Tommy.Thorn@irisa.fr\nW: http://www.irisa.fr/prive/thorn/index.html\nP: 512/B4AFC909 BC BF 6D B1 52 26 1E D6  E3 2F A3 24 2A 84 FE 21\nD: Device driver hacker (aha1542 & plip)\nS: IRISA\nS: Universit=E9 de Rennes I\nS: F-35042 Rennes Cedex\nS: France\n\nN: Jon Tombs\nE: jon@gte.esi.us.es\nW: http://www.esi.us.es/~jon\nD: NFS mmap()\nD: XF86_S3\nD: Kernel modules\nD: Parts of various other programs (xfig, open, ...)\nS: C/ Federico Garcia Lorca 1 10-A\nS: Sevilla 41005\nS: Spain\n\nN: Linus Torvalds\nE: torvalds@osdl.org\nD: Original kernel hacker\nS: 12725 SW Millikan Way, Suite 400\nS: Beaverton, Oregon 97005\nS: USA\n\nN: Marcelo W. Tosatti\nE: marcelo.tosatti@cyclades.com\nD: Miscellaneous kernel hacker\nD: v2.4 kernel maintainer\nD: Current pc300/cyclades maintainer\nS: Cyclades Corporation\nS: Av Cristovao Colombo, 462. Floresta.\nS: Porto Alegre\nS: Brazil\n\nN: Stefan Traby\nE: stefan@quant-x.com\nD: Minor Alpha kernel hacks\nS: Mitterlasznitzstr. 13\nS: 8302 Nestelbach\nS: Austria\n\nN: Jeff Tranter\nE: tranter@pobox.com\nD: Enhancements to Joystick driver\nD: Author of Sound HOWTO and CD-ROM HOWTO\nD: Author of several small utilities\nD: (bogomips, scope, eject, statserial)\nS: 1 Laurie Court\nS: Kanata, Ontario\nS: Canada K2L 1S2\n\nN: Andrew Tridgell\nE: tridge@samba.org\nW: http://samba.org/tridge/\nD: dosemu, networking, samba\nS: 3 Ballow Crescent\nS: MacGregor A.C.T 2615\nS: Australia\n\nN: Winfried Tr�mper\nE: winni@xpilot.org\nW: http://www.shop.de/~winni/\nD: German HOWTO, Crash-Kurs Linux (German, 100 comprehensive pages)\nD: CD-Writing HOWTO, various mini-HOWTOs\nD: One-week tutorials on Linux twice a year (free of charge)\nD: Linux-Workshop K�ln (aka LUG Cologne, Germany), Installfests\nS: Tacitusstr. 6\nS: D-50968 K�ln\n\nN: Tsu-Sheng Tsao\nE: tsusheng@scf.usc.edu\nD: IGMP(Internet Group Management Protocol) version 2\nS: 2F 14 ALY 31 LN 166 SEC 1 SHIH-PEI RD\nS: Taipei \nS: Taiwan 112\nS: Republic of China\nS: 24335 Delta Drive\nS: Diamond Bar, California 91765\nS: USA\n\nN: Theodore Ts'o\nE: tytso@mit.edu\nD: Random Linux hacker\nD: Maintainer of tsx-11.mit.edu ftp archive\nD: Maintainer of c.o.l.* Usenet<->mail gateway\nD: Author of serial driver\nD: Author of the new e2fsck\nD: Author of job control and system call restart code\nD: Author of ramdisk device driver\nD: Author of loopback device driver\nD: Author of /dev/random driver\nS: MIT Room E40-343\nS: 1 Amherst Street\nS: Cambridge, Massachusetts 02139\nS: USA\n\nN: Simmule Turner\nE: sturner@tele-tv.com\nD: Added swapping to filesystem\nS: 4226 Landgreen Street\nS: Rockville, Maryland 20853\nS: USA\n\nN: Stephen Tweedie\nE: sct@redhat.com\nP: 1024/E7A417AD E2 FE A4 20 34 EC ED FC 7D 7E 67 8D E0 31 D1 69\nP: 1024D/43BE7544 D2A4 8556 08E6 90E7 076C  BA3F 243F 20A4 43BE 7544\nD: Second extended file system developer\nD: General filesystem hacker\nD: kswap vm management code\nS: 44 Campbell Park Crescent\nS: Edinburgh EH13 0HT\nS: United Kingdom\n\nN: Thomas Uhl\nE: uhl@sun1.rz.fh-heilbronn.de\nD: Application programmer\nD: Linux promoter\nD: Author of a German book on Linux\nS: Obere Heerbergstrasse 17\nS: 97078 Wuerzburg\nS: Germany\n\nN: Greg Ungerer\nE: gerg@snapgear.com\nD: uClinux kernel hacker\nD: Port uClinux to the Motorola ColdFire CPU\nD: Author of Stallion multiport serial drivers\nS: SnapGear Inc.\nS: 825 Stanley St\nS: Woolloongabba. QLD. 4102\nS: Australia\n\nN: Jeffrey A. Uphoff\nE: juphoff@transmeta.com\nE: jeff.uphoff@linux.org\nP: 1024/9ED505C5 D7 BB CA AA 10 45 40 1B  16 19 0A C0 38 A0 3E CB\nD: Linux Security/Alert mailing lists' moderator/maintainer.\nD: NSM (rpc.statd) developer.\nD: PAM S/Key module developer.\nD: 'dip' contributor.\nD: AIPS port, astronomical community support.\nS: Transmeta Corporation\nS: 2540 Mission College Blvd.\nS: Santa Clara, CA 95054\nS: USA\n\nN: Matthias Urlichs\nE: smurf@smurf.noris.de\nE: smurf@debian.org\nE: matthias@urlichs.de\nD: Consultant, developer, kernel hacker\nD: In a previous life, worked on Streams/ISDN/BSD networking code for Linux\nS: Schleiermacherstrasse 12\nS: 90491 Nuernberg\nS: Germany\n\nN: Geert Uytterhoeven\nE: geert@linux-m68k.org\nW: http://home.tvd.be/cr26864/\nP: 1024/862678A6 C51D 361C 0BD1 4C90 B275  C553 6EEA 11BA 8626 78A6\nD: m68k/Amiga and PPC/CHRP Longtrail coordinator\nD: Frame buffer device and XF68_FBDev maintainer\nD: m68k IDE maintainer\nD: Amiga Zorro maintainer\nD: Amiga Buddha and Catweasel chipset IDE\nD: Atari Falcon chipset IDE\nD: Amiga Gayle chipset IDE\nD: mipsel NEC DDB Vrc-5074\nS: Emiel Vlieberghlaan 2A/21\nS: B-3010 Kessel-Lo\nS: Belgium\n\nN: Chris Vance\nE: cvance@tislabs.com\nE: cvance@nai.com\nD: portions of the Linux Security Module (LSM) framework and security modules\n\nN: Petr Vandrovec\nE: vandrove@vc.cvut.cz\nD: Small contributions to ncpfs\nD: Matrox framebuffer driver\nS: Chudenicka 8\nS: 10200 Prague 10, Hostivar\nS: Czech Republic\n\nN: Heikki Vatiainen\nE: hessu@cs.tut.fi\nD: Co-author of Multi-Protocol Over ATM (MPOA), some LANE hacks\nS: Tampere University of Technology / Telecom lab\nS: Hermiankatu 12C\nS: FIN-33720 Tampere\nS: Finland\n\nN: Andrew Veliath\nE: andrewtv@usa.net\nD: Turtle Beach MultiSound sound driver\nS: USA\n\nN: Dirk Verworner\nD: Co-author of German book ``Linux-Kernel-Programmierung''\nD: Co-founder of Berlin Linux User Group\n\nN: Patrick Volkerding\nE: volkerdi@ftp.cdrom.com\nD: Produced the Slackware distribution, updated the SVGAlib\nD: patches for ghostscript, worked on color 'ls', etc.\nS: 301 15th Street S.\nS: Moorhead, Minnesota 56560\nS: USA \n\nN: Jos Vos\nE: jos@xos.nl\nW: http://www.xos.nl/\nD: Various IP firewall updates, ipfwadm\nS: X/OS Experts in Open Systems BV\nS: Kruislaan 419\nS: 1098 VA Amsterdam \nS: The Netherlands\n\nN: Jeroen Vreeken\nE: pe1rxq@amsat.org\nW: http://www.chello.nl/~j.vreeken/\nD: SE401 usb webcam driver\nD: ZD1201 usb wireless lan driver\nS: Maastrichterweg 63\nS: 5554 GG Valkenswaard\nS: The Netherlands\n\nN: Peter Shaobo Wang\nE: pwang@mmdcorp.com\nW: http://www.mmdcorp.com/pw/linux\nD: Driver for Interphase ATM (i)Chip SAR adapter card family (x575, x525, x531).\nS: 1513 Brewster Dr.\nS: Carrollton, TX 75010\nS: USA\n\nN: Tim Waugh\nE: tim@cyberelk.net\nD: Co-architect of the parallel-port sharing system\nS: 17 Curling Vale\nS: GUILDFORD\nS: Surrey\nS: GU2 7PJ\nS: United Kingdom\n\nN: Juergen Weigert\nE: jnweiger@immd4.informatik.uni-erlangen.de\nD: The Linux Support Team Erlangen\n\nN: David Weinehall\nE: tao@acc.umu.se\nW: http://www.acc.umu.se/~tao/\nW: http://www.acc.umu.se/~mcalinux/\nD: Fixes for the NE/2-driver\nD: Miscellaneous MCA-support\nD: Cleanup of the Config-files\nS: Axtorpsvagen 40:20\nS: S-903 37  UMEA\nS: Sweden\n\nN: Matt Welsh\nE: mdw@metalab.unc.edu\nW: http://www.cs.berkeley.edu/~mdw\nD: Original Linux Documentation Project coordinator\nD: Author, "Running Linux" (O'Reilly)\nD: Author, "Linux Installation and Getting Started" (LDP) and several HOWTOs\nD: Linuxdoc-SGML formatting system (now SGML-Tools)\nD: Device drivers for various high-speed network interfaces (Myrinet, ATM)\nD: Keithley DAS1200 device driver\nD: Original maintainer of sunsite WWW and FTP sites\nD: Original moderator of c.o.l.announce and c.o.l.answers\nS: Computer Science Division\nS: UC Berkeley\nS: Berkeley, CA 94720-1776\nS: USA\n\nN: Harald Welte\nE: laforge@netfilter.org\nP: 1024D/30F48BFF DBDE 6912 8831 9A53 879B  9190 5DA5 C655 30F4 8BFF\nW: http://gnumonks.org/users/laforge\nD: netfilter: new nat helper infrastructure\nD: netfilter: ULOG, ECN, DSCP target\nD: netfilter: TTL match\nD: netfilter: IPv6 mangle table\nD: netfilter: various other hacks\nS: Berlin\nS: Germany\n\nN: Bill Wendling\nE: wendling@ganymede.isdn.uiuc.edu\nW: http://www.ncsa.uiuc.edu/~wendling/\nD: Various random hacks. Mostly on poll/select logic.\nS: 605 E. Springfield Ave.\nS: Champaign, IL 61820\nS: USA\n\nN: Mike Westall\nD: IBM Turboways 25 ATM Device Driver\nE: westall@cs.clemson.edu\nS: Department of Computer Science\nS: Clemson University\nS: Clemson SC 29634 USA\n\nN: Greg Wettstein\nE: greg@wind.rmcc.com\nD: Filesystem valid flag for MINIX filesystem.\nD: Minor kernel debugging.\nD: Development and maintenance of sysklogd.\nD: Monitoring of development kernels for long-term stability.\nD: Early implementations of Linux in a commercial environment.\nS: Dr. Greg Wettstein, Ph.D.\nS: Oncology Research Division Computing Facility\nS: Roger Maris Cancer Center\nS: 820 4th St. N.\nS: Fargo, North Dakota 58122\nS: USA\n\nN: Steven Whitehouse\nE: SteveW@ACM.org\nW: http://www.chygwyn.com/~steve\nD: Linux DECnet project: http://www.sucs.swan.ac.uk/~rohan/DECnet/index.html\nD: Minor debugging of other networking protocols.\nD: Misc bug fixes and filesystem development\n\nN: Hans-Joachim Widmaier\nE: hjw@zvw.de\nD: AFFS rewrite\nS: Eichenweg 16\nS: 73650 Winterbach\nS: Germany\n\nN: Urban Widmark\nE: urban@svenskatest.se\nD: via-rhine, misc net driver hacking\n\nN: Marco van Wieringen\nE: mvw@planets.elm.net\nD: Author of process accounting and diskquota\nS: Breeburgsingel 12\nS: 2135 CN Hoofddorp\nS: The Netherlands\n\nN: Matthew Wilcox\nE: matthew@wil.cx\nW: ftp://ftp.uk.linux.org/pub/linux/people/willy/\nD: Linux/PARISC hacker.  Filesystem hacker.  Random other hacking.  Custom\nD: PPC port hacking.\n\nN: G\"unter Windau\nE: gunter@mbfys.kun.nl\nD: Some bug fixes in the polling printer driver (lp.c)\nS: University of Nijmegen\nS: Geert-Grooteplein Noord 21\nS: 6525 EZ Nijmegen\nS: The Netherlands\n\nN: Ulrich Windl\nE: Ulrich.Windl@rz.uni-regensburg.de\nP: 1024/E843660D CF D7 43 A1 5A 49 14 25  7C 04 A0 6E 4C 3A AC 6D\nD: Supports NTP on Linux.  Added PPS code.  Fixed bugs in adjtimex().\nS: Alte Regensburger Str. 11a\nS: 93149 Nittenau\nS: Germany\n\nN: Lars Wirzenius\nE: liw@iki.fi\nD: Linux System Administrator's Guide, author, former maintainer\nD: comp.os.linux.announce, former moderator\nD: Linux Documentation Project, co-founder\nD: Original sprintf in kernel\nD: Original kernel README (for version 0.97)\nD: Linux News (electronic magazine, now dead), founder and former editor\nD: Meta-FAQ, originator, former maintainer\nD: INFO-SHEET, former maintainer\nD: Author of the longest-living linux bug\n\nN: Jonathan Woithe\nE: jwoithe@physics.adelaide.edu.au\nW: http://www.physics.adelaide.edu.au/~jwoithe\nD: ALS-007 sound card extensions to Sound Blaster driver\nS: 20 Jordan St\nS: Valley View, SA 5093\nS: Australia\n\nN: Clifford Wolf\nE: god@clifford.at\nW: http://www.clifford.at/\nD: Menuconfig/lxdialog improvement\nS: Foehrengasse 16\nS: A-2333 Leopoldsdorf b. Wien\nS: Austria\n\nN: Roger E. Wolff\nE: R.E.Wolff@BitWizard.nl\nD: Written kmalloc/kfree\nD: Written Specialix IO8+ driver\nD: Written Specialix SX driver\nS: van Bronckhorststraat 12\nS: 2612 XV Delft\nS: The Netherlands\n\nN: David Woodhouse\nE: dwmw2@infradead.org\nD: ARCnet stuff, Applicom board driver, SO_BINDTODEVICE,\nD: some Alpha platform porting from 2.0, Memory Technology Devices,\nD: Acquire watchdog timer, PC speaker driver maintenance,\nD: various other stuff that annoyed me by not working.\nS: c/o Red Hat Engineering\nS: Rustat House\nS: 60 Clifton Road\nS: Cambridge. CB1 7EG\nS: England\n\nN: Chris Wright\nE: chrisw@osdl.org\nD: hacking on LSM framework and security modules.\nS: c/o OSDL\nS: 12725 SW Millikan Way, Suite 400\nS: Beaverton, OR 97005\nS: USA\n\nN: Michal Wronski\nE: wrona@mat.uni.torun.pl\nW: http://www.mat.uni.torun.pl/~wrona\nD: POSIX message queues fs (with K. Benedyczak)\nS: ul. Teczowa 23/12\nS: 80-680 Gdansk-Sobieszewo\nS: Poland\n\nN: Frank Xia\nE: qx@math.columbia.edu\nD: Xiafs filesystem [defunct]\nS: 542 West 112th Street, 5N\nS: New York, New York 10025\nS: USA\n\nN: Victor Yodaiken\nE: yodaiken@fsmlabs.com\nD: RTLinux (RealTime Linux)\nS: POB 1822 \nS: Socorro NM, 87801\nS: USA\n\nN: Hiroshi YOKOTA\nE: yokota@netlab.is.tsukuba.ac.jp\nD: Workbit NinjaSCSI-3/32Bi PCMCIA driver\nD: Workbit NinjaSCSI-32Bi/UDE driver\nS: Japan\n\nN: Hideaki YOSHIFUJI\nE: hideaki@yoshifuji.org\nE: yoshfuji@linux-ipv6.org\nW: http://www.yoshifuji.org/~hideaki/\nP: 1024D/E0620EEA 9022 65EB 1ECF 3AD1 0BDF  80D8 4807 F894 E062 0EEA\nD: IPv6 and other networking related stuff\nD: USAGI/WIDE Project, Keio University\nS: Jeunet Palace Kawasaki #1-201, 10-2, Furukawa-cho, Saiwai-ku\nS: Kawasaki, Kanagawa 212-0025\nS: Japan\n\nN: Eric Youngdale\nE: eric@andante.org\nW: http://www.andante.org\nD: General kernel hacker\nD: SCSI iso9660 and ELF\nS: 6389 Hawk View Lane\nS: Alexandria, Virginia 22312\nS: USA\n\nN: Niibe Yutaka\nE: gniibe@mri.co.jp\nD: PLIP driver\nD: Asynchronous socket I/O in the NET code\nS: Mitsubishi Research Institute, Inc.\nS: ARCO Tower 1-8-1 Shimomeguro Meguro-ku\nS: Tokyo 153\nS: Japan\n\nN: James R. Van Zandt\nE: jrv@vanzandt.mv.com\nP: 1024/E298966D F0 37 4F FD E5 7E C5 E6  F1 A0 1E 22 6F 46 DA 0C\nD: Author and maintainer of the Double Talk speech synthesizer driver\nS: 27 Spencer Drive\nS: Nashua, New Hampshire 03062\nS: USA\n\nN: Orest Zborowski\nE: orestz@eskimo.com\nD: XFree86 and kernel development\nS: 1507 145th Place SE #B5\nS: Bellevue, Washington 98007\nS: USA\n\nN: Richard Zidlicky\nE: rz@linux-m68k.org, rdzidlic@geocities.com\nW: http://www.geocities.com/rdzidlic\nD: Q40 port - see arch/m68k/q40/README\nD: various m68k hacks\nS: Germany\n\nN: Werner Zimmermann\nE: Werner.Zimmermann@fht-esslingen.de\nD: CDROM driver "aztcd" (Aztech/Okano/Orchid/Wearnes)\nS: Flandernstrasse 101\nS: D-73732 Esslingen\nS: Germany\n\nN: Leonard N. Zubkoff\nW: http://www.dandelion.com/Linux/\nD: BusLogic SCSI driver\nD: Mylex DAC960 PCI RAID driver\nD: Miscellaneous kernel fixes\n\nN: Alessandro Zummo\nE: azummo@ita.flashnet.it\nW: http://freepage.logicom.it/azummo/\nD: CMI8330 support is sb_card.c\nD: ISAPnP fixes in sb_card.c\nS: Italy\n\nN: Marc Zyngier\nE: maz@wild-wind.fr.eu.org\nW: http://www.misterjones.org\nD: MD driver\nD: EISA/sysfs subsystem\nS: France\n\n\n# Don't add your name here, unless you really _are_ after Marc\n# alphabetically. Leonard used to be very proud of being the \n# last entry, and he'll get positively pissed if he can't even\n# be second-to-last.  (and this file really _is_ supposed to be\n# in alphabetic order)\n","	This is at least a partial credits-file of people that have\n	contributed to the Linux project.  It is sorted by name and\n	formatted to allow easy grepping and beautification by\n	scripts.  The fields are: name (N), email (E), web-address\n	(W), PGP key ID and fingerprint (P), description (D), and\n	snail-mail address (S).\n	Thanks,\n\n			Linus\n----------\n\nN: Matti Aarnio\nE: mea@nic.funet.fi\nD: Alpha systems hacking, IPv6 and other network related stuff\nD: One of assisting postmasters for vger.kernel.org's lists\nS: (ask for current address)\nS: Finland\n\nN: Dragos Acostachioaie\nE: dragos@iname.com\nW: http://www.arbornet.org/~dragos\nD: /proc/sysvipc\nS: C. Negri 6, bl. D3\nS: Iasi 6600\nS: Romania\n\nN: Monalisa Agrawal\nE: magrawal@nortelnetworks.com\nD: Basic Interphase 5575 driver with UBR and ABR support.\nS: 75 Donald St, Apt 42\nS: Weymouth, MA 02188\n\nN: Dave Airlie\nE: airlied@linux.ie\nW: http://www.csn.ul.ie/~airlied\nD: NFS over TCP patches\nD: in-kernel DRM Maintainer\nS: Longford, Ireland\nS: Sydney, Australia\n\nN: Tigran A. Aivazian\nE: tigran@veritas.com\nW: http://www.moses.uklinux.net/patches\nD: BFS filesystem\nD: Intel IA32 CPU microcode update support\nD: Various kernel patches\nS: United Kingdom\n\nN: Werner Almesberger\nE: werner@almesberger.net\nW: http://www.almesberger.net/\nD: dosfs, LILO, some fd features, ATM, various other hacks here and there\nS: Buenos Aires\nS: Argentina\n\nN: Tim Alpaerts\nE: tim_alpaerts@toyota-motor-europe.com\nD: 802.2 class II logical link control layer,\nD: the humble start of an opening towards the IBM SNA protocols\nS: Klaproosstraat 72 c 10\nS: B-2610 Wilrijk-Antwerpen\nS: Belgium\n\nN: Anton Altaparmakov\nE: aia21@cantab.net\nW: http://www-stu.christs.cam.ac.uk/~aia21/\nD: Author of new NTFS driver, various other kernel hacks.\nS: Christ's College\nS: Cambridge CB2 3BU\nS: United Kingdom\n\nN: C. Scott Ananian\nE: cananian@alumni.princeton.edu\nW: http://www.pdos.lcs.mit.edu/~cananian\nP: 1024/85AD9EED AD C0 49 08 91 67 DF D7  FA 04 1A EE 09 E8 44 B0\nD: Unix98 pty support.\nD: APM update to 1.2 spec.\nD: /devfs hacking.\nS: 7 Kiwi Loop\nS: Howell, NJ 07731\nS: USA\n\nN: Erik Andersen\nE: andersen@codepoet.org\nW: http://www.codepoet.org/\nP: 1024D/30D39057 1BC4 2742 E885 E4DE 9301  0C82 5F9B 643E 30D3 9057\nD: Maintainer of ide-cd and Uniform CD-ROM driver, \nD: ATAPI CD-Changer support, Major 2.1.x CD-ROM update.\nS: 352 North 525 East\nS: Springville, Utah 84663\nS: USA\n\nN: Michael Ang\nE: mang@subcarrier.org\nW: http://www.subcarrier.org/mang\nD: Linux/PA-RISC hacker\nS: 85 Frank St.\nS: Ottawa, Ontario\nS: Canada K2P 0X3\n\nN: H. Peter Anvin\nE: hpa@zytor.com\nW: http://www.zytor.com/~hpa/\nP: 2047/2A960705 BA 03 D3 2C 14 A8 A8 BD  1E DF FE 69 EE 35 BD 74\nD: Author of the SYSLINUX boot loader, maintainer of the linux.* news\nD: hierarchy and the Linux Device List; various kernel hacks\nS: 4390 Albany Drive #46\nS: San Jose, California 95129\nS: USA\n\nN: Andrea Arcangeli\nE: andrea@suse.de\nW: http://www.kernel.org/pub/linux/kernel/people/andrea/\nP: 1024D/68B9CB43 13D9 8355 295F 4823 7C49  C012 DFA1 686E 68B9 CB43\nP: 1024R/CB4660B9 CC A0 71 81 F4 A0 63 AC  C0 4B 81 1D 8C 15 C8 E5\nD: Parport hacker\nD: Implemented a workaround for some interrupt buggy printers\nD: Author of pscan that helps to fix lp/parport bugs\nD: Author of lil (Linux Interrupt Latency benchmark)\nD: Fixed the shm swap deallocation at swapoff time (try_to_unuse message)\nD: VM hacker\nD: Various other kernel hacks\nS: Via Cicalini 26\nS: Imola 40026\nS: Italy\n\nN: Derek Atkins\nE: warlord@MIT.EDU\nD: Linux-AFS Port, random kernel hacker,\nD: VFS fixes (new notify_change in particular)\nD: Moving all VFS access checks into the file systems\nS: MIT Room E15-341\nS: 20 Ames Street\nS: Cambridge, Massachusetts 02139\nS: USA\n\nN: Michel Aubry\nE: giovanni <giovanni@sudfr.com>\nD: Aladdin 1533/1543(C) chipset IDE\nD: VIA MVP-3/TX Pro III chipset IDE\n\nN: Jens Axboe\nE: axboe@suse.de\nD: Linux CD-ROM maintainer, DVD support\nD: elevator + block layer rewrites\nD: highmem I/O support\nD: misc hacking on IDE, SCSI, block drivers, etc\nS: Peter Bangs Vej 258, 2TH\nS: 2500 Valby\nS: Denmark\n\nN: John Aycock\nE: aycock@cpsc.ucalgary.ca\nD: Adaptec 274x driver\nS: Department of Computer Science\nS: University of Calgary\nS: Calgary, Alberta\nS: Canada\n\nN: Miles Bader\nE: miles@gnu.org\nD: v850 port (uClinux)\nS: NEC Corporation\nS: 1753 Shimonumabe, Nakahara-ku\nS: Kawasaki 211-8666\nS: Japan\n\nN: Ralf Baechle\nE: ralf@gnu.org\nP: 1024/AF7B30C1 CF 97 C2 CC 6D AE A7 FE  C8 BA 9C FC 88 DE 32 C3\nD: Linux/MIPS port\nD: Linux/68k hacker\nS: Hauptstrasse 19\nS: 79837 St. Blasien\nS: Germany\n\nN: Krishna Balasubramanian\nE: balasub@cis.ohio-state.edu\nD: Wrote SYS V IPC (part of standard kernel since 0.99.10)\n\nN: Dario Ballabio\nE: ballabio_dario@emc.com\nE: dario.ballabio@tiscalinet.it\nE: dario.ballabio@inwind.it\nD: Author and maintainer of the Ultrastor 14F/34F SCSI driver\nD: Author and maintainer of the EATA ISA/EISA/PCI SCSI driver\nS: EMC Corporation\nS: Milano\nS: Italy\n\nN: Paul Bame\nE: bame@debian.org\nE: bame@puffin.external.hp.com\nE: paul_bame@hp.com\nW: http://www.parisc-linux.org\nD: PA-RISC 32 and 64-bit early boot, firmware interface, interrupts, misc\nS: MS42\nS: Hewlett-Packard\nS: 3404 E Harmony Rd\nS: Fort Collins, CO 80525\n\nN: Arindam Banerji\nE: axb@cse.nd.edu\nD: Contributed ESDI driver routines needed to port LINUX to the PS/2 MCA.\nS: Department of Computer Science & Eng.\nS: University of Notre Dame\nS: Notre Dame, Indiana\nS: USA\n\nN: Greg Banks\nE: gnb@alphalink.com.au\nD: IDT77105 ATM network driver\nD: some SuperH port work\nD: some trivial futzing with kconfig\n\nN: James Banks\nE: james@sovereign.org\nD: TLAN network driver\nD: Logitech Busmouse driver\n\nN: Krzysztof G. Baranowski\nE: kgb@manjak.knm.org.pl\nP: 1024/FA6F16D1 96 D1 1A CF 5F CA 69 EC  F9 4F 36 1F 6D 60 7B DA\nD: Maintainer of the System V file system.\nD: System V fs update for 2.1.x dcache.\nD: Forward ported a couple of SCSI drivers.\nD: Various bugfixes.\nS: ul. Koscielna 12a\nS: 62-300 Wrzesnia\nS: Poland\n\nN: Fred Barnes\nE: frmb2@ukc.ac.uk\nD: Various parport/ppdev hacks and fixes\nS: Computing Lab, The University\nS: Canterbury, KENT\nS: CT2 7NF\nS: England\n\nN: Paul Barton-Davis\nE: pbd@op.net\nD: Driver for WaveFront soundcards (Turtle Beach Maui, Tropez, Tropez+)\nD: Various bugfixes and changes to sound drivers\nS: USA \n\nN: Carlos Henrique Bauer\nE: chbauer@acm.org\nE: bauer@atlas.unisinos.br\nD: Some new sysctl entries for the parport driver.\nD: New sysctl function for handling unsigned longs\nS: Universidade do Vale do Rio dos Sinos - UNISINOS\nS: DSI/IDASI\nS: Av. Unisinos, 950\nS: 93022000 Sao Leopoldo RS\nS: Brazil\n\nN: Peter Bauer\nE: 100136.3530@compuserve.com\nD: Driver for depca-ethernet-board\nS: 69259 Wilhemsfeld\nS: Rainweg 15\nS: Germany\n\nN: Fred Baumgarten\nE: dc6iq@insl1.etec.uni-karlsruhe.de\nE: dc6iq@adacom.org\nE: dc6iq@db0ais.#hes.deu.eu (packet radio)\nD: NET-2 & netstat(8)\nS: Soevener Strasse 11\nS: 53773 Hennef\nS: Germany\n\nN: Donald Becker\nE: becker@cesdis.gsfc.nasa.gov\nD: General low-level networking hacker\nD: Most of the ethercard drivers\nD: Original author of the NFS server\nS: USRA Center of Excellence in Space Data and Information Sciences\nS: Code 930.5, Goddard Space Flight Center\nS: Greenbelt, Maryland 20771\nS: USA\n\nN: Adam Belay\nE: ambx1@neo.rr.com\nD: Linux Plug and Play Support\nS: USA\n\nN: Daniele Bellucci\nE: bellucda@tiscali.it\nD: Various Janitor work.\nW: http://web.tiscali.it/bellucda\nS: Via Delle Palme, 9\nS: Terni 05100\nS: Italy\n\nN: Krzysztof Benedyczak\nE: golbi@mat.uni.torun.pl\nW: http://www.mat.uni.torun.pl/~golbi\nD: POSIX message queues fs (with M. Wronski)\nS: ul. Podmiejska 52\nS: Radunica\nS: 83-000 Pruszcz Gdanski\nS: Poland\n\nN: Randolph Bentson\nE: bentson@grieg.seaslug.org\nW: http://www.aa.net/~bentson/\nP: 1024/39ED5729 5C A8 7A F4 B2 7A D1 3E  B5 3B 81 CF 47 30 11 71\nD: Author of driver for Cyclom-Y and Cyclades-Z async mux\nS: 2322 37th Ave SW\nS: Seattle, Washington 98126-2010\nS: USA\n\nN: Stephen R. van den Berg (AKA BuGless)\nE: berg@pool.informatik.rwth-aachen.de\nD: General kernel, gcc, and libc hacker\nD: Specialisation: tweaking, ensuring portability, tweaking, cleaning,\nD: tweaking and occasionally debugging :-)\nS: Bouwensstraat 22\nS: 6369 BG Simpelveld\nS: The Netherlands\n\nN: Peter Berger\nE: pberger@brimson.com\nW: http://www.brimson.com\nD: Author/maintainer of Digi AccelePort USB driver\nS: 1549 Hiironen Rd.\nS: Brimson, MN  55602\nS: USA\n\nN: Hennus Bergman\nP: 1024/77D50909 76 99 FD 31 91 E1 96 1C  90 BB 22 80 62 F6 BD 63\nD: Author and maintainer of the QIC-02 tape driver\nS: The Netherlands\n\nN: Tomas Berndtsson\nE: tomas@nocrew.org\nW: http://tomas.nocrew.org/\nD: dsp56k device driver\n\nN: Ross Biro\nE: ross.biro@gmail.com\nD: Original author of the Linux networking code\n\nN: Anton Blanchard\nE: anton@samba.org\nW: http://samba.org/~anton/\nP: 1024/8462A731 4C 55 86 34 44 59 A7 99  2B 97 88 4A 88 9A 0D 97\nD: sun4 port, Sparc hacker\n\nN: Hugh Blemings\nE: hugh@misc.nu\nW: http://misc.nu/hugh/\nD: Author and maintainer of the Keyspan USB to Serial drivers\nS: Po Box 234\nS: Belconnen ACT 2616\nS: Australia\n\nN: Philip Blundell\nE: philb@gnu.org\nD: Linux/ARM hacker\nD: Device driver hacker (eexpress, 3c505, c-qcam, ...)\nD: m68k port to HP9000/300\nD: AUN network protocols\nD: Co-architect of the parallel port sharing system\nD: IPv6 netfilter\nS: FutureTV Labs Ltd\nS: Brunswick House, 61-69 Newmarket Rd, Cambridge CB5 8EG\nS: United Kingdom\n\nN: Thomas Bogend�rfer\nE: tsbogend@alpha.franken.de\nD: PCnet32 driver, SONIC driver, JAZZ_ESP driver\nD: newport abscon driver, g364 framebuffer driver\nD: strace for Linux/Alpha\nD: Linux/MIPS hacker\nS: Schafhofstr. 40\nS: 90556 Cadolzburg\nS: Germany\n\nN: Bill Bogstad\nE: bogstad@pobox.com\nD: wrote /proc/self hack, minor samba & dosemu patches\n\nN: Axel Boldt\nE: axel@uni-paderborn.de\nW: http://math-www.uni-paderborn.de/~axel/\nD: Configuration help text support\nD: Linux CD and Support Giveaway List\n\nN: Erik Inge Bols�\nE: knan@mo.himolde.no\nD: Misc kernel hacks\n\nN: Andreas E. Bombe\nE: andreas.bombe@munich.netsurf.de\nW: http://home.pages.de/~andreas.bombe/\nP: 1024/04880A44 72E5 7031 4414 2EB6 F6B4  4CBD 1181 7032 0488 0A44\nD: IEEE 1394 subsystem rewrite and maintainer\nD: Texas Instruments PCILynx IEEE 1394 driver\n\nN: Al Borchers\nE: alborchers@steinerpoint.com\nD: Author/maintainer of Digi AccelePort USB driver\nD: work on usbserial and keyspan_pda drivers\nS: 4912 Zenith Ave. S.\nS: Minneapolis, MN  55410\nS: USA\n\nN: Marc Boucher\nE: marc@mbsi.ca\nP: CA 67 A5 1A 38 CE B6 F2  D5 83 51 03 D2 9C 30 9E  CE D2 DD 65\nD: Netfilter core\nD: IP policy routing by mark\nD: Various fixes (mostly networking)\nS: Montreal, Quebec\nS: Canada\n\nN: Zolt�n B�sz�rm�nyi\nE: zboszor@mail.externet.hu\nD: MTRR emulation with Cyrix style ARR registers, Athlon MTRR support\n\nN: John Boyd\nE: boyd@cis.ohio-state.edu\nD: Co-author of wd7000 SCSI driver\nS: 101 Curl Drive #591\nS: Columbus, Ohio 43210\nS: USA\n\nN: Peter Braam\nE: braam@clusterfs.com\nW: http://www.clusterfs.com/\nD: Coda & InterMezzo filesystems\nS: 181 McNeil\nS: Canmore, AB\nS: Canada, T1W 2R9\n\nN: Ryan Bradetich\nE: rbradetich@uswest.net\nD: Linux/PA-RISC hacker\nS: 1200 Goldenrod Dr.\nS: Nampa, Idaho 83686\n\nN: Derrick J. Brashear\nE: shadow@dementia.org\nW: http://www.dementia.org/~shadow\nP: 512/71EC9367 C5 29 0F BC 83 51 B9 F0  BC 05 89 A0 4F 1F 30 05\nD: Author of Sparc CS4231 audio driver, random Sparc work\nS: 403 Gilmore Avenue\nS: Trafford, Pennsylvania 15085\nS: USA\n\nN: Dag Brattli\nE: dagb@cs.uit.no\nW: http://www.cs.uit.no/~dagb\nD: IrDA Subsystem\nS: 19. Wellington Road\nS: Lancaster, LA1 4DN\nS: UK, England\n\nN: Lars Brinkhoff\nE: lars@nocrew.org\nW: http://lars.nocrew.org/\nD: dsp56k device driver\nD: ptrace proxy in user mode kernel port\nS: Kopmansg 2\nS: 411 13  Goteborg\nS: Sweden\n\nN: Dominik Brodowski\nE: linux@brodo.de\nW: http://www.brodo.de/\nP: 1024D/725B37C6  190F 3E77 9C89 3B6D BECD  46EE 67C3 0308 725B 37C6\nD: parts of CPUFreq code, ACPI bugfixes\nS: Tuebingen, Germany\n\nN: Andries Brouwer\nE: aeb@cwi.nl\nD: random Linux hacker\nS: Bessemerstraat 21\nS: Amsterdam\nS: The Netherlands\n\nN: Zach Brown\nE: zab@zabbo.net\nD: maestro pci sound\n\nN: Gary Brubaker\nE: xavyer@ix.netcom.com\nD: USB Serial Empeg Empeg-car Mark I/II Driver\n\nN: Matthias Bruestle\nE: m@mbsks.franken.de\nD: REINER SCT cyberJack pinpad/e-com USB chipcard reader driver\nS: Germany\n\nN: Adrian Bunk\nE: bunk@stusta.de\nP: 1024D/4F12B400  B29C E71E FE19 6755 5C8A  84D4 99FC EA98 4F12 B400\nD: misc kernel hacking and testing\nS: Grasmeierstrasse 11\nS: 80805 Muenchen\nS: Germany\n\nN: Ray Burr\nE: ryb@nightmare.com\nD: Original author of Amiga FFS filesystem\nS: Orlando, Florida\nS: USA\n\nN: Lennert Buytenhek\nE: buytenh@gnu.org\nD: Rewrite of the ethernet bridging code\nS: Ravenhorst 58B\nS: 2317 AK Leiden\nS: The Netherlands\n\nN: Michael Callahan\nE: callahan@maths.ox.ac.uk\nD: PPP for Linux\nS: The Mathematical Institute\nS: 25-29 St Giles\nS: Oxford\nS: United Kingdom\n\nN: Luiz Fernando N. Capitulino\nE: lcapitulino@terra.com.br\nE: lcapitulino@prefeitura.sp.gov.br\nW: http://www.telecentros.sp.gov.br\nD: Little fixes and a lot of janitorial work\nS: E-GOV Telecentros SP\nS: Brazil\n\nN: Remy Card\nE: Remy.Card@masi.ibp.fr\nE: Remy.Card@linux.org\nD: Extended file system [defunct] designer and developer\nD: Second extended file system designer and developer\nS: Institut Blaise Pascal\nS: 4 Place Jussieu\nS: 75252 Paris Cedex 05\nS: France\n\nN: Ulf Carlsson\nD: SGI Indy audio (HAL2) drivers\nE: ulfc@bun.falkenberg.se\n\nN: Ed Carp\nE: ecarp@netcom.com\nD: uucp, elm, pine, pico port\nD: cron, at(1) developer\nS: 48287 Sawleaf\nS: Fremont, California 94539\nS: USA\n\nN: Florent Chabaud\nE: florent.chabaud@polytechnique.org\nD: software suspend\nS: SGDN/DCSSI/SDS/LTI\nS: 58, Bd Latour-Maubourg\nS: 75700 Paris 07 SP\nS: France\n\nN: Gordon Chaffee\nE: chaffee@cs.berkeley.edu\nW: http://bmrc.berkeley.edu/people/chaffee/\nD: vfat, fat32, joliet, native language support\nS: 3700 Warwick Road\nS: Fremont, California 94555\nS: USA\n\nN: Chih-Jen Chang\nE: chihjenc@scf.usc.edu\nE: chihjen@iis.sinica.edu.tw\nD: IGMP(Internet Group Management Protocol) version 2\nS: 3F, 65 Tajen street\nS: Tamsui town, Taipei county,\nS: Taiwan 251\nS: Republic of China\n\nN: Michael Elizabeth Chastain\nE: mec@shout.net\nD: Configure, Menuconfig, xconfig\n\nN: Raymond Chen\nE: raymondc@microsoft.com\nD: Author of Configure script\nS: 14509 NE 39th Street #1096\nS: Bellevue, Washington 98007\nS: USA\n\nN: Christopher L. Cheney\nE: ccheney@debian.org\nE: ccheney@cheney.cx\nW: http://www.cheney.cx\nP: 1024D/8E384AF2 2D31 1927 87D7 1F24 9FF9  1BC5 D106 5AB3 8E38 4AF2\nD: Vista Imaging usb webcam driver\nS: 314 Prince of Wales\nS: Conroe, TX 77304\nS: USA\n\nN: Stuart Cheshire\nE: cheshire@cs.stanford.edu\nD: Author of Starmode Radio IP (STRIP) driver\nD: Originator of design for new combined interrupt handlers\nS: William Gates Department\nS: Stanford University\nS: Stanford, California 94305\nS: USA\n\nN: Randolph Chung\nE: tausq@debian.org\nD: Linux/PA-RISC hacker\nS: Los Altos, CA 94022\nS: USA\n\nN: Juan Jose Ciarlante\nW: http://juanjox.kernelnotes.org/\nE: jjciarla@raiz.uncu.edu.ar\nE: jjo@mendoza.gov.ar\nD: Network driver alias support\nD: IP masq hashing and app modules\nD: IP masq 2.1 features and bugs\nS: Las Cuevas 2385 - Bo Guemes\nS: Las Heras, Mendoza CP 5539\nS: Argentina\n\nN: Steven P. Cole\nE: scole@lanl.gov\nE: elenstev@mesatop.com\nD: Various build fixes and kernel documentation.\nS: Los Alamos, New Mexico\n\nN: Hamish Coleman\nE: hamish@zot.apana.org.au\nD: SEEQ8005 network driver\nS: 98 Paxton Street\nS: East Malvern, Victoria, 3145\nS: Australia\n\nN: Neil Conway\nE: nconway.list@ukaea.org.uk\nD: Assorted sched/mm titbits\nS: Oxfordshire, UK.\n\nN: Kees Cook\nE: kees@outflux.net\nW: http://outflux.net/\nP: 1024D/17063E6D 9FA3 C49C 23C9 D1BC 2E30  1975 1FFF 4BA9 1706 3E6D\nD: Minor updates to SCSI code for the Communications type\nS: (ask for current address)\nS: USA\n\nN: Mark Corner\nE: mcorner@umich.edu\nW: http://www.eecs.umich.edu/~mcorner/\nD: USB Bluetooth Driver\nS: University of Michigan\nS: Ann Arbor, MI\n\nN: Michael Cornwell\nE: cornwell@acm.org\nD: Original designer and co-author of ATA Taskfile\nD: Kernel module SMART utilities\nS: Santa Cruz, California\nS: USA\n\nN: Alan Cox\nW: http://www.linux.org.uk/diary/\nD: Linux Networking (0.99.10->2.0.29)\nD: Original Appletalk, AX.25, and IPX code\nD: 3c501 hacker\nD: Watchdog timer drivers\nD: Linux/SMP x86 (up to 2.0 only)\nD: Initial Mac68K port\nD: Video4Linux design, bw-qcam and PMS driver ports.\nD: IDE modularisation work\nD: Z85230 driver\nD: Former security contact point (please use vendor-sec@lst.de)\nD: ex 2.2 maintainer\nD: 2.1.x modular sound\nS: c/o Red Hat UK Ltd\nS: Alexandra House\nS: Alexandra Terrace\nS: Guildford, GU1 3DA\nS: United Kingdom\n\nN: Cristian Mihail Craciunescu\nW: http://www.dnt.ro/~cristi/\nE: cristi@dnt.ro\nD: Support for Xircom PGSDB9 (firmware and host driver)\nS: Bucharest\nS: Romania\n\nN: Laurence Culhane\nE: loz@holmes.demon.co.uk\nD: Wrote the initial alpha SLIP code\nS: 81 Hood Street\nS: Northampton\nS: NN1 3QT\nS: United Kingdom\n\nN: Uwe Dannowski\nE: Uwe.Dannowski@ira.uka.de\nW: http://i30www.ira.uka.de/~dannowsk/\nD: FORE PCA-200E driver\nS: University of Karlsruhe\nS: Germany\n\nN: Ray Dassen\nE: jdassen@wi.LeidenUniv.nl\nW: http://www.wi.leidenuniv.nl/~jdassen/\nP: 1024/672D05C1 DD 60 32 60 F7 90 64 80  E7 6F D4 E4 F8 C9 4A 58\nD: Debian GNU/Linux: www.debian.org maintainer, FAQ co-maintainer,\nD: packages testing, nit-picking & fixing. Enjoying BugFree (TM) kernels.\nS: Zuidsingel 10A\nS: 2312 SB  Leiden\nS: The Netherlands\n\nN: David Davies\nE: davies@wanton.lkg.dec.com\nD: Network driver author - depca, ewrk3 and de4x5\nD: Wrote shared interrupt support\nS: Digital Equipment Corporation\nS: 550 King Street\nS: Littleton, Massachusetts 01460\nS: USA\n\nN: Frank Davis\nE: fdavis@si.rr.com\nE: fdavis112@juno.com\nD: Various kernel patches\nS: 8 Lakeview Terr.\nS: Kerhonkson, NY 12446\nS: USA\n\nN: Wayne Davison\nE: davison@borland.com\nD: Second extended file system co-designer\n\nN: Terry Dawson\nE: terry@perf.no.itg.telecom.com.au\nE: terry@albert.vk2ktj.ampr.org (Amateur Radio use only)\nD: trivial hack to add variable address length routing to Rose.\nD: AX25-HOWTO, HAM-HOWTO, IPX-HOWTO, NET-2-HOWTO\nD: ax25-utils maintainer.\n\nN: Helge Deller\nE: deller@gmx.de\nE: hdeller@redhat.de\nD: PA-RISC Linux hacker, LASI-, ASP-, WAX-, LCD/LED-driver\nS: Schimmelsrain 1\nS: D-69231 Rauenberg\nS: Germany\n\nN: Jean Delvare\nE: khali@linux-fr.org\nW: http://khali.linux-fr.org/\nD: Several hardware monitoring drivers\nS: France\n\nN: Peter Denison\nE: peterd@pnd-pc.demon.co.uk\nW: http://www.pnd-pc.demon.co.uk/promise/\nD: Promise DC4030VL caching HD controller drivers\n\nN: Todd J. Derr\nE: tjd@fore.com\nW: http://www.wordsmith.org/~tjd\nD: Random console hacks and other miscellaneous stuff\nS: 3000 FORE Drive\nS: Warrendale, Pennsylvania 15086\nS: USA\n\nN: Martin Devera\nE: devik@cdi.cz\nW: http://luxik.cdi.cz/~devik/qos/\nD: HTB qdisc and random networking hacks\n\nN: Alex deVries\nE: alex@onefishtwo.ca\nD: Various SGI parts, bits of HAL2 and Newport, PA-RISC Linux.\nS: 41.5 William Street\nS: Ottawa, Ontario\nS: K1N 6Z9\nS: CANADA\n\nN: Jeff Dike\nE: jdike@karaya.com\nW: http://user-mode-linux.sourceforge.net\nD: User mode kernel port\nS: 375 Tubbs Hill Rd\nS: Deering NH 03244\nS: USA\n\nN: Matt Domsch\nE: Matt_Domsch@dell.com\nW: http://www.dell.com/linux\nW: http://domsch.com/linux\nD: Linux/IA-64\nD: Dell PowerEdge server, SCSI layer, misc drivers, and other patches\nS: Dell Inc.\nS: One Dell Way\nS: Round Rock, TX  78682\nS: USA\n\nN: Ben Dooks\nE: ben-linux@fluff.org\nE: ben@simtec.co.uk\nW: http://www.fluff.org/ben/\nW: http://www.simtec.co.uk/\nD: Samsung S3C2410/S3C2440 support, general ARM support\nD: Maintaining Simtec Electronics development boards\nS: Simtec Electronics\nS: Avondale Drive\nS: Tarleton\nS: Preston\nS: Lancs\nS: PR4 6AX\nS: United Kingdom\n\nN: John G Dorsey\nE: john+@cs.cmu.edu\nD: ARM Linux ports to Assabet/Neponset, Spot\nS: Department of Electrical and Computer Engineering\nS: Carnegie Mellon University\nS: Pittsburgh, PA  15213\nS: USA\n\nN: Eddie C. Dost\nE: ecd@skynet.be\nD: Linux/Sparc kernel hacker\nD: Linux/Sparc maintainer\nS: Rue de la Chapelle 51\nS: 4850 Moresnet\nS: Belgium\n\nN: Cort Dougan\nE: cort@fsmlabs.com\nW: http://www.fsmlabs.com/linuxppcbk.html\nD: PowerPC\n\nN: Daniel Drake\nE: dsd@gentoo.org\nD: USBAT02 CompactFlash support in usb-storage\nS: UK\n\nN: Oleg Drokin\nE: green@ccssu.crimea.ua\nW: http://www.ccssu.crimea.ua/~green\nD: Cleaning up sound drivers, SA1100 Watchdog.\nS: Skvoznoy per., 14a\nS: Evpatoria\nS: Crimea\nS: UKRAINE, 334320\n\nN: Walt Drummond\nE: drummond@valinux.com\nD: Linux/IA-64\nS: 1382 Bordeaux Drive\nS: Sunnyvale, CA 94087\nS: USA\n\nN: Bruno Ducrot\nE: ducrot@poupinou.org\nD: CPUFreq and ACPI bugfixes.\nS: Mougin, France\n\nN: Don Dugger\nE: n0ano@valinux.com\nD: Linux/IA-64\nS: 1209 Pearl Street, #12\nS: Boulder, CO 80302\nS: USA\n\nN: Thomas Dunbar\nE: tdunbar@vt.edu\nD: TeX & METAFONT hacking/maintenance\nS: Virginia Tech Computing Center\nS: 1700 Pratt Drive\nS: Blacksburg, Virginia 24061\nS: USA\n\nN: Randy Dunlap\nE: rdunlap@xenotime.net\nW: http://www.xenotime.net/linux/linux.html\nW: http://www.linux-usb.org\nD: Linux-USB subsystem, USB core/UHCI/printer/storage drivers\nD: x86 SMP, ACPI, bootflag hacking\nS: (ask for current address)\nS: USA\n\nN: Bob Dunlop\nE: rjd@xyzzy.clara.co.uk\nE: bob.dunlop@farsite.co.uk\nW: www.farsite.co.uk\nD: FarSync card device driver\nS: FarSite Communications Ltd\nS: Tempus Business Centre\nS: 60 Kingsclere Road\nS: Basingstoke       RG21 6XG\nS: UK\n\nN: Cyrus Durgin\nE: cider@speakeasy.org\nW: http://www.speakeasy.org/~cider/\nD: implemented kmod\n\nN: Torsten Duwe\nE: Torsten.Duwe@informatik.uni-erlangen.de\nD: Part-time kernel hacker\nD: The Linux Support Team Erlangen\nS: Grevenbroicher Str. 17\nS: 47807 Krefeld\nS: Germany\n\nN: Tom Dyas\nE: tdyas@eden.rutgers.edu\nD: minor hacks and some sparc port stuff\nS: New Jersey\nS: USA\n\nN: Drew Eckhardt\nE: drew@PoohSticks.ORG\nD: SCSI code\nD: Assorted snippets elsewhere\nD: Boot sector "..." printing\nS: 2037 Walnut #6\nS: Boulder, Colorado 80302\nS: USA\n\nN: Heiko Eissfeldt\nE: heiko@colossus.escape.de heiko@unifix.de\nD: verify_area stuff, generic SCSI fixes\nD: SCSI Programming HOWTO\nD: POSIX.1 compliance testing\nS: Unifix Software GmbH\nS: Bueltenweg 27a\nS: D-38106 Braunschweig\nS: Germany\n\nN: Bjorn Ekwall\nE: bj0rn@blox.se\nW: http://www.pi.se/blox/\nD: Extended support for loadable modules\nD: D-Link pocket adapter drivers\nS: Brevia 1043\nS: S-114 79 Stockholm\nS: Sweden\n\nN: David Engebretsen\nE: engebret@us.ibm.com\nD: Linux port to 64-bit PowerPC architecture\n\nN: Michael Engel\nE: engel@unix-ag.org\nD: DECstation framebuffer drivers\nS: Germany\n\nN: Paal-Kristian Engstad\nE: engstad@intermetrics.com\nD: Kernel smbfs (to mount WfW, NT and OS/2 network drives.)\nS: 17101 Springdale Street #225\nS: Huntington Beach, California 92649\nS: USA\n\nN: Stephane Eranian\nE: eranian@hpl.hp.com\nD: Linux/ia64\nS: 1501 Page Mill Rd, MS 1U17\nS: Palo Alto, CA 94304\nS: USA\n\nN: Johannes Erdfelt\nE: johannes@erdfelt.com\nD: Linux/IA-64 bootloader and kernel goop, USB\nS: 6350 Stoneridge Mall Road\nS: Pleasanton, CA 94588\nS: USA\n\nN: Doug Evans\nE: dje@cygnus.com\nD: Wrote Xenix FS (part of standard kernel since 0.99.15)\n\nN: Riccardo Facchetti\nE: fizban@tin.it\nP: 1024/6E657BB5 AF 22 90 33 78 76 04 8B  AF F9 97 1E B5 E2 65 30\nD: Audio Excel DSP 16 init driver author\nD: libmodem author\nD: Yet Another Micro Monitor port and current maintainer\nD: First ELF-HOWTO author\nD: random kernel hacker\nS: Via Paolo VI n.29\nS: 23900 - LECCO (Lc)\nS: Italy\n\nN: Nils Faerber\nE: nils@kernelconcepts.de\nD: i810 TCO watchdog driver author\nD: Mitsumi LU005 tests and fixes\nD: port and fixes of cs46xx sounddriver\nS: Dreisbachstrasse 24\nS: D-57250 Netphen\nS: Germany\n\nN: Rik Faith\nE: faith@acm.org\nD: Future Domain TMC-16x0 SCSI driver (author)\nD: APM driver (early port)\nD: DRM drivers (author of several)\n\nN: J�nos Farkas\nE: chexum@shadow.banki.hu\nD: romfs, various (mostly networking) fixes\nP: 1024/F81FB2E1 41 B7 E4 E6 3E D4 A6 71  6D 9C F3 9F F2 BF DF 6E\nS: Madar�sz Viktor utca 25\nS: 1131 Budapest\nS: Hungary\n\nN: Ben Fennema\nE: bfennema@falcon.csc.calpoly.edu\nW: http://www.csc.calpoly.edu/~bfennema\nD: UDF filesystem\nS: (ask for current address)\nS: USA\n\nN: J�rgen Fischer\nE: fischer@norbit.de (=?iso-8859-1?q?J=FCrgen?= Fischer)\nD: Author of Adaptec AHA-152x SCSI driver\nS: Schulstra�e 18\nS: 26506 Norden\nS: Germany\n\nN: Jeremy Fitzhardinge\nE: jeremy@goop.org\nW: http://www.goop.org/~jeremy\nD: author of userfs filesystem\nD: Improved mmap and munmap handling\nD: General mm minor tidyups\nD: autofs v4 maintainer\nS: 987 Alabama St\nS: San Francisco\nS: CA, 94110\nS: USA\n\nN: Ralf Flaxa\nE: rfflaxa@immd4.informatik.uni-erlangen.de\nD: The Linux Support Team Erlangen\nD: Creator of LST distribution\nD: Author of installation tool LISA\nS: Pfitznerweg 6\nS: 74523 Schwaebisch Hall\nS: Germany\n\nN: Lawrence Foard\nE: entropy@world.std.com\nD: Floppy track reading, fs code\nS: 217 Park Avenue, Suite 108\nS: Worcester, Massachusetts 01609\nS: USA\n\nN: Karl Fogel\nE: kfogel@cs.oberlin.edu\nD: Contributor, Linux User's Guide\nS: 1123 North Oak Park Avenue\nS: Oak Park, Illinois 60302\nS: USA\n\nN: Daniel J. Frasnelli\nE: dfrasnel@alphalinux.org\nW: http://www.alphalinux.org/\nP: 1024/3EF87611 B9 F1 44 50 D3 E8 C2 80  DA E5 55 AA 56 7C 42 DA\nD: DEC Alpha hacker \nD: Miscellaneous bug squisher\n\nN: Jim Freeman\nE: jfree@sovereign.org\nW: http://www.sovereign.org/\nD: Initial GPL'd Frame Relay driver\nD: Dynamic PPP devices\nD: Sundry modularizations (PPP, IPX, ...) and fixes\n\nN: Bob Frey\nE: bobf@advansys.com\nD: AdvanSys SCSI driver\nS: 1150 Ringwood Court\nS: San Jose, California 95131\nS: USA\n\nN: Fernando Fuganti\nE: fuganti@conectiva.com.br\nE: fuganti@netbank.com.br\nD: random kernel hacker, ZF MachZ Watchdog driver\nS: Conectiva S.A.\nS: R. Tocantins, 89 - Cristo Rei\nS: 80050-430 - Curitiba - Paran�\nS: Brazil\n\nN: Kumar Gala\nE: kumar.gala@freescale.com\nD: Embedded PowerPC 6xx/7xx/74xx/82xx/83xx/85xx support\nS: Austin, Texas 78729\nS: USA\n\nN: Nigel Gamble\nE: nigel@nrg.org\nD: Interrupt-driven printer driver\nD: Preemptible kernel\nS: 120 Alley Way\nS: Mountain View, California 94040\nS: USA\n\nN: Jeff Garzik\nE: jgarzik@pobox.com\n\nN: Jacques Gelinas\nE: jacques@solucorp.qc.ca\nD: Author of the Umsdos file system\nS: 1326 De Val-Brillant\nS: Laval, Quebec\nS: Canada H7Y 1V9\n\nN: David Gentzel\nE: gentzel@telerama.lm.com\nD: Original BusLogic driver and original UltraStor driver\nS: Whitfield Software Services\nS: 600 North Bell Avenue, Suite 160\nS: Carnegie, Pennsylvania 15106-4304\nS: USA\n\nN: Philip Gladstone\nE: philip@raptor.com\nD: Kernel / timekeeping stuff\n  \nN: Jan-Benedict Glaw\nE: jbglaw@lug-owl.de\nD: SRM environment driver (for Alpha systems)\nP: 1024D/8399E1BB 250D 3BCF 7127 0D8C A444  A961 1DBD 5E75 8399 E1BB\n\nN: Thomas Gleixner\nE: tglx@linutronix.de\nD: NAND flash hardware support, JFFS2 on NAND flash\n\nN: Richard E. Gooch\nE: rgooch@atnf.csiro.au\nD: parent process death signal to children\nD: prctl() syscall\nD: /proc/mtrr support to manipulate MTRRs on Intel P6 family\nD: Device FileSystem (devfs)\nS: CSIRO Australia Telescope National Facility\nS: P.O. Box 76, Epping\nS: New South Wales, 2121\nS: Australia\n\nN: Carlos E. Gorges \nE: carlos@techlinux.com.br\nD: fix smp support on cmpci driver\nP: 2048G/EA3C4B19 FF31 33A6 0362 4915 B7EB  E541 17D0 0379 EA3C 4B19\nS: Brazil\n\nN: Dmitry S. Gorodchanin\nE: pgmdsg@ibi.com\nD: RISCom/8 driver, misc kernel fixes.\nS: 4 Main Street\nS: Woodbridge, Connecticut 06525\nS: USA\n\nN: Paul Gortmaker\nE: p_gortmaker@yahoo.com\nD: Author of RTC driver & several net drivers, Ethernet & BootPrompt Howto.\nD: Made support for modules, ramdisk, generic-serial, etc. optional.\nD: Transformed old user space bdflush into 1st kernel thread - kflushd.\nD: Many other patches, documentation files, mini kernels, utilities, ...\n\nN: Masanori GOTO\nE: gotom@debian.or.jp\nD: Workbit NinjaSCSI-32Bi/UDE driver\nS: Japan\n\nN: John E. Gotts\nE: jgotts@linuxsavvy.com\nD: kernel hacker\nS: 8124 Constitution Apt. 7\nS: Sterling Heights, Michigan 48313\nS: USA\n\nN: William Greathouse\nE: wgreathouse@smva.com\nE: wgreathouse@myfavoritei.com\nD: Current Belkin USB Serial Adapter F5U103 hacker\nD: Kernel hacker, embedded systems\nS: 7802 Fitzwater Road   \nS: Brecksville, OH  44141-1334\nS: USA\n\nN: Tristan Greaves\nE: Tristan.Greaves@icl.com\nE: tmg296@ecs.soton.ac.uk\nW: http://www.ecs.soton.ac.uk/~tmg296\nD: Miscellaneous ipv4 sysctl patches\nS: 15 Little Mead\nS: Denmead\nS: Hampshire\nS: PO7 6HS\nS: United Kingdom\n\nN: Michael A. Griffith\nE: grif@cs.ucr.edu\nW: http://www.cs.ucr.edu/~grif\nD: Loopback speedup, qlogic SCSI hacking, VT_LOCKSWITCH\nS: Department of Computer Science\nS: University of California, Riverside\nS: Riverside, California 92521-0304\nS: USA\n\nN: Hans Grobler\nE: grobh@sun.ac.za\nD: Various AX.25/ROSE/NETROM + hamradio driver patches\nD: Various X.25/LABP + driver patches\nD: Misc kernel fixes and updates\nS: Department of Electronic Engineering\nS: University of Stellenbosch\nS: Stellenbosch, Western Cape\nS: South Africa\n\nN: Grant Grundler\nE: grundler@parisc-linux.org\nW: http://obmouse.sourceforge.net/\nW: http://www.parisc-linux.org/\nD: obmouse - rewrote Olivier Florent's Omnibook 600 "pop-up" mouse driver\nD: PA-RISC - Interrupt/PCI HBA/IOMMU author and architect\nS: Mountain View, California\nS: USA\n\nN: Grant Guenther\nE: grant@torque.net\nW: http://www.torque.net/linux-pp.html\nD: original author of ppa driver for parallel port ZIP drive\nD: original architect of the parallel-port sharing scheme \nD: PARIDE subsystem: drivers for parallel port IDE & ATAPI devices\nS: 44 St. Joseph Street, Suite 506\nS: Toronto, Ontario, M4Y 2W4\nS: Canada\n\nN: Richard G�nther\nE: rguenth@tat.physik.uni-tuebingen.de\nW: http://www.tat.physik.uni-tuebingen.de/~rguenth\nP: 2048/2E829319 2F 83 FC 93 E9 E4 19 E2  93 7A 32 42 45 37 23 57\nD: binfmt_misc\nS: 72074 T�bingen\nS: Germany\n\nN: Justin Guyett\nE: jguyett@andrew.cmu.edu\nD: via-rhine net driver hacking\n\nN: Danny ter Haar\nE: dth@cistron.nl\nD: /proc/cpuinfo, reboot on panic , kernel pre-patch tester ;)\nS: Cistron\nS: PO-Box 297\nS: 2400 AG, Alphen aan den Rijn\nS: The Netherlands\n\nN: Enver Haase\nE: ehaase@inf.fu-berlin.de\nW: http://www.inf.fu-berlin.de/~ehaase\nD: Driver for the Commodore A2232 serial board\n\nN: Bruno Haible\nE: haible@ma2s2.mathematik.uni-karlsruhe.de\nD: SysV FS, shm swapping, memory management fixes\nS: 17 rue Danton\nS: F - 94270 Le Kremlin-Bic�tre\nS: France\n\nN: Greg Hankins\nE: gregh@cc.gatech.edu\nD: fixed keyboard driver to separate LED and locking status\nS: 25360 Georgia Tech Station\nS: Atlanta, Georgia 30332\nS: USA\n\nN: Brad Hards\nE: bradh@frogmouth.net\nD: Various USB bits, other minor patches\n\nN: Angelo Haritsis\nE: ah@computer.org\nD: kernel patches (serial, watchdog)\nD: xringd, vuzkern, greekXfonts\nS: 77 Clarence Mews\nS: London SE16 1GD\nS: United Kingdom\n\nN: Jan Harkes\nE: jaharkes@cs.cmu.edu\nW: http://www.coda.cs.cmu.edu/\nD: Coda file system\nS: Computer Science Department\nS: Carnegie Mellon University\nS: 5000 Forbes Avenue\nS: Pittsburgh, Pennsylvania 15213\nS: USA\n\nN: Kai Harrekilde-Petersen\nE: kai.harrekilde@get2net.dk\nD: Original author of the ftape-HOWTO, i82078 fdc detection code.\n\nN: Bart Hartgers\nE: bart@etpmod.phys.tue.nl\nD: MTRR emulation with Centaur MCRs\nS: Gen Stedmanstraat 212\nS: 5623 HZ Eindhoven\nS: The Netherlands\n\nN: Andrew Haylett\nE: ajh@primag.co.uk\nD: Selection mechanism\n\nN: Andre Hedrick\nE: andre@linux-ide.org\nE: andre@linuxdiskcert.org\nW: http://www.linux-ide.org/\nW: http://www.linuxdiskcert.org/\nD: Random SMP kernel hacker...\nD: Uniform Multi-Platform E-IDE driver\nD: Active-ATA-Chipset maddness..........\nD: Ultra DMA 133/100/66/33 w/48-bit Addressing\nD: ATA-Disconnect, ATA-TCQ\nD: ATA-Smart Kernel Daemon\nD: Serial ATA\nD: ATA Command Block and Taskfile\nS: Linux ATA Development (LAD)\nS: Concord, CA\n\nN: Jochen Hein\nE: jochen@jochen.org\nP: 1024/4A27F015 25 72 FB E3 85 9F DE 3B  CB 0A DA DA 40 77 05 6C\nP: 1024D/77D4FC9B F5C5 1C20 1DFC DEC3 3107  54A4 2332 ADFC 77D4 FC9B\nD: National Language Support\nD: Linux Internationalization Project\nD: German Localization for Linux and GNU software\nS: Kriemhildring 12a\nS: 65795 Hattersheim am Main\nS: Germany\n\nN: Christoph Hellwig\nE: hch@infradead.org\nD: all kinds of driver, filesystem & core kernel hacking\nD: freevxfs driver\nD: sysvfs maintainer\nD: chief codingstyle nitpicker\nS: Ampferstr. 50 / 4\nS: 6020 Innsbruck\nS: Austria\n\nN: Richard Henderson\nE: rth@twiddle.net\nE: rth@cygnus.com\nD: Alpha hacker, kernel and userland\nS: 1668 California St.\nS: Mountain View, California 94041\nS: USA\n\nN: Benjamin Herrenschmidt\nE: benh@kernel.crashing.org\nD: Various parts of PPC/PPC64 & PowerMac\nS: 312/107 Canberra Avenue\nS: Griffith, ACT 2603 \nS: Australia\n\nN: Sebastian Hetze\nE: she@lunetix.de\nD: German Linux Documentation,\nD: Organization of German Linux Conferences\nS: Danckelmannstr. 48\nS: 14059 Berlin\nS: Germany\n\nN: David Hinds\nE: dahinds@users.sourceforge.net\nW: http://tao.stanford.edu/~dhinds\nD: PCMCIA and CardBus stuff, PCMCIA-HOWTO, PCMCIA client drivers\nS: 2019 W. Middlefield Rd #1\nS: Mountain View, CA  94043\nS: USA\n\nN: Michael Hipp\nE: hippm@informatik.uni-tuebingen.de\nD: drivers for the racal ni5210 & ni6510 Ethernet-boards\nS: Talstr. 1\nS: D - 72072 Tuebingen\nS: Germany\n\nN: Richard Hirst\nE: richard@sleepie.demon.co.uk\nE: rhirst@linuxcare.com\nW: http://www.sleepie.demon.co.uk/\nD: linux-m68k VME support\nD: PA-RISC port, scsi and network drivers\nD: 53c700/53c710 driver author, 82596 driver maintainer\nS: United Kingdom\n\nN: Jauder Ho\nE: jauderho@carumba.com\nW: http://www.carumba.com/\nD: bug toaster (A1 sauce makes all the difference)\nD: Random linux hacker\n\nN: Tim Hockin\nE: thockin@hockin.org\nW: http://www.hockin.org/~thockin\nD: Natsemi ethernet\nD: Cobalt Networks (x86) support\nD: This-and-That\n\nN: Dirk Hohndel\nE: hohndel@suse.de\nD: The XFree86[tm] Project\nD: USB mouse maintainer\nS: SuSE Rhein/Main AG\nS: Mergenthalerallee 45-47\nS: 65760 Eschborn\nS: Germany\n\nN: Kenji Hollis\nE: kenji@bitgate.com\nW: http://www.bitgate.com/\nD: Berkshire PC Watchdog Driver\nD: Small/Industrial Driver Project\n\nN: Nick Holloway\nE: Nick.Holloway@pyrites.org.uk\nW: http://www.pyrites.org.uk/\nP: 1024/36115A04 F4E1 3384 FCFD C055 15D6  BA4C AB03 FBF8 3611 5A04\nD: Occasional Linux hacker...\nS: (ask for current address)\nS: United Kingdom\n\nN: Ron Holt\nE: ron@holt.org\nE: rholt@netcom.com\nW: http://www.holt.org/\nW: http://www.ronholt.com/\nD: Kernel development\nD: Kernel LDT modifications to support Wabi and Wine\nS: Holtron Internetics, Inc.\nS: 998 East 900 South, Suite 26\nS: Provo, Utah 84606-5607\nS: USA\n\nN: Marcel Holtmann\nE: marcel@holtmann.org\nW: http://www.holtmann.org\nD: Maintainer of the Linux Bluetooth Subsystem\nD: Author and maintainer of the various Bluetooth HCI drivers\nD: Author and maintainer of the CAPI message transport protocol driver\nD: Author and maintainer of the Bluetooth HID protocol driver\nD: Various other Bluetooth related patches, cleanups and fixes\nS: Germany\n\nN: Rob W. W. Hooft\nE: hooft@EMBL-Heidelberg.DE\nD: Shared libs for graphics-tools and for the f2c compiler\nD: Some kernel programming on the floppy and sound drivers in early days\nD: Some other hacks to get different kinds of programs to work for linux\nS: Panoramastrasse 18\nS: D-69126 Heidelberg\nS: Germany\n\nN: Christopher Horn\nE: chorn@warwick.net\nD: Miscellaneous sysctl hacks\nS: 36 Mudtown Road\nS: Wantage, New Jersey 07461\nS: USA\n\nN: Harald Hoyer\nE: harald.hoyer@parzelle.de\nW: http://parzelle.de/\nD: ip_masq_quake\nD: md boot support\nS: Hohe Strasse 30\nS: D-70176 Stuttgart\nS: Germany\n\nN: Jan Hubicka\nE: hubicka@freesoft.cz\nE: hubicka@suse.cz\nW: http://www.paru.cas.cz/~hubicka/\nD: Random kernel tweaks and fixes.\nS: Dukelskych bojovniku 1944\nS: Tabor 390 03\nS: Czech Republic\n\nN: David Huggins-Daines\nE: dhd@debian.org\nE: dhd@eradicator.org\nE: dhd@cepstral.com\nD: PA-RISC port\nD: Nubus subsystem\nD: Generic 68k Macintosh framebuffer driver\nD: STI framebuffer tweaks\nD: LTPC driver tweaks\nS: 110 S. 12th St., Apt. A\nS: Pittsburgh, PA 15203-1250\nS: USA\n\nN: Gareth Hughes\nE: gareth.hughes@acm.org\nD: Pentium III FXSR, SSE support\nD: Author/maintainer of most DRM drivers (especially ATI, MGA)\nD: Core DRM templates, general DRM and 3D-related hacking\nS: No fixed address\n\nN: Kenn Humborg\nE: kenn@wombat.ie\nD: Mods to loop device to support sparse backing files\nS: Ballinagard\nS: Roscommon\nS: Ireland\n\nN: Michael Hunold\nE: michael@mihu.de\nW: http://www.mihu.de/linux/\nD: Generic saa7146 video4linux-2 driver core,\nD: Driver for the "Multimedia eXtension Board", "dpc7146",\nD: "Hexium Orion", "Hexium Gemini"\n\nN: Miguel de Icaza Amozurrutia\nE: miguel@nuclecu.unam.mx\nD: Linux/SPARC team, Midnight Commander maintainer\nS: Avenida Copilco 162, 22-1003\nS: Mexico, DF\nS: Mexico\n\nN: Ian Jackson\nE: iwj10@cus.cam.ac.uk\nE: ijackson@nyx.cs.du.edu\nD: FAQ maintainer and poster of the daily postings\nD: FSSTND group member\nD: Debian core team member and maintainer of several Debian packages\nS: 2 Lexington Close\nS: Cambridge\nS: CB3 0DS\nS: United Kingdom\n\nN: Andreas Jaeger\nE: aj@suse.de\nD: Various smaller kernel fixes\nD: glibc developer\nS: Gottfried-Kinkel-Str. 18\nS: D 67659 Kaiserslautern\nS: Germany\n\nN: Mike Jagdis\nE: jaggy@purplet.demon.co.uk\nE: Mike.Jagdis@purplet.demon.co.uk\nD: iBCS personalities, socket and X interfaces, x.out loader, syscalls...\nD: Purple Distribution maintainer\nD: UK FidoNet support\nD: ISODE && PP\nD: Kernel and device driver hacking\nS: 280 Silverdale Road\nS: Earley\nS: Reading\nS: RG6 2NU\nS: United Kingdom\n\nN: Jakub Jelinek\nE: jakub@redhat.com\nW: http://sunsite.mff.cuni.cz/~jj\nP: 1024/0F7623C5 53 95 71 3C EB 73 99 97  02 49 40 47 F9 19 68 20\nD: Sparc hacker, SILO, mc\nD: Maintain sunsite.mff.cuni.cz\nS: K osmidomkum 723\nS: 160 00 Praha 6\nS: Czech Republic\n\nN: Niels Kristian Bech Jensen\nE: nkbj@image.dk\nW: http://www.image.dk/~nkbj\nD: Miscellaneous kernel updates and fixes.\nS: Dr. Holsts Vej 34, lejl. 164\nS: DK-8230 �byh�j\nS: Denmark\n\nN: Michael K. Johnson\nE: johnsonm@redhat.com\nW: http://www.redhat.com/~johnsonm\nP: 1024/4536A8DD 2A EC 88 08 40 64 CE D8  DD F8 12 2B 61 43 83 15\nD: The Linux Documentation Project\nD: Kernel Hackers' Guide\nD: Procps\nD: Proc filesystem\nD: Maintain tsx-11.mit.edu\nD: LP driver\nS: 201 Howell Street, Apartment 1C\nS: Chapel Hill, North Carolina 27514-4818\nS: USA\n\nN: Dave Jones\nE: davej@codemonkey.org.uk\nW: http://www.codemonkey.org.uk\nD: x86 errata/setup maintenance.\nD: AGPGART driver.\nD: CPUFREQ maintenance.\nD: Backport/Forwardport merge monkey.\nD: Various Janitor work.\nS: United Kingdom\n\nN: Martin Josfsson\nE: gandalf@wlug.westbo.se\nP: 1024D/F6B6D3B1 7610 7CED 5C34 4AA6 DBA2  8BE1 5A6D AF95 F6B6 D3B1\nD: netfilter: SAME target\nD: netfilter: helper target\nD: netfilter: various other hacks\nS: Ronneby\nS: Sweden\n\nN: Ani Joshi\nE: ajoshi@shell.unixbox.com\nD: fbdev hacking\n\nN: Jesper Juhl\nE: juhl-lkml@dif.dk\nD: Various small janitor fixes, cleanups etc.\nS: Lemnosvej 1, 3.tv\nS: 2300 Copenhagen S\nS: Denmark\n\nN: Jozsef Kadlecsik\nE: kadlec@blackhole.kfki.hu\nP: 1024D/470DB964 4CB3 1A05 713E 9BF7 FAC5  5809 DD8C B7B1 470D B964\nD: netfilter: TCP window tracking code\nD: netfilter: raw table\nD: netfilter: iprange match\nD: netfilter: new logging interfaces\nD: netfilter: various other hacks\nS: Tata\nS: Hungary\n\nN: Bernhard Kaindl\nE: bkaindl@netway.at\nE: edv@bartelt.via.at\nD: Author of a menu based configuration tool, kmenu, which \nD: is the predecessor of 'make menuconfig' and 'make xconfig'.\nD: digiboard driver update(modularisation work and 2.1.x upd)\nS: Tallak 95\nS: 8103 Rein\nS: Austria\n\nN: Mitsuru Kanda\nE: mk@linux-ipv6.org\nE: mk@isl.rdc.toshiba.co.jp\nE: mk@karaba.org\nW: http://www.karaba.org/~mk/\nP: 1024D/2EC7E30D 4DC3 949B 5A6C F0D6 375F  4472 8888 A8E1 2EC7 E30D\nD: IPsec, IPv6\nD: USAGI/WIDE Project, TOSHIBA CORPORATION\nS: 2-47-8, Takinogawa,\nS: Kita, Tokyo 114-0023\nS: Japan\n\nN: Jan Kara\nE: jack@atrey.karlin.mff.cuni.cz\nE: jack@suse.cz\nD: Quota fixes for 2.2 kernel\nD: Quota fixes for 2.3 kernel\nD: Few other fixes in filesystem area (buffer cache, isofs, loopback)\nW: http://atrey.karlin.mff.cuni.cz/~jack/\nS: Krosenska' 543\nS: 181 00 Praha 8\nS: Czech Republic\n\nN: Jan "Yenya" Kasprzak\nE: kas@fi.muni.cz\nD: Author of the COSA/SRP sync serial board driver.\nD: Port of the syncppp.c from the 2.0 to the 2.1 kernel.\nP: 1024/D3498839 0D 99 A7 FB 20 66 05 D7  8B 35 FC DE 05 B1 8A 5E\nW: http://www.fi.muni.cz/~kas/\nS: c/o Faculty of Informatics, Masaryk University\nS: Botanicka' 68a\nS: 602 00 Brno\nS: Czech Republic\n\nN: Jakob Kemi\nE: jakob.kemi@telia.com\nD: V4L W9966 Webcam driver\nS: Forsbyv�gen 33\nS: 74143 Knivsta\nS: Sweden\n\nN: Fred N. van Kempen\nE: waltje@linux.com\nD: NET-2\nD: Drivers\nD: Kernel cleanups\nS: Korte Heul 95\nS: 1403 ND  BUSSUM\nS: The Netherlands\n\nN: Karl Keyte\nE: karl@koft.com\nD: Disk usage statistics and modifications to line printer driver\nS: 26a Sheen Road\nS: Richmond\nS: Surrey\nS: TW9 1AE\nS: United Kingdom\n\nN: Marko Kiiskila\nE: marko@iprg.nokia.com\nD: Author of ATM Lan Emulation\nS: 660 Harvard Ave. #7\nS: Santa Clara, CA 95051\nS: USA\n\nN: Russell King\nE: rmk@arm.linux.org.uk\nD: Linux/arm integrator, maintainer & hacker\nD: Acornfb, Cyber2000fb author\nS: Burgh Heath, Tadworth, Surrey.\nS: England\n\nN: Olaf Kirch\nE: okir@monad.swb.de\nD: Author of the Linux Network Administrators' Guide\nS: Kattreinstr 38\nS: D-64295\nS: Germany\n\nN: Andi Kleen\nE: ak@muc.de\nD: network hacker, syncookies\nS: Schwalbenstr. 96\nS: 85551 Ottobrunn\nS: Germany\n\nN: Ian Kluft\nE: ikluft@thunder.sbay.org\nW: http://www.kluft.com/~ikluft/\nD: NET-1 beta testing & minor patches, original Smail binary packages for\nD: Slackware and Debian, vote-taker for 2nd comp.os.linux reorganization\nS: Post Office Box 611311\nS: San Jose, California 95161-1311\nS: USA\n\nN: Thorsten Knabe\nE: Thorsten Knabe <tek@rbg.informatik.tu-darmstadt.de>\nE: Thorsten Knabe <tek01@hrzpub.tu-darmstadt.de>\nW: http://www.student.informatik.tu-darmstadt.de/~tek\nW: http://www.tu-darmstadt.de/~tek01\nP: 1024/3BC8D885 8C 29 C5 0A C0 D1 D6 F4  20 D4 2D AB 29 F6 D0 60\nD: AD1816 sound driver\nS: Am Bergfried 10\nS: 63225 Langen\nS: Germany\n\nN: Alain L. Knaff\nE: Alain.Knaff@lll.lu\nD: floppy driver\nS: 19, rue Jean l'Aveugle\nS: L-1148 Luxembourg-City\nS: Luxembourg\n\nN: Gerd Knorr\nW: http://bytesex.org\nE: kraxel@bytesex.org\nE: kraxel@suse.de\nD: video4linux, bttv, vesafb, some scsi, misc fixes\n\nN: Harald Koenig\nE: koenig@tat.physik.uni-tuebingen.de\nD: XFree86 (S3), DCF77, some kernel hacks and fixes\nS: Koenigsberger Str. 90\nS: D-72336 Balingen\nS: Germany\n\nN: Rudolf Koenig\nE: rfkoenig@immd4.informatik.uni-erlangen.de\nD: The Linux Support Team Erlangen\n\nN: Andreas Koensgen\nE: ajk@iehk.rwth-aachen.de\nD: 6pack driver for AX.25\n\nN: Harald Koerfgen\nE: hkoerfg@web.de\nD: Linux/MIPS kernel hacks and fixes,\nD: DECstation port, Sharp Mobilon port\nS: D-50931 Koeln\nS: Germany\n\nN: Willy Konynenberg\nE: willy@xos.nl\nW: http://www.xos.nl/\nD: IP transparent proxy support\nS: X/OS Experts in Open Systems BV\nS: Kruislaan 419\nS: 1098 VA Amsterdam \nS: The Netherlands\n\nN: Gene Kozin\nE: 74604.152@compuserve.com\nW: http://www.sangoma.com\nD: WAN Router & Sangoma WAN drivers\nS: Sangoma Technologies Inc.\nS: 7170 Warden Avenue, Unit 2\nS: Markham, Ontario\nS: L3R 8B2\nS: Canada\n\nN: Maxim Krasnyansky\nE: maxk@qualcomm.com\nW: http://vtun.sf.net\nW: http://bluez.sf.net\nD: Author of the Universal TUN/TAP driver\nD: Author of the Linux Bluetooth Subsystem (BlueZ)\nD: Various other kernel patches, cleanups and fixes\nS: 2213 La Terrace Circle\nS: San Jose, CA 95123\nS: USA\n\nN: Andreas S. Krebs\nE: akrebs@altavista.net\nD: CYPRESS CY82C693 chipset IDE, Digital's PC-Alpha 164SX boards\n\nN: Greg Kroah-Hartman\nE: greg@kroah.com\nE: gregkh@suse.de\nW: http://www.kroah.com/linux/\nD: USB Serial Converter driver framework, USB Handspring Visor driver\nD: ConnectTech WHITEHeat USB driver, Generic USB Serial driver\nD: USB I/O Edgeport driver, USB Serial IrDA driver\nD: USB Bluetooth driver, USB Skeleton driver\nD: bits and pieces of USB core code.\nD: PCI Hotplug core, PCI Hotplug Compaq driver modifications\nD: portions of the Linux Security Module (LSM) framework\nD: parts of the driver core, debugfs.\n\nN: Russell Kroll\nE: rkroll@exploits.org\nW: http://www.exploits.org/\nD: V4L radio cards: radio-aztech (new), others (bugfixes/features)\nD: Loopback block device: dynamic sizing ("max_loop" as module)\nS: Post Office Box 691886\nS: San Antonio, Texas 78269-1886\nS: USA\n\nN: Denis O. Kropp\nE: dok@directfb.org\nD: NeoMagic framebuffer driver\nS: Badensche Str. 46\nS: 10715 Berlin\nS: Germany\n\nN: Andrzej M. Krzysztofowicz\nE: ankry@mif.pg.gda.pl\nD: Some 8-bit XT disk driver and devfs hacking \nD: Aladdin 1533/1543(C) chipset IDE\nD: PIIX chipset IDE\nS: ul. Matemblewska 1B/10\nS: 80-283 Gdansk\nS: Poland\n\nN: Gero Kuhlmann\nE: gero@gkminix.han.de\nD: mounting root via NFS\nS: Donarweg 4\nS: D-30657 Hannover\nS: Germany\n\nN: Markus Kuhn\nE: mskuhn@cip.informatik.uni-erlangen.de\nW: http://wwwcip.informatik.uni-erlangen.de/user/mskuhn\nD: Unicode, real-time, time, standards\nS: Schlehenweg 9\nS: D-91080 Uttenreuth\nS: Germany\n\nN: Gabor Kuti\nM: seasons@falcon.sch.bme.hu\nM: seasons@makosteszta.sote.hu\nD: Original author of software suspend\n\nN: Jaroslav Kysela\nE: perex@suse.cz\nW: http://www.perex.cz\nD: Original Author and Maintainer for HP 10/100 Mbit Network Adapters\nD: ISA PnP\nS: Sindlovy Dvory 117\nS: 370 01  Ceske Budejovice\nS: Czech Republic\n\nN: Bas Laarhoven\nE: sjml@xs4all.nl\nD: Loadable modules and ftape driver\nS: J. Obrechtstr 23\nS: NL-5216 GP 's-Hertogenbosch\nS: The Netherlands\n\nN: Savio Lam\nE: lam836@cs.cuhk.hk\nD: Author of the dialog utility, foundation\nD: for Menuconfig's lxdialog.\n\nN: Christoph Lameter\nE: christoph@lameter.com\nD: Digiboard PC/Xe and PC/Xi, Digiboard EPCA\nD: Early protocol filter for bridging code\nD: Bug fixes\n\nN: Paul Laufer\nE: paul@laufernet.com\nD: Soundblaster driver fixes, ISAPnP quirk\nS: California, USA\n\nN: Tom Lees\nE: tom@lpsg.demon.co.uk\nW: http://www.lpsg.demon.co.uk/\nP: 1024/87D4D065 2A 66 86 9D 02 4D A6 1E  B8 A2 17 9D 4F 9B 89 D6\nD: Original author and current maintainer of\nD: PnP code.\n\nN: David van Leeuwen\nE: david@tm.tno.nl\nD: Philips/LMS cm206 cdrom driver, generic cdrom driver\nS: Scheltemalaan 14\nS: 3817 KS Amersfoort\nS: The Netherlands\n\nN: Volker Lendecke\nE: vl@kki.org\nD: Kernel smbfs (to mount WfW, NT and OS/2 network drives.)\nD: NCP filesystem support (to mount NetWare volumes)\nS: Von Ossietzky Str. 12\nS: 37085 Goettingen\nS: Germany\n\nN: Kevin Lentin\nE: kevinl@cs.monash.edu.au\nD: NCR53C400/T130B SCSI extension to NCR5380 driver.\nS: 18 Board Street\nS: Doncaster VIC 3108\nS: Australia\n\nN: Hans Lermen\nE: lermen@elserv.ffm.fgan.de\nD: Author of the LOADLIN Linux loader, hacking on boot stuff\nD: Coordinator of DOSEMU releases\nS: Am Muehlenweg 38\nS: D53424 Remagen\nS: Germany\n\nN: Colin Leroy\nE: colin@colino.net\nW: http://www.geekounet.org/\nD: PowerMac adt746x fan driver\nD: Random fixing of various drivers (macintosh, usb, sound)\nS: Toulouse\nS: France\n\nN: Achim Leubner\nE: achim_leubner@adaptec.com\nD: GDT Disk Array Controller/Storage RAID controller driver\nS: ICP vortex GmbH\nS: Neckarsulm\nS: Germany\n\nN: Phil Lewis\nE: beans@bucket.ualr.edu\nD: Promised to send money if I would put his name in the source tree.\nS: Post Office Box 371\nS: North Little Rock, Arkansas 72115\nS: USA\n\nN: Stephan Linz\nE: linz@mazet.de\nE: Stephan.Linz@gmx.de\nW: http://www.crosswinds.net/~tuxer\nD: PCILynx patch to work with 1394a PHY and without local RAM\nS: (ask for current address)\nS: Germany\n\nN: Christophe Lizzi\nE: lizzi@cnam.fr\nW: http://cedric.cnam.fr/personne/lizzi\nD: FORE Systems 200E-series ATM network driver, sparc64 port of ATM\nS: CNAM, Laboratoire CEDRIC\nS: 292, rue St-Martin\nS: 75141 Paris Cedex 03\nS: France\n\nN: Siegfried "Frieder" Loeffler (dg1sek)\nE: floeff@tunix.mathematik.uni-stuttgart.de, fl@LF.net\nW: http://www.mathematik.uni-stuttgart.de/~floeff\nD: Busmaster driver for HP 10/100 Mbit Network Adapters\nS: University of Stuttgart, Germany and\nS: Ecole Nationale Superieure des Telecommunications, Paris\n\nN: Jamie Lokier\nE: jamie@imbolc.ucc.ie\nD: Reboot-through-BIOS for broken 486 motherboards\nD: Some parport fixes\nS: 11 Goodson Walk\nS: Marston\nS: Oxford\nS: OX3 0HX\nS: United Kingdom\n\nN: Mark Lord\nE: mlord@pobox.com\nD: EIDE driver, hd.c support\nD: EIDE PCI and bus-master DMA support\nD: Hard Disk Parameter (hdparm) utility\nS: 33 Ridgefield Cr\nS: Nepean, Ontario\nS: Canada K2H 6S3\n\nN: Warner Losh\nE: imp@village.org\nD: Linux/MIPS Deskstation support, Provided OI/OB for Linux\nS: 8786 Niwot Road\nS: Niwot, Colorado 80503\nS: USA\n\nN: Robert M. Love\nE: rml@tech9.net\nE: rml@novell.com\nD: misc. kernel hacking and debugging\nS: Cambridge, MA 02139\nS: USA\n\nN: Martin von L�wis\nE: loewis@informatik.hu-berlin.de\nD: script binary format\nD: NTFS driver\n\nN: H.J. Lu\nE: hjl@gnu.ai.mit.edu\nD: GCC + libraries hacker\n\nN: Michal Ludvig\nE: michal@logix.cz\nE: michal.ludvig@asterisk.co.nz\nW: http://www.logix.cz/michal\nP: 1024D/C45B2218 1162 6471 D391 76E0 9F99  29DA 0C3A 2509 C45B 2218\nD: VIA PadLock driver\nD: Netfilter pkttype module\nS: Asterisk Ltd.\nS: Auckland\nS: New Zealand\n\nN: Tuomas J. Lukka\nE: Tuomas.Lukka@Helsinki.FI\nD: Original dual-monitor patches\nD: Console-mouse-tracking patches\nS: Puistokaari 1 E 18\nS: 00200 Helsinki\nS: Finland\n\nN: Daniel J. Maas\nE: dmaas@dcine.com\nW: http://www.maasdigital.com\nD: dv1394\n\nN: Hamish Macdonald\nE: hamishm@lucent.com\nD: Linux/68k port\nS: 32 Clydesdale Avenue\nS: Kanata, Ontario\nS: Canada K2M-2G7\n\nN: Peter MacDonald\nD: SLS distribution\nD: Initial implementation of VC's, pty's and select()\n\nN: Pavel Machek\nE: pavel@ucw.cz\nE: pavel@suse.cz\nD: Softcursor for vga, hypertech cdrom support, vcsa bugfix, nbd\nD: sun4/330 port, capabilities for elf, speedup for rm on ext2, USB,\nD: work on suspend-to-ram/disk, killing duplicates from ioctl32\nS: Volkova 1131\nS: 198 00 Praha 9\nS: Czech Republic\n\nN: Paul Mackerras\nE: paulus@samba.org\nD: PPP driver\nD: Linux for PowerPC\nD: Linux port for PCI Power Macintosh\n\nN: Pat Mackinlay\nE: pat@it.com.au\nD: 8 bit XT hard disk driver\nD: Miscellaneous ST0x, TMC-8xx and other SCSI hacking\nS: 25 McMillan Street\nS: Victoria Park 6100\nS: Australia\n\nN: James B. MacLean\nE: macleajb@ednet.ns.ca\nW: http://www.ednet.ns.ca/~macleajb/dosemu.html\nD: Former Coordinator of DOSEMU releases\nD: Program in DOSEMU\nS: PO BOX 220, HFX. CENTRAL\nS: Halifax, Nova Scotia\nS: Canada B3J 3C8\n\nN: Kai M�kisara\nE: Kai.Makisara@kolumbus.fi\nD: SCSI Tape Driver\n\nN: Asit Mallick\nE: asit.k.mallick@intel.com\nD: Linux/IA-64\nS: 2200 Mission College Blvd\nS: Santa Clara, CA 95052\nS: USA\n\nN: Petko Manolov\nE: petkan@users.sourceforge.net\nD: USB ethernet pegasus/pegasus-II driver\nD: USB ethernet rtl8150 driver\nD: optimizing i[45]86 string routines\nD: i386 task switching hacks\nS: 482 Shadowgraph Dr.\nS: San Jose, CA  95110\nS: USA\n\nN: Martin Mares\nE: mj@ucw.cz\nW: http://www.ucw.cz/~mj/\nD: BIOS video mode handling code\nD: MOXA C-218 serial board driver\nD: Network autoconfiguration\nD: PCI subsystem\nD: Random kernel hacking\nS: Kankovskeho 1241\nS: 182 00 Praha 8\nS: Czech Republic\n\nN: John A. Martin\nE: jam@acm.org\nW: http://www.tux.org/~jam/\nP: 1024/04456D53 9D A3 6C 6B 88 80 8A 61  D7 06 22 4F 95 40 CE D2\nP: 1024/3B986635 5A61 7EE6 9E20 51FB 59FB  2DA5 3E18 DD55 3B98 6635\nD: FSSTND contributor\nD: Credit file compilator\n\nN: Kevin E. Martin\nE: martin@cs.unc.edu\nD: Developed original accelerated X servers included in XFree86\nD: XF86_Mach64\nD: XF86_Mach32\nD: XF86_Mach8\nD: XF86_8514\nD: cfdisk (curses based disk partitioning program)\n\nN: John S. Marvin\nE: jsm@fc.hp.com\nD: PA-RISC port\nS: Hewlett Packard\nS: MS 42\nS: 3404 E. Harmony Road\nS: Fort Collins, CO 80528\n\nN: Torben Mathiasen\nE: torben.mathiasen@compaq.com\nE: torben@kernel.dk\nW: http://tlan.kernel.dk\nD: ThunderLAN maintainer\nD: ThunderLAN updates and other kernel fixes.\nS: Bremensgade 29, st.th\nS: 2300 Copenhagen S\nS: Denmark\n\nN: Claudio S. Matsuoka\nE: claudio@conectiva.com\nE: claudio@helllabs.org\nW: http://helllabs.org/~claudio\nD: V4L, OV511 driver hacks\nS: Conectiva S.A.\nS: R. Tocantins 89\nS: 80050-430  Curitiba PR\nS: Brazil\n\nN: Heinz Mauelshagen\nE: mge@EZ-Darmstadt.Telekom.de\nD: Logical Volume Manager\nS: Bartningstr. 12\nS: 64289 Darmstadt\nS: Germany \n\nN: Mark W. McClelland\nE: mmcclell@bigfoot.com\nE: mark@alpha.dyndns.org\nW: http://alpha.dyndns.org/ov511/\nP: 1024D/357375CC 317C 58AC 1B39 2AB0 AB96  EB38 0B6F 731F 3573 75CC\nD: OV511 driver\nS: (address available on request)\nS: USA\n\nN: Patrick McHardy\nE: kaber@trash.net\nP: 1024D/12155E80 B128 7DE6 FF0A C2B2 48BE  AB4C C9D4 964E 1215 5E80\nD: netfilter: endless number of bugfixes\nD: netfilter: CLASSIFY target\nD: netfilter: addrtype match\nD: tc: HFSC scheduler\nS: Freiburg\nS: Germany\n\nN: Mike McLagan\nE: mike.mclagan@linux.org\nW: http://www.invlogic.com/~mmclagan\nD: DLCI/FRAD drivers for Sangoma SDLAs\nS: Innovative Logic Corp\nS: Post Office Box 1068\nS: Laurel, Maryland 20732\nS: USA\n\nN: Bradley McLean\nE: brad@bradpc.gaylord.com\nD: Device driver hacker\nD: General kernel debugger\nS: 249 Nichols Avenue\nS: Syracuse, New York 13206\nS: USA\n\nN: Dirk Melchers\nE: dirk@merlin.nbg.sub.org\nD: 8 bit XT hard disk driver for OMTI5520\nS: Schloessleinsgasse 31\nS: D-90453 Nuernberg\nS: Germany\n\nN: Arnaldo Carvalho de Melo\nE: acme@conectiva.com.br\nE: acme@kernel.org\nE: acme@gnu.org\nW: http://bazar2.conectiva.com.br/~acme\nW: http://advogato.org/person/acme\nP: 1024D/9224DF01 D5DF E3BB E3C8 BCBB F8AD  841A B6AB 4681 9224 DF01\nD: wanrouter hacking\nD: misc Makefile, Config.in, drivers and network stacks fixes\nD: IPX & LLC network stacks maintainer\nD: Cyclom 2X synchronous card driver\nD: wl3501 PCMCIA wireless card driver\nD: i18n for minicom, net-tools, util-linux, fetchmail, etc\nS: Conectiva S.A.\nS: R. Tocantins, 89 - Cristo Rei\nS: 80050-430 - Curitiba - Paran�\nS: Brazil\n\nN: Karsten Merker\nE: merker@linuxtag.org\nD: DECstation framebuffer drivers\nS: Germany\n\nN: Michael Meskes\nE: meskes@debian.org\nP: 1024/04B6E8F5 6C 77 33 CA CC D6 22 03  AB AB 15 A3 AE AD 39 7D\nD: Kernel hacker. PostgreSQL hacker. Software watchdog daemon.\nD: Maintainer of several Debian packages\nS: Th.-Heuss-Str. 61 \nS: D-41812 Erkelenz\nS: Germany\n\nN: Nigel Metheringham\nE: Nigel.Metheringham@ThePLAnet.net\nP: 1024/31455639 B7 99 BD B8 00 17 BD 46  C1 15 B8 AB 87 BC 25 FA\nD: IP Masquerading work and minor fixes\nS: Planet Online\nS: The White House, Melbourne Street, LEEDS\nS: LS2 7PS, United Kingdom\n\nN: Craig Metz\nE: cmetz@inner.net\nD: Some of PAS 16 mixer & PCM support, inet6-apps\n\nN: William (Bill) Metzenthen\nE: billm@suburbia.net\nD: Author of the FPU emulator.\nD: Minor kernel hacker for other lost causes (Hercules mono, etc).\nS: 22 Parker Street\nS: Ormond\nS: Victoria 3163\nS: Australia\n\nN: Pauline Middelink\nE: middelin@polyware.nl\nD: General low-level bug fixes, /proc fixes, identd support\nD: Author of IP masquerading\nD: Zoran ZR36120 Video For Linux driver\nS: Boterkorfhoek 34\nS: 7546 JA  Enschede\nS: Netherlands\n\nN: David S. Miller\nE: davem@davemloft.net\nD: Sparc and blue box hacker\nD: Vger Linux mailing list co-maintainer\nD: Linux Emacs elf/qmagic support + other libc/gcc things\nD: Yee bore de yee bore! ;-)\nS: 575 Harrison St. #103\nS: San Francisco, CA 94105\nS: USA\n\nN: Rick Miller\nE: rdmiller@execpc.com\nW: http://www.execpc.com/~rdmiller/\nD: Original Linux Device Registrar (Major/minor numbers)\nD: au-play, bwBASIC\nS: S78 W16203 Woods Road\nS: Muskego, Wisconsin 53150\nS: USA\n\nN: Harald Milz\nE: hm@seneca.linux.de\nD: Linux Projects Map, Linux Commercial-HOWTO\nD: general Linux publicity in Germany, vacation port\nD: UUCP and CNEWS binary packages for LST\nS: Editorial Board iX Mag\nS: Helstorfer Str. 7\nS: D-30625 Hannover\nS: Germany\n\nN: Corey Minyard\nE: minyard@wf-rch.cirr.com\nE: minyard@mvista.com\nW: http://home.attbi.com/~minyard\nD: Sony CDU31A CDROM Driver\nD: IPMI driver\nD: Various networking fixes long ago\nD: Original ppc_md work\nD: Shared zlib\nS: 7406 Wheat Field Rd\nS: Garland, Texas 75044\nS: USA\n\nN: Kazunori Miyazawa\nE: miyazawa@linux-ipv6.org\nE: Kazunori.Miyazawa@jp.yokogawa.com\nE: kazunori@miyazawa.org\nW: http://www.miyazawa.org/~kazunori/\nD: IPsec, IPv6\nD: USAGI/WIDE Project, Yokogawa Electric Corporation\nS: 2-20-4-203, Nakacho,\nS: Musashino, Tokyo 180-0006\nS: Japan\n\nN: Patrick Mochel\nE: mochel@osdl.org\nE: mochelp@infinity.powertie.org\nD: PCI Power Management, ACPI work\nS: 12725 SW Millikan Way, Suite 400\nS: Beaverton, Oregon 97005\nS: USA\n\nN: Eberhard Moenkeberg\nE: emoenke@gwdg.de\nD: CDROM driver "sbpcd" (Matsushita/Panasonic/Soundblaster)\nS: Ruhstrathoehe 2 b.\nS: D-37085 Goettingen\nS: Germany\n\nN: Thomas Molina\nE: tmolina@cablespeed.com\nD: bug fixes, documentation, minor hackery\n\nN: James Morris\nE: jmorris@intercode.com.au\nW: http://www.intercode.com.au/jmorris/\nD: Netfilter, Linux Security Modules (LSM).\nS: PO Box 707\nS: Spit Junction NSW 2088\nS: Australia\n\nN: David Mosberger-Tang\nE: davidm@hpl.hp.com if IA-64 related, else David.Mosberger@acm.org\nD: Linux/Alpha and Linux/ia64\nS: 35706 Runckel Lane\nS: Fremont, California 94536\nS: USA\n\nN: Sam Mosel\nE: sam.mosel@computer.org\nD: Wacom Intuos USB Support\nS: 22 Seaview St\nS: Fullarton 5063\nS: South Australia\n\nN. Wolfgang Muees\nE: wolfgang@iksw-muees.de\nD: Auerswald USB driver\n\nN: Ian A. Murdock\nE: imurdock@gnu.ai.mit.edu\nD: Creator of Debian distribution\nS: 30 White Tail Lane\nS: Lafayette, Indiana 47905\nS: USA\n\nN: Scott Murray\nE: scottm@somanetworks.com\nE: scott@spiteful.org\nD: OPL3-SA2, OPL3-SA3 sound driver\nD: CompactPCI hotplug core\nD: Ziatech ZT5550 and generic CompactPCI hotplug drivers\nS: Toronto, Ontario\nS: Canada\n\nN: Zwane Mwaikambo\nE: zwane@linuxpower.ca\nW: http://function.linuxpower.ca\nD: Various driver hacking\nD: Lowlevel x86 kernel hacking\nD: General debugging\nS: (ask for current address)\nS: Tanzania\n\nN: Trond Myklebust\nE: trond.myklebust@fys.uio.no\nD: current NFS client hacker.\nS: Dagaliveien 31e\nS: N-0391 Oslo\nS: Norway\n\nN: Johan Myreen\nE: jem@iki.fi\nD: PS/2 mouse driver writer etc.\nS: Dragonvagen 1 A 13\nS: FIN-00330 Helsingfors\nS: Finland\n\nN: Matija Nalis\nE: mnalis@jagor.srce.hr\nE: mnalis@voyager.hr\nD: Maintainer of the Umsdos file system\nS: Listopadska 7\nS: 10000 Zagreb\nS: Croatia\n\nN: Jonathan Naylor\nE: g4klx@g4klx.demon.co.uk\nE: g4klx@amsat.org\nW: http://zone.pspt.fi/~jsn/\nD: AX.25, NET/ROM and ROSE amateur radio protocol suites\nD: CCITT X.25 PLP and LAPB.\nS: 24 Castle View Drive\nS: Cromford\nS: Matlock\nS: Derbyshire DE4 3RL\nS: United Kingdom\n\nN: Ian S. Nelson\nE: ian.nelson@echostar.com\nD: Minor mmap and ide hacks\nS: 1370 Atlantis Ave.\nS: Lafayette CO, 80026\nS: USA\n\nN: Russell Nelson\nE: nelson@crynwr.com\nW: http://www.crynwr.com/~nelson\nP: 1024/83942741 FF 68 EE 27 A0 5A AA C3  F5 DC 05 62 BD 5B 20 2F\nD: Author of cs89x0, maintainer of kernel changelog through 1.3.3\nD: Wrote many packet drivers, from which some Ethernet drivers are derived.\nS: 521 Pleasant Valley Road\nS: Potsdam, New York 13676\nS: USA\n\nN: Dave Neuer\nE: dave.neuer@pobox.com\nD: Helped implement support for Compaq's H31xx series iPAQs\nD: Other mostly minor tweaks & bugfixes\n\nN: Michael Neuffer\nE: mike@i-Connect.Net\nE: neuffer@goofy.zdv.uni-mainz.de\nW: http://www.i-Connect.Net/~mike/\nD: Developer and maintainer of the EATA-DMA SCSI driver\nD: Co-developer EATA-PIO SCSI driver\nD: /proc/scsi and assorted other snippets \nS: Zum Schiersteiner Grund 2\nS: 55127 Mainz\nS: Germany\n\nN: Gustavo Niemeyer\nE: niemeyer@conectiva.com\nW: https://moin.conectiva.com.br/GustavoNiemeyer\nD: wl3501 PCMCIA wireless card initial support for wireless extensions in 2.4\nS: Conectiva S.A.\nS: R. Tocantins 89\nS: 80050-430  Curitiba PR\nS: Brazil\n\nN: David C. Niemi\nE: niemi@tux.org\nW: http://www.tux.org/~niemi/\nD: Assistant maintainer of Mtools, fdutils, and floppy driver\nD: Administrator of Tux.Org Linux Server, http://www.tux.org\nS: 2364 Old Trail Drive\nS: Reston, Virginia 20191\nS: USA\n\nN: Fredrik Noring\nE: noring@nocrew.org\nW: http://www.lysator.liu.se/~noring/\nD: dsp56k device driver\n\nN: Michael O'Reilly\nE: michael@iinet.com.au\nE: oreillym@tartarus.uwa.edu.au\nD: Wrote the original dynamic sized disk cache stuff. I think the only\nD: part that remains is the GFP_KERNEL et al #defines. :)\nS: 192 Nichsolson Road\nS: Subiaco, 6008\nS: Perth, Western Australia\nS: Australia\n\nN: Greg Page\nE: gpage@sovereign.org\nD: IPX development and support\n\nN: David Parsons\nE: orc@pell.chi.il.us\nD: improved memory detection code.\n\nN: Ivan Passos\nE: ivan@cyclades.com\nD: Author of the Cyclades-PC300 synchronous card driver\nD: Maintainer of the Cyclom-Y/Cyclades-Z asynchronous card driver\nS: Cyclades Corp\nS: 41934 Christy St\nS: Fremont, CA 94538\nS: USA\n\nN: Mikulas Patocka\nE: mikulas@artax.karlin.mff.cuni.cz\nW: http://artax.karlin.mff.cuni.cz/~mikulas/\nP: 1024/BB11D2D5 A0 F1 28 4A C4 14 1E CF  92 58 7A 8F 69 BC A4 D3\nD: Read/write HPFS filesystem\nS: Weissova 8\nS: 644 00 Brno\nS: Czech Republic\n\nN: Vojtech Pavlik\nE: vojtech@suse.cz\nD: Joystick driver\nD: arcnet-hardware readme\nD: Minor ARCnet hacking\nD: USB (HID, ACM, Printer ...)\nS: Ucitelska 1576\nS: Prague 8\nS: 182 00 Czech Republic\n\nN: Barak A. Pearlmutter\nE: bap@cs.unm.edu\nW: http://www.cs.unm.edu/~bap/\nP: 512/602D785D 9B A1 83 CD EE CB AD 93  20 C6 4C B7 F5 E9 60 D4\nD: Author of mark-and-sweep GC integrated by Alan Cox\nS: Computer Science Department\nS: FEC 313\nS: University of New Mexico\nS: Albuquerque, New Mexico 87131\nS: USA\n\nN: Avery Pennarun\nE: apenwarr@worldvisions.ca\nW: http://www.worldvisions.ca/~apenwarr/\nD: ARCnet driver\nD: "make xconfig" improvements\nD: Various minor hacking\nS: RR #5, 497 Pole Line Road\nS: Thunder Bay, Ontario\nS: CANADA P7C 5M9\n\nN: Yuri Per\nE: yuri@pts.mipt.ru\nD: Some smbfs fixes\nS: Demonstratsii 8-382\nS: Tula 300000\nS: Russia\n\nN: Gordon Peters\nE: GordPeters@smarttech.com\nD: Isochronous receive for IEEE 1394 driver (OHCI module).\nD: Bugfixes for the aforementioned.\nS: Calgary, Alberta\nS: Canada\n\nN: Johnnie Peters\nE: jpeters@phx.mcd.mot.com\nD: Motorola PowerPC changes for PReP\nS: 2900 S. Diable Way\nS: Tempe, Arizona 85282\nS: USA\n\nN: Kirk Petersen\nE: kirk@speakeasy.org\nW: http://www.speakeasy.org/~kirk/\nD: implemented kmod\nD: modularized BSD Unix domain sockets\n\nN: Martin Kasper Petersen\nE: mkp@mkp.net\nD: PA-RISC port\nD: XFS file system\nD: kiobuf based block I/O work\nS: 314 Frank St.\nS: Ottawa, Ontario\nS: Canada K2P 0X8\n\nN: Mikael Pettersson\nE: mikpe@csd.uu.se\nW: http://www.csd.uu.se/~mikpe/\nD: Miscellaneous fixes\n\nN: Reed H. Petty\nE: rhp@draper.net\nW: http://www.draper.net\nD: Loop device driver extensions\nD: Encryption transfer modules (no export)\nS: Post Office Box 1815\nS: Harrison, Arkansas  72602-1815\nS: USA\n\nN: Kai Petzke\nE: petzke@teltarif.de\nW: http://www.teltarif.de/\nP: 1024/B42868C1 D9 59 B9 98 BB 93 05 38  2E 3E 31 79 C3 65 5D E1\nD: Driver for Laser Magnetic Storage CD-ROM\nD: Some kernel bug fixes\nD: Port of the database Postgres\nD: Book: "Linux verstehen und anwenden" (Hanser-Verlag)\nS: Triftstra=DFe 55\nS: 13353 Berlin\nS: Germany\n\nN: Emanuel Pirker\nE: epirker@edu.uni-klu.ac.at\nD: AIC5800 IEEE 1394, RAW I/O on 1394\nD: Starter of Linux1394 effort\nS: ask per mail for current address\n\nN: Nicolas Pitre\nE: nico@cam.org\nD: StrongARM SA1100 support integrator & hacker\nD: Xscale PXA architecture\nD: unified SMC 91C9x/91C11x ethernet driver (smc91x)\nS: Montreal, Quebec, Canada\n\nN: Ken Pizzini\nE: ken@halcyon.com\nD: CDROM driver "sonycd535" (Sony CDU-535/531)\n\nN: Stelian Pop\nE: stelian@popies.net\nP: 1024D/EDBB6147 7B36 0E07 04BC 11DC A7A0  D3F7 7185 9E7A EDBB 6147\nD: sonypi, meye drivers, mct_u232 usb serial hacks\nS: Paris, France\n\nN: Pete Popov\nE: pete_popov@yahoo.com\nD: Linux/MIPS AMD/Alchemy Port and mips hacking and debugging\nS: San Jose, CA 95134\nS: USA\n\nN: Matt Porter\nE: mporter@kernel.crashing.org\nD: Motorola PowerPC PReP support\nD: cPCI PowerPC support\nD: Embedded PowerPC 4xx/6xx/7xx/74xx support\nS: Chandler, Arizona 85249\nS: USA\n\nN: Frederic Potter \nE: fpotter@cirpack.com\nD: Some PCI kernel support\n\nN: Rui Prior\nE: rprior@inescn.pt\nD: ATM device driver for NICStAR based cards\n\nN: Stefan Probst\nE: sp@caldera.de\nD: The Linux Support Team Erlangen, 1993-97\nS: Caldera (Deutschland) GmbH\nS: Lazarettstrasse 8\nS: 91054 Erlangen\nS: Germany\n\nN: Giuliano Procida\nE: myxie@debian.org,gprocida@madge.com\nD: Madge Ambassador driver (Collage 155 Server ATM adapter)\nD: Madge Horizon driver (Collage 25 and 155 Client ATM adapters)\nP: 1024/93898735 D3 9E F4 F7 6D 8D 2F 3A  38 BA 06 7C 2B 33 43 7D\nS: Madge Networks\nS: Framewood Road\nS: Wexham SL3 6PJ\nS: United Kingdom\n\nN: Daniel Quinlan\nE: quinlan@pathname.com\nW: http://www.pathname.com/~quinlan/\nD: FSSTND coordinator; FHS editor\nD: random Linux documentation, patches, and hacks\nS: 4390 Albany Drive #41A\nS: San Jose, California 95129\nS: USA\n\nN: Juan Quintela\nE: quintela@fi.udc.es\nD: Memory Management hacking\nS: LFCIA\nS: Departamento de Computaci�n\nS: Universidade da Coru�a\nS: E-15071\nS: A Coru�a\nS: Spain\n\nN: Augusto Cesar Radtke\nE: bishop@sekure.org\nW: http://bishop.sekure.org\nD: {copy,get,put}_user calls updates\nD: Miscellaneous hacks\nS: R. Otto Marquardt, 226 - Garcia\nS: 89020-350 Blumenau - Santa Catarina\nS: Brazil\n\nN: Goutham Rao\nE: goutham.rao@intel.com\nD: Linux/IA-64\nS: 2200 Mission College Blvd\nS: Santa Clara, CA 95052\nS: USA\n\nN: Eric S. Raymond\nE: esr@thyrsus.com\nW: http://www.tuxedo.org/~esr/\nD: terminfo master file maintainer\nD: Editor: Installation HOWTO, Distributions HOWTO, XFree86 HOWTO\nD: Author: fetchmail, Emacs VC mode, Emacs GUD mode\nS: 6 Karen Drive\nS: Malvern, Pennsylvania 19355\nS: USA\n\nN: Stefan Reinauer\nE: stepan@linux.de\nW: http://www.freiburg.linux.de/~stepan/\nD: Modularization of some filesystems\nD: /proc/sound, minor fixes\nS: Schlossbergring 9\nS: 79098 Freiburg\nS: Germany\n\nN: Joerg Reuter\nE: jreuter@yaina.de\nW: http://yaina.de/jreuter/\nW: http://www.qsl.net/dl1bke/\nD: Generic Z8530 driver, AX.25 DAMA slave implementation\nD: Several AX.25 hacks\n\nN: Francois-Rene Rideau\nE: fare@tunes.org\nW: http://www.tunes.org/~fare\nD: petty kernel janitor (byteorder, ufs)\nS: 6, rue Augustin Thierry\nS: 75019 Paris\nS: France\n\nN: Rik van Riel\nE: riel@redhat.com\nW: http://www.surriel.com/\nD: Linux-MM site, Documentation/sysctl/*, swap/mm readaround\nD: kswapd fixes, random kernel hacker, rmap VM,\nD: nl.linux.org administrator, minor scheduler additions\nS: Red Hat Boston\nS: 3 Lan Drive\nS: Westford, MA 01886\nS: USA\n\nN: Pekka Riikonen\nE: priikone@poseidon.pspt.fi\nE: priikone@ssh.com\nD: Random kernel hacking and bug fixes\nD: International kernel patch project\nS: Kasarmikatu 11 A4\nS: 70110 Kuopio\nS: Finland\n\nN: Luca Risolia\nE: luca.risolia@studio.unibo.it\nP: 1024D/FCE635A4 88E8 F32F 7244 68BA 3958  5D40 99DA 5D2A FCE6 35A4\nD: V4L driver for W996[87]CF JPEG USB Dual Mode Camera Chips\nD: V4L2 driver for SN9C10x PC Camera Controllers\nS: Via Liberta' 41/A\nS: Osio Sotto, 24046, Bergamo\nS: Italy\n\nN: William E. Roadcap\nE: roadcapw@cfw.com\nW: http://www.cfw.com/~roadcapw\nD: Author of menu based configuration tool, Menuconfig.\nS: 1407 Broad Street\nS: Waynesboro, Virginia 22980\nS: USA\n\nN: Andrew J. Robinson\nE: arobinso@nyx.net\nW: http://www.nyx.net/~arobinso\nD: Hayes ESP serial port driver\n\nN: Florian La Roche\nE: rzsfl@rz.uni-sb.de\nE: flla@stud.uni-sb.de\nD: Net programs and kernel net hacker\nS: Gaildorfer Str. 27\nS: 7000 Stuttgart 50\nS: Germany\n\nN: Christoph Rohland\nE: hans-christoph.rohland@sap.com\nE: ch.rohland@gmx.net\nD: shm fs, SYSV semaphores, af_unix\nS: Neue Heimat Str. 8\nS: D-68789 St.Leon-Rot\nS: Germany\n\nN: Thiago Berlitz Rondon\nE: maluco@mileniumnet.com.br\nW: http://vivaldi.linuxms.com.br/~maluco\nD: Miscellaneous kernel hacker\nS: R. Anhanguera, 1487 - Ipiranga\nS: 79080-740 - Campo Grande - Mato Grosso do Sul\nS: Brazil\n\nN: Stephen Rothwell\nE: sfr@canb.auug.org.au\nW: http://www.canb.auug.org.au/~sfr\nP: 1024/BD8C7805 CD A4 9D 01 10 6E 7E 3B  91 88 FA D9 C8 40 AA 02\nD: Boot/setup/build work for setup > 2K\nD: Author, APM driver\nD: Directory notification\nS: 66 Maltby Circuit\nS: Wanniassa ACT 2903\nS: Australia\n\nN: Gerard Roudier\nE: groudier@free.fr\nD: Contributed to asynchronous read-ahead improvement\nS: 21 Rue Carnot\nS: 95170 Deuil La Barre\nS: France\n\nN: Sebastien Rougeaux\nE: Sebastien.Rougeaux@syseng.anu.edu.au\nD: IEEE 1394 OHCI module\nS: Research School of Information Science and Engineering\nS: The Australian National University, ACT 0200\nS: Australia\n\nN: Aristeu Sergio Rozanski Filho\nE: aris@cathedrallabs.org\nD: Support for EtherExpress 10 ISA (i82595) in eepro driver\nD: User level driver support for input\nS: R. Jose Serrato, 130 - Santa Candida\nS: 82640-320 - Curitiba - Paran�\nS: Brazil\n\nN: Alessandro Rubini\nE: rubini@ipvvis.unipv.it\nD: the gpm mouse server and kernel support for it\n\nN: Philipp Rumpf\nE: prumpf@tux.org\nD: random bugfixes\nS: Drausnickstrasse 29\nS: 91052 Erlangen\nS: Germany\n\nN: Paul `Rusty' Russell\nE: rusty@rustcorp.com.au\nW: http://ozlabs.org/~rusty\nD: Ruggedly handsome.\nD: netfilter, ipchains with Michael Neuling.\nS: 52 Moore St\nS: Turner ACT 2612\nS: Australia\n\nN: Richard Russon (FlatCap)\nE: kernel@flatcap.org\nW: http://www.flatcap.org\nD: NTFS support\nD: LDM support (Win2000/XP Logical Disk Manager/Dynamic Disks)\nS: 50 Swansea Road\nS: Reading\nS: United Kingdom\n\nN: Bill Ryder\nE: bryder@sgi.com\nD: FTDI_SIO usb/serial converter driver\nW: http://reality.sgi.com/bryder_wellington/ftdi_sio\nS: I/3 Walter St\nS: Wellington\nS: New Zealand\n\nN: Sampo Saaristo\nE: sambo@cs.tut.fi\nD: Co-author of Multi-Protocol Over ATM (MPOA)\nS: Tampere University of Technology / Telecom lab\nS: Hermiankatu 12C\nS: FIN-33720 Tampere\nS: Finland\n\nN: Thomas Sailer\nE: t.sailer@alumni.ethz.ch\nE: HB9JNX@HB9W.CHE.EU (packet radio)\nD: Baycom driver\nS: Markusstrasse 18\nS: 8006 Zuerich\nS: Switzerland\n\nN: Manuel Estrada Sainz\nD: Firmware loader (request_firmware)\n\nN: Wayne Salamon\nE: wsalamon@tislabs.com\nE: wsalamon@nai.com\nD: portions of the Linux Security Module (LSM) framework and security modules\n\nN: Robert Sanders\nE: gt8134b@prism.gatech.edu\nD: Dosemu\n\nN: Duncan Sands\nE: duncan.sands@free.fr\nW: http://topo.math.u-psud.fr/~sands\nD: Alcatel SpeedTouch USB driver\nS: 69 rue Dunois\nS: 75013 Paris\nS: France\n\nN: Hannu Savolainen\nE: hannu@opensound.com\nD: Maintainer of the sound drivers until 2.1.x days.\nD: Original compressed boot image support.\nS: Valurink. 4A11\nS: 03600 Karkkila\nS: Finland\n\nN: Deepak Saxena\nE: dsaxena@plexity.net\nD: I2O kernel layer (config, block, core, pci, net). I2O disk support for LILO\nD: XScale(IOP, IXP) porting and other random ARM bits\nS: Portland, OR\n\nN: Eric Schenk\nE: Eric.Schenk@dna.lth.se\nD: Random kernel debugging.\nD: SYSV Semaphore code rewrite.\nD: Network layer debugging.\nD: Dial on demand facility (diald).\nS: Dag Hammerskjolds v. 3E\nS: S-226 64 LUND\nS: Sweden\n\nN: Henning P. Schmiedehausen\nE: hps@tanstaafl.de\nD: added PCI support to the serial driver\nS: Buckenhof, Germany\n\nN: Michael Schmitz\nE:\nD: Macintosh IDE Driver\n\nN: Peter De Schrijver\nE: stud11@cc4.kuleuven.ac.be\nD: Mitsumi CD-ROM driver patches March version\nS: Molenbaan 29\nS: B2240 Zandhoven\nS: Belgium\n\nN: Martin Schulze\nE: joey@linux.de\nW: http://home.pages.de/~joey/\nD: Random Linux Hacker, Linux Promoter\nD: CD-List, Books-List, Ex-FAQ\nD: Linux-Support, -Mailbox, -Stammtisch\nD: several improvements to system programs\nS: Oldenburg\nS: Germany\n\nN: Robert Schwebel\nE: robert@schwebel.de\nW: http://www.schwebel.de\nD: Embedded hacker and book author,\nD: AMD Elan support for Linux\nS: Pengutronix\nS: Braunschweiger Strasse 79\nS: 31134 Hildesheim\nS: Germany\n\nN: Darren Senn\nE: sinster@darkwater.com\nD: Whatever I notice needs doing (so far: itimers, /proc)\nS: Post Office Box 64132\nS: Sunnyvale, California 94088-4132\nS: USA\n\nN: Simon Shapiro\nE: shimon@i-Connect.Net\nW: http://www.-i-Connect.Net/~shimon\nD: SCSI debugging\nD: Maintainer of the Debian Kernel packages\nS: 14355 SW Allen Blvd., Suite #140\nS: Beaverton, Oregon 97008\nS: USA\n\nN: Mike Shaver\nE: shaver@hungry.org\nW: http://www.hungry.org/~shaver/\nD: MIPS work, /proc/sys/net, misc net hacking\nS: 149 Union St.\nS: Kingston, Ontario\nS: Canada K7L 2P4\n\nN: John Shifflett\nE: john@geolog.com\nE: jshiffle@netcom.com\nD: Always IN2000 SCSI driver\nD: wd33c93 SCSI driver (linux-m68k)\nS: San Jose, California\nS: USA\n\nN: Robert Siemer\nE: Robert.Siemer@gmx.de\nP: 2048/C99A4289 2F DC 17 2E 56 62 01 C8  3D F2 AC 09 F2 E5 DD EE\nD: miroSOUND PCM20 radio RDS driver, ACI rewrite\nS: Klosterweg 28 / i309\nS: 76131 Karlsruhe\nS: Germany\n\nN: James Simmons \nE: jsimmons@infradead.org\nE: jsimmons@users.sf.net \nD: Frame buffer device maintainer\nD: input layer developement \nD: tty/console layer\nD: various mipsel devices \nS: 115 Carmel Avenue \nS: El Cerrito CA 94530\nS: USA \n\nN: Jaspreet Singh\nE: jaspreet@sangoma.com\nW: www.sangoma.com\nD: WANPIPE drivers & API Support for Sangoma S508/FT1 cards \nS: Sangoma Technologies Inc.,\nS: 1001 Denison Street\nS: Suite 101\nS: Markham, Ontario L3R 2Z6\nS: Canada\n\nN: Rick Sladkey\nE: jrs@world.std.com\nD: utility hacker: Emacs, NFS server, mount, kmem-ps, UPS debugger, strace, GDB\nD: library hacker: RPC, profil(3), realpath(3), regexp.h\nD: kernel hacker: unnamed block devs, NFS client, fast select, precision timer\nS: 24 Avon Place\nS: Arlington, Massachusetts 02174\nS: USA\n\nN: Craig Small\nE: csmall@triode.apana.org.au\nE: vk2xlz@gonzo.vk2xlz.ampr.org (packet radio)\nD: Gracilis PackeTwin device driver\nD: RSPF daemon \nS: 10 Stockalls Place\nS: Minto, NSW, 2566\nS: Australia\n\nN: Stephen Smalley\nE: sds@epoch.ncsc.mil\nD: portions of the Linux Security Module (LSM) framework and security modules\n\nN: Chris Smith\nE: csmith@convex.com\nD: Read only HPFS filesystem\nS: Richardson, Texas\nS: USA\n\nN: Christopher Smith\nE: x@xman.org\nD: Tulip net driver hacker\n\nN: Mark Smith\nE: mark.smith@comdev.cc\nD: Multicast support in bonding driver\n\nN: Miquel van Smoorenburg\nE: miquels@cistron.nl\nD: Kernel and net hacker. Sysvinit, minicom. doing Debian stuff.\nS: Cistron Internet Services\nS: PO-Box 297\nS: 2400 AG, Alphen aan den Rijn\nS: The Netherlands\n\nN: Scott Snyder\nE: snyder@fnald0.fnal.gov\nD: ATAPI cdrom driver\nS: MS 352, Fermilab\nS: Post Office Box 500\nS: Batavia, Illinois 60510\nS: USA\n\nN: Leo Spiekman\nE: leo@netlabs.net\nW: http://www.netlabs.net/hp/leo/\nD: Optics Storage 8000AT cdrom driver\nS: Cliffwood, New Jersey 07721\nS: USA\n\nN: Manfred Spraul\nE: manfred@colorfullife.com\nW: http://www.colorfullife.com/~manfred\nD: Lots of tiny hacks. Larger improvments to SysV IPC msg,\nD: slab, pipe, select.\nS: 71701 Schwieberdingen\nS: Germany\n\nN: Andrew Stanley-Jones\nE: asj@lanmedia.com\nD: LanMedia Corp. Device WAN card device driver\nS: #102, 686 W. Maude Ave\nS: Sunyvale, CA 94086\nS: USA\n\nN: Michael Still\nE: mikal@stillhq.com\nW: http://www.stillhq.com\nD: Various janitorial patches\nD: mandocs and mandocs_install build targets\nS: (Email me and ask)\nS: Australia\n\nN: Henrik Storner\nE: storner@image.dk\nW: http://www.image.dk/~storner/\nW: http://www.sslug.dk/\nD: Configure script: Invented tristate for module-configuration\nD: vfat/msdos integration, kerneld docs, Linux promotion\nD: Miscellaneous bug-fixes\nS: Chr. Winthersvej 1 B, st.th.\nS: DK-1860 Frederiksberg C\nS: Denmark\n\nN: Drew Sullivan\nE: drew@ss.org\nW: http://www.ss.org/\nP: 1024/ACFFA969 5A 9C 42 AB E4 24 82 31  99 56 00 BF D3 2B 25 46\nD: iBCS2 developer\nS: 22 Irvington Cres.\nS: Willowdale, Ontario\nS: Canada M2N 2Z1\n\nN: Adam Sulmicki\nE: adam@cfar.umd.edu\nW: http://www.eax.com\nD: core networking fixes\nD: patch-kernel enhancements\nD: misc kernel fixes and updates\n\nN: Adrian Sun\nE: asun@cobaltnet.com\nD: hfs support\nD: alpha rtc port, random appletalk fixes\nS: Department of Zoology, University of Washington\nS: Seattle, WA  98195-1800\nS: USA\n\nN: Eugene Surovegin\nE: ebs@ebshome.net\nW: http://kernel.ebshome.net/\nP: 1024D/AE5467F1 FF22 39F1 6728 89F6 6E6C  2365 7602 F33D AE54 67F1\nD: Embedded PowerPC 4xx: I2C, PIC and random hacks/fixes\nS: Sunnyvale, California 94085\nS: USA\n\nN: Corey Thomas\nE: corey@world.std.com\nW: http://world.std.com/~corey/index.html\nD: Raylink/WebGear wireless LAN device driver (ray_cs) author\nS: 145 Howard St.\nS: Northborough, MA 01532\nS: USA\n\nN: Tommy Thorn\nE: Tommy.Thorn@irisa.fr\nW: http://www.irisa.fr/prive/thorn/index.html\nP: 512/B4AFC909 BC BF 6D B1 52 26 1E D6  E3 2F A3 24 2A 84 FE 21\nD: Device driver hacker (aha1542 & plip)\nS: IRISA\nS: Universit=E9 de Rennes I\nS: F-35042 Rennes Cedex\nS: France\n\nN: Jon Tombs\nE: jon@gte.esi.us.es\nW: http://www.esi.us.es/~jon\nD: NFS mmap()\nD: XF86_S3\nD: Kernel modules\nD: Parts of various other programs (xfig, open, ...)\nS: C/ Federico Garcia Lorca 1 10-A\nS: Sevilla 41005\nS: Spain\n\nN: Linus Torvalds\nE: torvalds@osdl.org\nD: Original kernel hacker\nS: 12725 SW Millikan Way, Suite 400\nS: Beaverton, Oregon 97005\nS: USA\n\nN: Marcelo W. Tosatti\nE: marcelo.tosatti@cyclades.com\nD: Miscellaneous kernel hacker\nD: v2.4 kernel maintainer\nD: Current pc300/cyclades maintainer\nS: Cyclades Corporation\nS: Av Cristovao Colombo, 462. Floresta.\nS: Porto Alegre\nS: Brazil\n\nN: Stefan Traby\nE: stefan@quant-x.com\nD: Minor Alpha kernel hacks\nS: Mitterlasznitzstr. 13\nS: 8302 Nestelbach\nS: Austria\n\nN: Jeff Tranter\nE: tranter@pobox.com\nD: Enhancements to Joystick driver\nD: Author of Sound HOWTO and CD-ROM HOWTO\nD: Author of several small utilities\nD: (bogomips, scope, eject, statserial)\nS: 1 Laurie Court\nS: Kanata, Ontario\nS: Canada K2L 1S2\n\nN: Andrew Tridgell\nE: tridge@samba.org\nW: http://samba.org/tridge/\nD: dosemu, networking, samba\nS: 3 Ballow Crescent\nS: MacGregor A.C.T 2615\nS: Australia\n\nN: Winfried Tr�mper\nE: winni@xpilot.org\nW: http://www.shop.de/~winni/\nD: German HOWTO, Crash-Kurs Linux (German, 100 comprehensive pages)\nD: CD-Writing HOWTO, various mini-HOWTOs\nD: One-week tutorials on Linux twice a year (free of charge)\nD: Linux-Workshop K�ln (aka LUG Cologne, Germany), Installfests\nS: Tacitusstr. 6\nS: D-50968 K�ln\n\nN: Tsu-Sheng Tsao\nE: tsusheng@scf.usc.edu\nD: IGMP(Internet Group Management Protocol) version 2\nS: 2F 14 ALY 31 LN 166 SEC 1 SHIH-PEI RD\nS: Taipei \nS: Taiwan 112\nS: Republic of China\nS: 24335 Delta Drive\nS: Diamond Bar, California 91765\nS: USA\n\nN: Theodore Ts'o\nE: tytso@mit.edu\nD: Random Linux hacker\nD: Maintainer of tsx-11.mit.edu ftp archive\nD: Maintainer of c.o.l.* Usenet<->mail gateway\nD: Author of serial driver\nD: Author of the new e2fsck\nD: Author of job control and system call restart code\nD: Author of ramdisk device driver\nD: Author of loopback device driver\nD: Author of /dev/random driver\nS: MIT Room E40-343\nS: 1 Amherst Street\nS: Cambridge, Massachusetts 02139\nS: USA\n\nN: Simmule Turner\nE: sturner@tele-tv.com\nD: Added swapping to filesystem\nS: 4226 Landgreen Street\nS: Rockville, Maryland 20853\nS: USA\n\nN: Stephen Tweedie\nE: sct@redhat.com\nP: 1024/E7A417AD E2 FE A4 20 34 EC ED FC 7D 7E 67 8D E0 31 D1 69\nP: 1024D/43BE7544 D2A4 8556 08E6 90E7 076C  BA3F 243F 20A4 43BE 7544\nD: Second extended file system developer\nD: General filesystem hacker\nD: kswap vm management code\nS: 44 Campbell Park Crescent\nS: Edinburgh EH13 0HT\nS: United Kingdom\n\nN: Thomas Uhl\nE: uhl@sun1.rz.fh-heilbronn.de\nD: Application programmer\nD: Linux promoter\nD: Author of a German book on Linux\nS: Obere Heerbergstrasse 17\nS: 97078 Wuerzburg\nS: Germany\n\nN: Greg Ungerer\nE: gerg@snapgear.com\nD: uClinux kernel hacker\nD: Port uClinux to the Motorola ColdFire CPU\nD: Author of Stallion multiport serial drivers\nS: SnapGear Inc.\nS: 825 Stanley St\nS: Woolloongabba. QLD. 4102\nS: Australia\n\nN: Jeffrey A. Uphoff\nE: juphoff@transmeta.com\nE: jeff.uphoff@linux.org\nP: 1024/9ED505C5 D7 BB CA AA 10 45 40 1B  16 19 0A C0 38 A0 3E CB\nD: Linux Security/Alert mailing lists' moderator/maintainer.\nD: NSM (rpc.statd) developer.\nD: PAM S/Key module developer.\nD: 'dip' contributor.\nD: AIPS port, astronomical community support.\nS: Transmeta Corporation\nS: 2540 Mission College Blvd.\nS: Santa Clara, CA 95054\nS: USA\n\nN: Matthias Urlichs\nE: smurf@smurf.noris.de\nE: smurf@debian.org\nE: matthias@urlichs.de\nD: Consultant, developer, kernel hacker\nD: In a previous life, worked on Streams/ISDN/BSD networking code for Linux\nS: Schleiermacherstrasse 12\nS: 90491 Nuernberg\nS: Germany\n\nN: Geert Uytterhoeven\nE: geert@linux-m68k.org\nW: http://home.tvd.be/cr26864/\nP: 1024/862678A6 C51D 361C 0BD1 4C90 B275  C553 6EEA 11BA 8626 78A6\nD: m68k/Amiga and PPC/CHRP Longtrail coordinator\nD: Frame buffer device and XF68_FBDev maintainer\nD: m68k IDE maintainer\nD: Amiga Zorro maintainer\nD: Amiga Buddha and Catweasel chipset IDE\nD: Atari Falcon chipset IDE\nD: Amiga Gayle chipset IDE\nD: mipsel NEC DDB Vrc-5074\nS: Emiel Vlieberghlaan 2A/21\nS: B-3010 Kessel-Lo\nS: Belgium\n\nN: Chris Vance\nE: cvance@tislabs.com\nE: cvance@nai.com\nD: portions of the Linux Security Module (LSM) framework and security modules\n\nN: Petr Vandrovec\nE: vandrove@vc.cvut.cz\nD: Small contributions to ncpfs\nD: Matrox framebuffer driver\nS: Chudenicka 8\nS: 10200 Prague 10, Hostivar\nS: Czech Republic\n\nN: Heikki Vatiainen\nE: hessu@cs.tut.fi\nD: Co-author of Multi-Protocol Over ATM (MPOA), some LANE hacks\nS: Tampere University of Technology / Telecom lab\nS: Hermiankatu 12C\nS: FIN-33720 Tampere\nS: Finland\n\nN: Andrew Veliath\nE: andrewtv@usa.net\nD: Turtle Beach MultiSound sound driver\nS: USA\n\nN: Dirk Verworner\nD: Co-author of German book ``Linux-Kernel-Programmierung''\nD: Co-founder of Berlin Linux User Group\n\nN: Patrick Volkerding\nE: volkerdi@ftp.cdrom.com\nD: Produced the Slackware distribution, updated the SVGAlib\nD: patches for ghostscript, worked on color 'ls', etc.\nS: 301 15th Street S.\nS: Moorhead, Minnesota 56560\nS: USA \n\nN: Jos Vos\nE: jos@xos.nl\nW: http://www.xos.nl/\nD: Various IP firewall updates, ipfwadm\nS: X/OS Experts in Open Systems BV\nS: Kruislaan 419\nS: 1098 VA Amsterdam \nS: The Netherlands\n\nN: Jeroen Vreeken\nE: pe1rxq@amsat.org\nW: http://www.chello.nl/~j.vreeken/\nD: SE401 usb webcam driver\nD: ZD1201 usb wireless lan driver\nS: Maastrichterweg 63\nS: 5554 GG Valkenswaard\nS: The Netherlands\n\nN: Peter Shaobo Wang\nE: pwang@mmdcorp.com\nW: http://www.mmdcorp.com/pw/linux\nD: Driver for Interphase ATM (i)Chip SAR adapter card family (x575, x525, x531).\nS: 1513 Brewster Dr.\nS: Carrollton, TX 75010\nS: USA\n\nN: Tim Waugh\nE: tim@cyberelk.net\nD: Co-architect of the parallel-port sharing system\nS: 17 Curling Vale\nS: GUILDFORD\nS: Surrey\nS: GU2 7PJ\nS: United Kingdom\n\nN: Juergen Weigert\nE: jnweiger@immd4.informatik.uni-erlangen.de\nD: The Linux Support Team Erlangen\n\nN: David Weinehall\nE: tao@acc.umu.se\nW: http://www.acc.umu.se/~tao/\nW: http://www.acc.umu.se/~mcalinux/\nD: Fixes for the NE/2-driver\nD: Miscellaneous MCA-support\nD: Cleanup of the Config-files\nS: Axtorpsvagen 40:20\nS: S-903 37  UMEA\nS: Sweden\n\nN: Matt Welsh\nE: mdw@metalab.unc.edu\nW: http://www.cs.berkeley.edu/~mdw\nD: Original Linux Documentation Project coordinator\nD: Author, "Running Linux" (O'Reilly)\nD: Author, "Linux Installation and Getting Started" (LDP) and several HOWTOs\nD: Linuxdoc-SGML formatting system (now SGML-Tools)\nD: Device drivers for various high-speed network interfaces (Myrinet, ATM)\nD: Keithley DAS1200 device driver\nD: Original maintainer of sunsite WWW and FTP sites\nD: Original moderator of c.o.l.announce and c.o.l.answers\nS: Computer Science Division\nS: UC Berkeley\nS: Berkeley, CA 94720-1776\nS: USA\n\nN: Harald Welte\nE: laforge@netfilter.org\nP: 1024D/30F48BFF DBDE 6912 8831 9A53 879B  9190 5DA5 C655 30F4 8BFF\nW: http://gnumonks.org/users/laforge\nD: netfilter: new nat helper infrastructure\nD: netfilter: ULOG, ECN, DSCP target\nD: netfilter: TTL match\nD: netfilter: IPv6 mangle table\nD: netfilter: various other hacks\nS: Berlin\nS: Germany\n\nN: Bill Wendling\nE: wendling@ganymede.isdn.uiuc.edu\nW: http://www.ncsa.uiuc.edu/~wendling/\nD: Various random hacks. Mostly on poll/select logic.\nS: 605 E. Springfield Ave.\nS: Champaign, IL 61820\nS: USA\n\nN: Mike Westall\nD: IBM Turboways 25 ATM Device Driver\nE: westall@cs.clemson.edu\nS: Department of Computer Science\nS: Clemson University\nS: Clemson SC 29634 USA\n\nN: Greg Wettstein\nE: greg@wind.rmcc.com\nD: Filesystem valid flag for MINIX filesystem.\nD: Minor kernel debugging.\nD: Development and maintenance of sysklogd.\nD: Monitoring of development kernels for long-term stability.\nD: Early implementations of Linux in a commercial environment.\nS: Dr. Greg Wettstein, Ph.D.\nS: Oncology Research Division Computing Facility\nS: Roger Maris Cancer Center\nS: 820 4th St. N.\nS: Fargo, North Dakota 58122\nS: USA\n\nN: Steven Whitehouse\nE: SteveW@ACM.org\nW: http://www.chygwyn.com/~steve\nD: Linux DECnet project: http://www.sucs.swan.ac.uk/~rohan/DECnet/index.html\nD: Minor debugging of other networking protocols.\nD: Misc bug fixes and filesystem development\n\nN: Hans-Joachim Widmaier\nE: hjw@zvw.de\nD: AFFS rewrite\nS: Eichenweg 16\nS: 73650 Winterbach\nS: Germany\n\nN: Urban Widmark\nE: urban@svenskatest.se\nD: via-rhine, misc net driver hacking\n\nN: Marco van Wieringen\nE: mvw@planets.elm.net\nD: Author of process accounting and diskquota\nS: Breeburgsingel 12\nS: 2135 CN Hoofddorp\nS: The Netherlands\n\nN: Matthew Wilcox\nE: matthew@wil.cx\nW: ftp://ftp.uk.linux.org/pub/linux/people/willy/\nD: Linux/PARISC hacker.  Filesystem hacker.  Random other hacking.  Custom\nD: PPC port hacking.\n\nN: G\"unter Windau\nE: gunter@mbfys.kun.nl\nD: Some bug fixes in the polling printer driver (lp.c)\nS: University of Nijmegen\nS: Geert-Grooteplein Noord 21\nS: 6525 EZ Nijmegen\nS: The Netherlands\n\nN: Ulrich Windl\nE: Ulrich.Windl@rz.uni-regensburg.de\nP: 1024/E843660D CF D7 43 A1 5A 49 14 25  7C 04 A0 6E 4C 3A AC 6D\nD: Supports NTP on Linux.  Added PPS code.  Fixed bugs in adjtimex().\nS: Alte Regensburger Str. 11a\nS: 93149 Nittenau\nS: Germany\n\nN: Lars Wirzenius\nE: liw@iki.fi\nD: Linux System Administrator's Guide, author, former maintainer\nD: comp.os.linux.announce, former moderator\nD: Linux Documentation Project, co-founder\nD: Original sprintf in kernel\nD: Original kernel README (for version 0.97)\nD: Linux News (electronic magazine, now dead), founder and former editor\nD: Meta-FAQ, originator, former maintainer\nD: INFO-SHEET, former maintainer\nD: Author of the longest-living linux bug\n\nN: Jonathan Woithe\nE: jwoithe@physics.adelaide.edu.au\nW: http://www.physics.adelaide.edu.au/~jwoithe\nD: ALS-007 sound card extensions to Sound Blaster driver\nS: 20 Jordan St\nS: Valley View, SA 5093\nS: Australia\n\nN: Clifford Wolf\nE: god@clifford.at\nW: http://www.clifford.at/\nD: Menuconfig/lxdialog improvement\nS: Foehrengasse 16\nS: A-2333 Leopoldsdorf b. Wien\nS: Austria\n\nN: Roger E. Wolff\nE: R.E.Wolff@BitWizard.nl\nD: Written kmalloc/kfree\nD: Written Specialix IO8+ driver\nD: Written Specialix SX driver\nS: van Bronckhorststraat 12\nS: 2612 XV Delft\nS: The Netherlands\n\nN: David Woodhouse\nE: dwmw2@infradead.org\nD: ARCnet stuff, Applicom board driver, SO_BINDTODEVICE,\nD: some Alpha platform porting from 2.0, Memory Technology Devices,\nD: Acquire watchdog timer, PC speaker driver maintenance,\nD: various other stuff that annoyed me by not working.\nS: c/o Red Hat Engineering\nS: Rustat House\nS: 60 Clifton Road\nS: Cambridge. CB1 7EG\nS: England\n\nN: Chris Wright\nE: chrisw@osdl.org\nD: hacking on LSM framework and security modules.\nS: c/o OSDL\nS: 12725 SW Millikan Way, Suite 400\nS: Beaverton, OR 97005\nS: USA\n\nN: Michal Wronski\nE: wrona@mat.uni.torun.pl\nW: http://www.mat.uni.torun.pl/~wrona\nD: POSIX message queues fs (with K. Benedyczak)\nS: ul. Teczowa 23/12\nS: 80-680 Gdansk-Sobieszewo\nS: Poland\n\nN: Frank Xia\nE: qx@math.columbia.edu\nD: Xiafs filesystem [defunct]\nS: 542 West 112th Street, 5N\nS: New York, New York 10025\nS: USA\n\nN: Victor Yodaiken\nE: yodaiken@fsmlabs.com\nD: RTLinux (RealTime Linux)\nS: POB 1822 \nS: Socorro NM, 87801\nS: USA\n\nN: Hiroshi YOKOTA\nE: yokota@netlab.is.tsukuba.ac.jp\nD: Workbit NinjaSCSI-3/32Bi PCMCIA driver\nD: Workbit NinjaSCSI-32Bi/UDE driver\nS: Japan\n\nN: Hideaki YOSHIFUJI\nE: hideaki@yoshifuji.org\nE: yoshfuji@linux-ipv6.org\nW: http://www.yoshifuji.org/~hideaki/\nP: 1024D/E0620EEA 9022 65EB 1ECF 3AD1 0BDF  80D8 4807 F894 E062 0EEA\nD: IPv6 and other networking related stuff\nD: USAGI/WIDE Project, Keio University\nS: Jeunet Palace Kawasaki #1-201, 10-2, Furukawa-cho, Saiwai-ku\nS: Kawasaki, Kanagawa 212-0025\nS: Japan\n\nN: Eric Youngdale\nE: eric@andante.org\nW: http://www.andante.org\nD: General kernel hacker\nD: SCSI iso9660 and ELF\nS: 6389 Hawk View Lane\nS: Alexandria, Virginia 22312\nS: USA\n\nN: Niibe Yutaka\nE: gniibe@mri.co.jp\nD: PLIP driver\nD: Asynchronous socket I/O in the NET code\nS: Mitsubishi Research Institute, Inc.\nS: ARCO Tower 1-8-1 Shimomeguro Meguro-ku\nS: Tokyo 153\nS: Japan\n\nN: James R. Van Zandt\nE: jrv@vanzandt.mv.com\nP: 1024/E298966D F0 37 4F FD E5 7E C5 E6  F1 A0 1E 22 6F 46 DA 0C\nD: Author and maintainer of the Double Talk speech synthesizer driver\nS: 27 Spencer Drive\nS: Nashua, New Hampshire 03062\nS: USA\n\nN: Orest Zborowski\nE: orestz@eskimo.com\nD: XFree86 and kernel development\nS: 1507 145th Place SE #B5\nS: Bellevue, Washington 98007\nS: USA\n\nN: Richard Zidlicky\nE: rz@linux-m68k.org, rdzidlic@geocities.com\nW: http://www.geocities.com/rdzidlic\nD: Q40 port - see arch/m68k/q40/README\nD: various m68k hacks\nS: Germany\n\nN: Werner Zimmermann\nE: Werner.Zimmermann@fht-esslingen.de\nD: CDROM driver "aztcd" (Aztech/Okano/Orchid/Wearnes)\nS: Flandernstrasse 101\nS: D-73732 Esslingen\nS: Germany\n\nN: Leonard N. Zubkoff\nW: http://www.dandelion.com/Linux/\nD: BusLogic SCSI driver\nD: Mylex DAC960 PCI RAID driver\nD: Miscellaneous kernel fixes\n\nN: Alessandro Zummo\nE: azummo@ita.flashnet.it\nW: http://freepage.logicom.it/azummo/\nD: CMI8330 support is sb_card.c\nD: ISAPnP fixes in sb_card.c\nS: Italy\n\nN: Marc Zyngier\nE: maz@wild-wind.fr.eu.org\nW: http://www.misterjones.org\nD: MD driver\nD: EISA/sysfs subsystem\nS: France\n\n\n# Don't add your name here, unless you really _are_ after Marc\n# alphabetically. Leonard used to be very proud of being the \n# last entry, and he'll get positively pissed if he can't even\n# be second-to-last.  (and this file really _is_ supposed to be\n# in alphabetic order)\n","+N: Jaya Kumar+E: jayalk@intworks.biz+W: http://www.intworks.biz+D: Arc monochrome LCD framebuffer driver, x86 reboot fixups+S: Gurgaon, India+S: Kuala Lumpur, Malaysia+"
